include "qelib1.inc";
gate intrinsic_swap__ a, b {
	cx a, b;
	cx b, a;
	cx a, b;
}
gate intrinsic_rev_cx__ a, b {
	h a;
	h b;
	cx b, a;
	h b;
	h a;
}
creg ans[8];
creg carryout[1];
qreg q[20];
U(pi, 0, pi) q[6];
U(pi, 0, pi) q[11];
U(pi, 0, pi) q[2];
U(pi, 0, pi) q[13];
U(pi, 0, pi) q[3];
U(pi, 0, pi) q[19];
U(pi, 0, pi) q[12];
U(pi, 0, pi) q[16];
U(pi, 0, pi) q[10];
U(pi, 0, pi) q[16];
CX q[6], q[11];
CX q[6], q[5];
U((pi / 2), 0, pi) q[6];
CX q[11], q[6];
U(0, 0, (-(pi / 4))) q[6];
CX q[5], q[6];
U(0, 0, (pi / 4)) q[6];
CX q[11], q[6];
U(0, 0, (-(pi / 4))) q[6];
CX q[5], q[6];
U(0, 0, (pi / 4)) q[11];
U(0, 0, (pi / 4)) q[6];
U((pi / 2), 0, pi) q[6];
CX q[5], q[11];
U(0, 0, (pi / 4)) q[5];
U(0, 0, (-(pi / 4))) q[11];
CX q[5], q[11];
CX q[7], q[2];
CX q[7], q[6];
U((pi / 2), 0, pi) q[7];
CX q[2], q[7];
U(0, 0, (-(pi / 4))) q[7];
CX q[6], q[7];
U(0, 0, (pi / 4)) q[7];
CX q[2], q[7];
U(0, 0, (-(pi / 4))) q[7];
CX q[6], q[7];
U(0, 0, (pi / 4)) q[2];
U(0, 0, (pi / 4)) q[7];
U((pi / 2), 0, pi) q[7];
CX q[6], q[2];
U(0, 0, (pi / 4)) q[6];
U(0, 0, (-(pi / 4))) q[2];
CX q[6], q[2];
CX q[8], q[13];
CX q[8], q[7];
U((pi / 2), 0, pi) q[8];
CX q[13], q[8];
U(0, 0, (-(pi / 4))) q[8];
CX q[7], q[8];
U(0, 0, (pi / 4)) q[8];
CX q[13], q[8];
U(0, 0, (-(pi / 4))) q[8];
CX q[7], q[8];
U(0, 0, (pi / 4)) q[13];
U(0, 0, (pi / 4)) q[8];
U((pi / 2), 0, pi) q[8];
CX q[7], q[13];
U(0, 0, (pi / 4)) q[7];
U(0, 0, (-(pi / 4))) q[13];
CX q[7], q[13];
CX q[9], q[3];
CX q[9], q[8];
U((pi / 2), 0, pi) q[9];
CX q[3], q[9];
U(0, 0, (-(pi / 4))) q[9];
CX q[8], q[9];
U(0, 0, (pi / 4)) q[9];
CX q[3], q[9];
U(0, 0, (-(pi / 4))) q[9];
CX q[8], q[9];
U(0, 0, (pi / 4)) q[3];
U(0, 0, (pi / 4)) q[9];
U((pi / 2), 0, pi) q[9];
CX q[8], q[3];
U(0, 0, (pi / 4)) q[8];
U(0, 0, (-(pi / 4))) q[3];
CX q[8], q[3];
CX q[9], q[14];
U((pi / 2), 0, pi) q[9];
CX q[3], q[9];
U(0, 0, (-(pi / 4))) q[9];
CX q[8], q[9];
U(0, 0, (pi / 4)) q[9];
CX q[3], q[9];
U(0, 0, (-(pi / 4))) q[9];
CX q[8], q[9];
U(0, 0, (pi / 4)) q[3];
U(0, 0, (pi / 4)) q[9];
U((pi / 2), 0, pi) q[9];
CX q[8], q[3];
U(0, 0, (pi / 4)) q[8];
U(0, 0, (-(pi / 4))) q[3];
CX q[8], q[3];
CX q[9], q[8];
CX q[8], q[3];
U((pi / 2), 0, pi) q[8];
CX q[13], q[8];
U(0, 0, (-(pi / 4))) q[8];
CX q[7], q[8];
U(0, 0, (pi / 4)) q[8];
CX q[13], q[8];
U(0, 0, (-(pi / 4))) q[8];
CX q[7], q[8];
U(0, 0, (pi / 4)) q[13];
U(0, 0, (pi / 4)) q[8];
U((pi / 2), 0, pi) q[8];
CX q[7], q[13];
U(0, 0, (pi / 4)) q[7];
U(0, 0, (-(pi / 4))) q[13];
CX q[7], q[13];
CX q[8], q[7];
CX q[7], q[13];
U((pi / 2), 0, pi) q[7];
CX q[2], q[7];
U(0, 0, (-(pi / 4))) q[7];
CX q[6], q[7];
U(0, 0, (pi / 4)) q[7];
CX q[2], q[7];
U(0, 0, (-(pi / 4))) q[7];
CX q[6], q[7];
U(0, 0, (pi / 4)) q[2];
U(0, 0, (pi / 4)) q[7];
U((pi / 2), 0, pi) q[7];
CX q[6], q[2];
U(0, 0, (pi / 4)) q[6];
U(0, 0, (-(pi / 4))) q[2];
CX q[6], q[2];
CX q[7], q[6];
CX q[6], q[2];
U((pi / 2), 0, pi) q[6];
CX q[11], q[6];
U(0, 0, (-(pi / 4))) q[6];
CX q[5], q[6];
U(0, 0, (pi / 4)) q[6];
CX q[11], q[6];
U(0, 0, (-(pi / 4))) q[6];
CX q[5], q[6];
U(0, 0, (pi / 4)) q[11];
U(0, 0, (pi / 4)) q[6];
U((pi / 2), 0, pi) q[6];
CX q[5], q[11];
U(0, 0, (pi / 4)) q[5];
U(0, 0, (-(pi / 4))) q[11];
CX q[5], q[11];
CX q[6], q[5];
CX q[5], q[11];
CX q[18], q[19];
CX q[18], q[14];
U((pi / 2), 0, pi) q[18];
CX q[19], q[18];
U(0, 0, (-(pi / 4))) q[18];
CX q[14], q[18];
U(0, 0, (pi / 4)) q[18];
CX q[19], q[18];
U(0, 0, (-(pi / 4))) q[18];
CX q[14], q[18];
U(0, 0, (pi / 4)) q[19];
U(0, 0, (pi / 4)) q[18];
U((pi / 2), 0, pi) q[18];
CX q[14], q[19];
U(0, 0, (pi / 4)) q[14];
U(0, 0, (-(pi / 4))) q[19];
CX q[14], q[19];
CX q[17], q[12];
CX q[17], q[18];
U((pi / 2), 0, pi) q[17];
CX q[12], q[17];
U(0, 0, (-(pi / 4))) q[17];
CX q[18], q[17];
U(0, 0, (pi / 4)) q[17];
CX q[12], q[17];
U(0, 0, (-(pi / 4))) q[17];
CX q[18], q[17];
U(0, 0, (pi / 4)) q[12];
U(0, 0, (pi / 4)) q[17];
U((pi / 2), 0, pi) q[17];
intrinsic_swap__ q[5], q[0];
intrinsic_swap__ q[18], q[13];
intrinsic_swap__ q[1], q[6];
intrinsic_swap__ q[7], q[12];
intrinsic_swap__ q[12], q[17];
intrinsic_swap__ q[17], q[11];
intrinsic_swap__ q[11], q[6];
intrinsic_swap__ q[6], q[1];
CX q[13], q[7];
U(0, 0, (pi / 4)) q[13];
U(0, 0, (-(pi / 4))) q[7];
CX q[13], q[7];
CX q[11], q[16];
CX q[11], q[12];
U((pi / 2), 0, pi) q[11];
CX q[16], q[11];
U(0, 0, (-(pi / 4))) q[11];
CX q[12], q[11];
U(0, 0, (pi / 4)) q[11];
CX q[16], q[11];
U(0, 0, (-(pi / 4))) q[11];
CX q[12], q[11];
U(0, 0, (pi / 4)) q[16];
U(0, 0, (pi / 4)) q[11];
U((pi / 2), 0, pi) q[11];
CX q[12], q[16];
U(0, 0, (pi / 4)) q[12];
U(0, 0, (-(pi / 4))) q[16];
CX q[12], q[16];
CX q[5], q[10];
CX q[5], q[11];
U((pi / 2), 0, pi) q[5];
CX q[10], q[5];
U(0, 0, (-(pi / 4))) q[5];
CX q[11], q[5];
U(0, 0, (pi / 4)) q[5];
CX q[10], q[5];
U(0, 0, (-(pi / 4))) q[5];
CX q[11], q[5];
U(0, 0, (pi / 4)) q[10];
U(0, 0, (pi / 4)) q[5];
U((pi / 2), 0, pi) q[5];
CX q[11], q[10];
U(0, 0, (pi / 4)) q[11];
U(0, 0, (-(pi / 4))) q[10];
CX q[11], q[10];
CX q[5], q[0];
U((pi / 2), 0, pi) q[5];
CX q[10], q[5];
U(0, 0, (-(pi / 4))) q[5];
CX q[11], q[5];
U(0, 0, (pi / 4)) q[5];
CX q[10], q[5];
U(0, 0, (-(pi / 4))) q[5];
CX q[11], q[5];
U(0, 0, (pi / 4)) q[10];
U(0, 0, (pi / 4)) q[5];
U((pi / 2), 0, pi) q[5];
CX q[11], q[10];
U(0, 0, (pi / 4)) q[11];
U(0, 0, (-(pi / 4))) q[10];
CX q[11], q[10];
CX q[5], q[11];
CX q[11], q[10];
U((pi / 2), 0, pi) q[11];
CX q[16], q[11];
U(0, 0, (-(pi / 4))) q[11];
CX q[12], q[11];
U(0, 0, (pi / 4)) q[11];
CX q[16], q[11];
U(0, 0, (-(pi / 4))) q[11];
CX q[12], q[11];
U(0, 0, (pi / 4)) q[16];
U(0, 0, (pi / 4)) q[11];
U((pi / 2), 0, pi) q[11];
CX q[12], q[16];
U(0, 0, (pi / 4)) q[12];
U(0, 0, (-(pi / 4))) q[16];
CX q[12], q[16];
CX q[11], q[12];
CX q[12], q[16];
U((pi / 2), 0, pi) q[12];
CX q[7], q[12];
U(0, 0, (-(pi / 4))) q[12];
CX q[13], q[12];
U(0, 0, (pi / 4)) q[12];
CX q[7], q[12];
U(0, 0, (-(pi / 4))) q[12];
CX q[13], q[12];
U(0, 0, (pi / 4)) q[7];
U(0, 0, (pi / 4)) q[12];
U((pi / 2), 0, pi) q[12];
CX q[13], q[7];
U(0, 0, (pi / 4)) q[13];
U(0, 0, (-(pi / 4))) q[7];
CX q[13], q[7];
CX q[12], q[13];
CX q[13], q[7];
U((pi / 2), 0, pi) q[13];
intrinsic_rev_cx__ q[19], q[13];
U(0, 0, (-(pi / 4))) q[13];
CX q[14], q[13];
U(0, 0, (pi / 4)) q[13];
intrinsic_rev_cx__ q[19], q[13];
U(0, 0, (-(pi / 4))) q[13];
CX q[14], q[13];
U(0, 0, (pi / 4)) q[19];
U(0, 0, (pi / 4)) q[13];
U((pi / 2), 0, pi) q[13];
CX q[14], q[19];
U(0, 0, (pi / 4)) q[14];
U(0, 0, (-(pi / 4))) q[19];
CX q[14], q[19];
CX q[13], q[14];
CX q[14], q[19];
measure q[17] -> ans[0];
measure q[2] -> ans[1];
measure q[18] -> ans[2];
measure q[3] -> ans[3];
measure q[19] -> ans[4];
measure q[7] -> ans[5];
measure q[16] -> ans[6];
measure q[10] -> ans[7];
measure q[0] -> carryout[0];
