<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Transform/LayersBuilderPass.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_582f290f049f08c25ab9fc887a9170ac.xhtml">Transform</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">LayersBuilderPass.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d8/d9d/LayersBuilderPass_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/d33/LayersBuilderPass_8h.xhtml">enfield/Transform/LayersBuilderPass.h</a>&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/d94/XbitToNumberPass_8h.xhtml">enfield/Transform/XbitToNumberPass.h</a>&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d4/d73/QModule_8h.xhtml">enfield/Transform/QModule.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/d82/PassCache_8h.xhtml">enfield/Transform/PassCache.h</a>&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d0/d8d/NodeVisitor_8h.xhtml">enfield/Analysis/NodeVisitor.h</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">using namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;uint8_t <a class="code" href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml#a824c262f38ab8c90e2389ce0a22ac01d">LayersBuilderPass::ID</a> = 0;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a> {</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml">   14</a></span>&#160;    <span class="keyword">class </span><a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml">UsedBitsVisitor</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor</a> {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae762752f257cdd7c6da81d035b0008cc">   16</a></span>&#160;            <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule::Ref</a> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae762752f257cdd7c6da81d035b0008cc">mMod</a>;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae765ed9cb2bd48c13ab9f6032e47c25e">   17</a></span>&#160;            <a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml">XbitToNumber</a>&amp; <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae765ed9cb2bd48c13ab9f6032e47c25e">mXton</a>;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#abb04986fc53a8c18590e012382ba53cb">   18</a></span>&#160;            std::vector&lt;uint32_t&gt; <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#abb04986fc53a8c18590e012382ba53cb">mBits</a>;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;            <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#a895cf7a07ed9255243724236621caf5c">UsedBitsVisitor</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule::Ref</a> qmod, <a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml">XbitToNumber</a>&amp; xton);</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ac19c5380f0f028c48017ef544be8ed85">visitQOp</a>(<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp::Ref</a> ref);</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">visit</a>(<a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">NDQOpMeasure::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">visit</a>(<a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml">NDQOpReset::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">visit</a>(<a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">NDQOpU::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">visit</a>(<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">NDQOpCX::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">visit</a>(<a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">NDQOpBarrier::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">visit</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">visit</a>(<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    };</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#a895cf7a07ed9255243724236621caf5c">   34</a></span>&#160;<a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#a895cf7a07ed9255243724236621caf5c">UsedBitsVisitor::UsedBitsVisitor</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule::Ref</a> qmod, <a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml">XbitToNumber</a>&amp; xton) : mMod(qmod), mXton(xton) {}</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ac19c5380f0f028c48017ef544be8ed85">   36</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ac19c5380f0f028c48017ef544be8ed85">UsedBitsVisitor::visitQOp</a>(<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp::Ref</a> ref) {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#abb04986fc53a8c18590e012382ba53cb">mBits</a>.clear();</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; qarg : *(ref-&gt;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>())) {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        uint32_t qid = <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae765ed9cb2bd48c13ab9f6032e47c25e">mXton</a>.<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae645e4b0ccb9c25c534883843484f06a">getQUId</a>(qarg-&gt;toString(<span class="keyword">false</span>));</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#abb04986fc53a8c18590e012382ba53cb">mBits</a>.push_back(qid);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">   44</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">UsedBitsVisitor::visit</a>(<a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">NDQOpMeasure::Ref</a> ref) {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ac19c5380f0f028c48017ef544be8ed85">visitQOp</a>(ref);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#abb04986fc53a8c18590e012382ba53cb">mBits</a>.push_back(<a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae765ed9cb2bd48c13ab9f6032e47c25e">mXton</a>.<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">getQSize</a>() + <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae765ed9cb2bd48c13ab9f6032e47c25e">mXton</a>.<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae9f84f1119a80e918cc3b3fd916a5922">getCUId</a>(ref-&gt;<a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#addcc5fd8d95d5790f75b643e88e76c7e">getCBit</a>()-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>(<span class="keyword">false</span>)));</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#a54e901bd6b846c1a4e1bc97e01eceb1f">   49</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">UsedBitsVisitor::visit</a>(<a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml">NDQOpReset::Ref</a> ref) {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ac19c5380f0f028c48017ef544be8ed85">visitQOp</a>(ref);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ad0a529a1e1bc277af27265d9b6a6fc89">   53</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">UsedBitsVisitor::visit</a>(<a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">NDQOpU::Ref</a> ref) {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ac19c5380f0f028c48017ef544be8ed85">visitQOp</a>(ref);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#adcb2b95acfc497ae9b0c47e8ebeb6853">   57</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">UsedBitsVisitor::visit</a>(<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">NDQOpCX::Ref</a> ref) {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ac19c5380f0f028c48017ef544be8ed85">visitQOp</a>(ref);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ad8d844665dc75c5e880c61d3274d8613">   61</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">UsedBitsVisitor::visit</a>(<a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">NDQOpBarrier::Ref</a> ref) {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ac19c5380f0f028c48017ef544be8ed85">visitQOp</a>(ref);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#a810a23bdb1b1b7817eb4e5db4297dfbc">   65</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">UsedBitsVisitor::visit</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen::Ref</a> ref) {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ac19c5380f0f028c48017ef544be8ed85">visitQOp</a>(ref);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#a6cb0c884b4fa15fc81bd3d4f468d1a21">   69</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">UsedBitsVisitor::visit</a>(<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt::Ref</a> ref) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ac19c5380f0f028c48017ef544be8ed85">visitQOp</a>(ref-&gt;<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">getQOp</a>());</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">auto</span> cregname = ref-&gt;<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a5ec6f243aee6d4fe8988885ea9c449de">getCondId</a>()-&gt;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">getVal</a>();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">auto</span> cregDecl = dynCast&lt;NDRegDecl&gt;(<a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae762752f257cdd7c6da81d035b0008cc">mMod</a>-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#adccc5909af3a4bc63090ecd885ffc7ad">getQVar</a>(cregname));</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">auto</span> size = cregDecl-&gt;getSize()-&gt;getVal().mV;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0; i &lt; size; ++i) {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        std::string sid = cregname + <span class="stringliteral">&quot;[&quot;</span> + <a class="code" href="../../d8/dcc/namespacestd.xhtml#a76fb98cd4a35566d53c2f0513c5d12d1">std::to_string</a>(i) + <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        uint32_t cid = <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae765ed9cb2bd48c13ab9f6032e47c25e">mXton</a>.<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae9f84f1119a80e918cc3b3fd916a5922">getCUId</a>(sid);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#abb04986fc53a8c18590e012382ba53cb">mBits</a>.push_back(<a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae765ed9cb2bd48c13ab9f6032e47c25e">mXton</a>.<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">getQSize</a>() + cid);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml#af3b8bebe54090ca311b5ac0e039c215d">   83</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml#af3b8bebe54090ca311b5ac0e039c215d">LayersBuilderPass::run</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>* qmod) {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">auto</span> xtonPass = PassCache::Get&lt;XbitToNumberWrapperPass&gt;(qmod);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">auto</span>&amp; xton = xtonPass-&gt;getData();</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    uint32_t qubits = xton.getQSize();</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    uint32_t cbits = xton.getCSize();</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml">UsedBitsVisitor</a> ubVisitor(qmod, xton);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    std::vector&lt;int32_t&gt; layerNum(qubits + cbits, -1);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">stmt_begin</a>(), end = qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">stmt_end</a>(); it != end; ++it) {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keyword">auto</span> node = it-&gt;get();</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        int32_t maxLayer = 0;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        (*it)-&gt;apply(&amp;ubVisitor);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keyword">auto</span> bits = ubVisitor.<a class="code" href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#abb04986fc53a8c18590e012382ba53cb">mBits</a>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">for</span> (uint32_t i : bits) {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            maxLayer = std::max(maxLayer, layerNum[i] + 1);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">for</span> (uint32_t i : bits) {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            layerNum[i] = maxLayer;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#a5b6a7296f64c3ae0dd8ad9f528b11ed0">mData</a>.size() &lt;= (uint32_t) maxLayer) {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#a5b6a7296f64c3ae0dd8ad9f528b11ed0">mData</a>.push_back(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a0275945f2cb203058ead872f748857e9">Layer</a>());</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#a5b6a7296f64c3ae0dd8ad9f528b11ed0">mData</a>[maxLayer].push_back(node);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml#a693e97d43e787a64a763aac3055f08c7">  119</a></span>&#160;<a class="code" href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml#af8b99993f74a75ceccd4ca267c3a6600">LayersBuilderPass::uRef</a> <a class="code" href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml#a693e97d43e787a64a763aac3055f08c7">LayersBuilderPass::Create</a>() {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml#af8b99993f74a75ceccd4ca267c3a6600">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml">LayersBuilderPass</a>());</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div><div class="ttc" id="classefd_1_1LayersBuilderPass_xhtml_a824c262f38ab8c90e2389ce0a22ac01d"><div class="ttname"><a href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml#a824c262f38ab8c90e2389ce0a22ac01d">efd::LayersBuilderPass::ID</a></div><div class="ttdeci">static uint8_t ID</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d33/LayersBuilderPass_8h_source.xhtml#l00021">LayersBuilderPass.h:21</a></div></div>
<div class="ttc" id="classefd_1_1NodeVisitor_xhtml"><div class="ttname"><a href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">efd::NodeVisitor</a></div><div class="ttdoc">Interface class to be used as a visitor. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d8d/NodeVisitor_8h_source.xhtml#l00009">NodeVisitor.h:9</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_adccc5909af3a4bc63090ecd885ffc7ad"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#adccc5909af3a4bc63090ecd885ffc7ad">efd::QModule::getQVar</a></div><div class="ttdeci">Node::Ref getQVar(std::string id, NDGateDecl::Ref gate=nullptr) const</div><div class="ttdoc">Gets the quantum variable mapped to id from some gate. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00300">QModule.cpp:300</a></div></div>
<div class="ttc" id="XbitToNumberPass_8h_xhtml"><div class="ttname"><a href="../../d6/d94/XbitToNumberPass_8h.xhtml">XbitToNumberPass.h</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml_ab395508705fe60ed3bd0cfb28eb5ffc6"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ab395508705fe60ed3bd0cfb28eb5ffc6">efd::XbitToNumber::getQSize</a></div><div class="ttdeci">uint32_t getQSize(NDGateDecl::Ref gate=nullptr) const</div><div class="ttdoc">Returns the number of qbits in a given gate (if any). </div><div class="ttdef"><b>Definition:</b> <a href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00049">XbitToNumberPass.cpp:49</a></div></div>
<div class="ttc" id="classefd_1_1UsedBitsVisitor_xhtml_a895cf7a07ed9255243724236621caf5c"><div class="ttname"><a href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#a895cf7a07ed9255243724236621caf5c">efd::UsedBitsVisitor::UsedBitsVisitor</a></div><div class="ttdeci">UsedBitsVisitor(QModule::Ref qmod, XbitToNumber &amp;xton)</div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9d/LayersBuilderPass_8cpp_source.xhtml#l00034">LayersBuilderPass.cpp:34</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">efd::NDQOpGen</a></div><div class="ttdoc">NDQOp specialized for generic gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00930">Nodes.h:930</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpReset_xhtml"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml">efd::NDQOpReset</a></div><div class="ttdoc">NDQOp specialized for reset operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00630">Nodes.h:630</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a23d45e3b6c65d5fa14b199da8b0617c7"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">efd::QModule::stmt_end</a></div><div class="ttdeci">Iterator stmt_end()</div><div class="ttdoc">Iterator to the end of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00226">QModule.cpp:226</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml">efd::QModule</a></div><div class="ttdoc">Qasm module representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00013">QModule.h:13</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a0275945f2cb203058ead872f748857e9"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a0275945f2cb203058ead872f748857e9">efd::Layer</a></div><div class="ttdeci">std::vector&lt; Node::Ref &gt; Layer</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d33/LayersBuilderPass_8h_source.xhtml#l00011">LayersBuilderPass.h:11</a></div></div>
<div class="ttc" id="classefd_1_1UsedBitsVisitor_xhtml_ac19c5380f0f028c48017ef544be8ed85"><div class="ttname"><a href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ac19c5380f0f028c48017ef544be8ed85">efd::UsedBitsVisitor::visitQOp</a></div><div class="ttdeci">void visitQOp(NDQOp::Ref ref)</div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9d/LayersBuilderPass_8cpp_source.xhtml#l00036">LayersBuilderPass.cpp:36</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml">efd::XbitToNumber</a></div><div class="ttdoc">Maps every quantum and classic bit (not register) to a number inside a vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d94/XbitToNumberPass_8h_source.xhtml#l00023">XbitToNumberPass.h:23</a></div></div>
<div class="ttc" id="classefd_1_1UsedBitsVisitor_xhtml_ae765ed9cb2bd48c13ab9f6032e47c25e"><div class="ttname"><a href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae765ed9cb2bd48c13ab9f6032e47c25e">efd::UsedBitsVisitor::mXton</a></div><div class="ttdeci">XbitToNumber &amp; mXton</div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9d/LayersBuilderPass_8cpp_source.xhtml#l00017">LayersBuilderPass.cpp:17</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00005">Architectures.cpp:5</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a96ca13a5c2b971b68619ce4a34be0f66"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">efd::Node::toString</a></div><div class="ttdeci">virtual std::string toString(bool pretty=false) const =0</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">efd::NDQOpU</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00716">Nodes.h:716</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml">efd::NDQOp</a></div><div class="ttdoc">Generic node for quantum operations. This is also the base node for the other quantum gates...</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00577">Nodes.h:577</a></div></div>
<div class="ttc" id="classefd_1_1LayersBuilderPass_xhtml_af3b8bebe54090ca311b5ac0e039c215d"><div class="ttname"><a href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml#af3b8bebe54090ca311b5ac0e039c215d">efd::LayersBuilderPass::run</a></div><div class="ttdeci">bool run(QModule *qmod) override</div><div class="ttdoc">Runs the pass in the given QModule and returns true if it has modified qmod. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9d/LayersBuilderPass_8cpp_source.xhtml#l00083">LayersBuilderPass.cpp:83</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpBarrier_xhtml"><div class="ttname"><a href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">efd::NDQOpBarrier</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00658">Nodes.h:658</a></div></div>
<div class="ttc" id="classefd_1_1LayersBuilderPass_xhtml_a693e97d43e787a64a763aac3055f08c7"><div class="ttname"><a href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml#a693e97d43e787a64a763aac3055f08c7">efd::LayersBuilderPass::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdoc">Create an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9d/LayersBuilderPass_8cpp_source.xhtml#l00119">LayersBuilderPass.cpp:119</a></div></div>
<div class="ttc" id="NodeVisitor_8h_xhtml"><div class="ttname"><a href="../../d0/d8d/NodeVisitor_8h.xhtml">NodeVisitor.h</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_a53ee724a8db3429bf30bb1936ad548b2"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">efd::NDValue::getVal</a></div><div class="ttdeci">T getVal() const</div><div class="ttdoc">Returns a copy to the setted value. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l01023">Nodes.h:1023</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">efd::NDIfStmt</a></div><div class="ttdoc">Node for conditional statement. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00968">Nodes.h:968</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_a5ec6f243aee6d4fe8988885ea9c449de"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a5ec6f243aee6d4fe8988885ea9c449de">efd::NDIfStmt::getCondId</a></div><div class="ttdeci">NDId::Ref getCondId() const</div><div class="ttdoc">Gets the id inside the conditional. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00527">Nodes.cpp:527</a></div></div>
<div class="ttc" id="LayersBuilderPass_8h_xhtml"><div class="ttname"><a href="../../dc/d33/LayersBuilderPass_8h.xhtml">LayersBuilderPass.h</a></div></div>
<div class="ttc" id="PassCache_8h_xhtml"><div class="ttname"><a href="../../db/d82/PassCache_8h.xhtml">PassCache.h</a></div></div>
<div class="ttc" id="classefd_1_1LayersBuilderPass_xhtml"><div class="ttname"><a href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml">efd::LayersBuilderPass</a></div><div class="ttdoc">Create the layers of the &amp;#39;QModule&amp;#39;. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d33/LayersBuilderPass_8h_source.xhtml#l00016">LayersBuilderPass.h:16</a></div></div>
<div class="ttc" id="classefd_1_1UsedBitsVisitor_xhtml_ae762752f257cdd7c6da81d035b0008cc"><div class="ttname"><a href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae762752f257cdd7c6da81d035b0008cc">efd::UsedBitsVisitor::mMod</a></div><div class="ttdeci">QModule::Ref mMod</div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9d/LayersBuilderPass_8cpp_source.xhtml#l00016">LayersBuilderPass.cpp:16</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_addcc5fd8d95d5790f75b643e88e76c7e"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#addcc5fd8d95d5790f75b643e88e76c7e">efd::NDQOpMeasure::getCBit</a></div><div class="ttdeci">Node::Ref getCBit() const</div><div class="ttdoc">Gets the cbit node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01025">Nodes.cpp:1025</a></div></div>
<div class="ttc" id="classefd_1_1UsedBitsVisitor_xhtml"><div class="ttname"><a href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml">efd::UsedBitsVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9d/LayersBuilderPass_8cpp_source.xhtml#l00014">LayersBuilderPass.cpp:14</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_af7ef43289355c5bb047a46419177c8ed"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">efd::NDQOp::getQArgs</a></div><div class="ttdeci">NDList::Ref getQArgs() const</div><div class="ttdoc">Gets the quantum arguments. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00909">Nodes.cpp:909</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_ae5c408d49862e644f1d299ab5b2f121d"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">efd::NDIfStmt::getQOp</a></div><div class="ttdeci">NDQOp::Ref getQOp() const</div><div class="ttdoc">Gets the qop. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00543">Nodes.cpp:543</a></div></div>
<div class="ttc" id="classefd_1_1PassT_xhtml_a5b6a7296f64c3ae0dd8ad9f528b11ed0"><div class="ttname"><a href="../../db/d56/classefd_1_1PassT.xhtml#a5b6a7296f64c3ae0dd8ad9f528b11ed0">efd::PassT&lt; Layers &gt;::mData</a></div><div class="ttdeci">Layers mData</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d29/Pass_8h_source.xhtml#l00047">Pass.h:47</a></div></div>
<div class="ttc" id="QModule_8h_xhtml"><div class="ttname"><a href="../../d4/d73/QModule_8h.xhtml">QModule.h</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_ac00e1eb93f94c00db1e6a661d8f95d9d"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">efd::QModule::stmt_begin</a></div><div class="ttdeci">Iterator stmt_begin()</div><div class="ttdoc">Iterator to the beginning of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00218">QModule.cpp:218</a></div></div>
<div class="ttc" id="classefd_1_1UsedBitsVisitor_xhtml_abb04986fc53a8c18590e012382ba53cb"><div class="ttname"><a href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#abb04986fc53a8c18590e012382ba53cb">efd::UsedBitsVisitor::mBits</a></div><div class="ttdeci">std::vector&lt; uint32_t &gt; mBits</div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9d/LayersBuilderPass_8cpp_source.xhtml#l00018">LayersBuilderPass.cpp:18</a></div></div>
<div class="ttc" id="classefd_1_1LayersBuilderPass_xhtml_af8b99993f74a75ceccd4ca267c3a6600"><div class="ttname"><a href="../../d4/d1b/classefd_1_1LayersBuilderPass.xhtml#af8b99993f74a75ceccd4ca267c3a6600">efd::LayersBuilderPass::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; LayersBuilderPass &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d33/LayersBuilderPass_8h_source.xhtml#l00018">LayersBuilderPass.h:18</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml_ae645e4b0ccb9c25c534883843484f06a"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae645e4b0ccb9c25c534883843484f06a">efd::XbitToNumber::getQUId</a></div><div class="ttdeci">uint32_t getQUId(std::string id, NDGateDecl::Ref gate=nullptr) const</div><div class="ttdoc">Returns an uint32_t number representing the qubit in this specific gate (if any). ...</div><div class="ttdef"><b>Definition:</b> <a href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00030">XbitToNumberPass.cpp:30</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a76fb98cd4a35566d53c2f0513c5d12d1"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml#a76fb98cd4a35566d53c2f0513c5d12d1">std::to_string</a></div><div class="ttdeci">string to_string(efd::EnumString&lt; T, first, last &gt; &amp;val)</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00053">EnumString.h:53</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">efd::NDQOpMeasure</a></div><div class="ttdoc">NDQOp specialized for measure operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00681">Nodes.h:681</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">efd::NDQOpCX</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00744">Nodes.h:744</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml_ae9f84f1119a80e918cc3b3fd916a5922"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml#ae9f84f1119a80e918cc3b3fd916a5922">efd::XbitToNumber::getCUId</a></div><div class="ttdeci">uint32_t getCUId(std::string id) const</div><div class="ttdoc">Returns an uint32_t number representing the classic bit;. </div><div class="ttdef"><b>Definition:</b> <a href="../../de/de8/XbitToNumberPass_8cpp_source.xhtml#l00041">XbitToNumberPass.cpp:41</a></div></div>
<div class="ttc" id="classefd_1_1UsedBitsVisitor_xhtml_ae4d3a1ca425840ccb71613c41c6855cc"><div class="ttname"><a href="../../dd/d88/classefd_1_1UsedBitsVisitor.xhtml#ae4d3a1ca425840ccb71613c41c6855cc">efd::UsedBitsVisitor::visit</a></div><div class="ttdeci">void visit(NDQOpMeasure::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9d/LayersBuilderPass_8cpp_source.xhtml#l00044">LayersBuilderPass.cpp:44</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:35 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
