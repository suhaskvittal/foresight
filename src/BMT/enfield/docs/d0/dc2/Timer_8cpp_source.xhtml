<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Support/Timer.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_f0dc79bace318df7ec0fa0bdb179ed95.xhtml">Support</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Timer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d0/dc2/Timer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dd/d27/Timer_8h.xhtml">enfield/Support/Timer.h</a>&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d1/d73/Defs_8h.xhtml">enfield/Support/Defs.h</a>&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml">efd::Timer</a> efd::Timer::_Timer = <a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml">efd::Timer</a>();</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="../../d4/d89/classefd_1_1Timer.xhtml#a2678e3ff0f85ac2e30f8fd46907d8ec6">    7</a></span>&#160;<a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a2678e3ff0f85ac2e30f8fd46907d8ec6">efd::Timer::Timer</a>() : mTimed(false) {</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;}</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">   10</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">efd::Timer::start</a>() {</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    mTimed = <span class="keyword">false</span>;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    mStart = std::chrono::steady_clock::now();</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;}</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">   15</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">efd::Timer::stop</a>() {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keyword">auto</span> end = std::chrono::steady_clock::now();</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    mDuration = std::chrono::duration_cast&lt;StdDurType&gt;(end - mStart);</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    mTimed = <span class="keyword">true</span>;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../d4/d89/classefd_1_1Timer.xhtml#a65d1abd4920c48793eeab392dd79d87a">   21</a></span>&#160;uint64_t <a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a65d1abd4920c48793eeab392dd79d87a">efd::Timer::getNanoseconds</a>() {</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">if</span> (!mTimed) {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Trying to get elapsed time from dataless timer.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">ExitCode::EXIT_unreachable</a>);</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    }</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordflow">return</span> mDuration.count();</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">   30</a></span>&#160;uint64_t <a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">efd::Timer::getMicroseconds</a>() {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">if</span> (!mTimed) {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Trying to get elapsed time from dataless timer.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">ExitCode::EXIT_unreachable</a>);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    }</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordflow">return</span> std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(mDuration).count();</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../d4/d89/classefd_1_1Timer.xhtml#a12124caea02f8efea63a4ed320acb06f">   39</a></span>&#160;uint64_t <a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a12124caea02f8efea63a4ed320acb06f">efd::Timer::getMilliseconds</a>() {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">if</span> (!mTimed) {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Trying to get elapsed time from dataless timer.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">ExitCode::EXIT_unreachable</a>);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(mDuration).count();</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../d4/d89/classefd_1_1Timer.xhtml#a9c68b3e3e18b5e4bb575754265f2a901">   48</a></span>&#160;uint64_t <a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a9c68b3e3e18b5e4bb575754265f2a901">efd::Timer::getSeconds</a>() {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span> (!mTimed) {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Trying to get elapsed time from dataless timer.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">ExitCode::EXIT_unreachable</a>);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> std::chrono::duration_cast&lt;std::chrono::seconds&gt;(mDuration).count();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../d4/d89/classefd_1_1Timer.xhtml#a81fdb21554585ada61315b63eaf45cd7">   57</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/d89/classefd_1_1Timer.xhtml#a81fdb21554585ada61315b63eaf45cd7">efd::Timer::Start</a>() {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    _Timer.start();</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div><div class="ttc" id="classefd_1_1Timer_xhtml"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml">efd::Timer</a></div><div class="ttdoc">Tracks the elapsed time. One should use the methods start and stop in order to track the time of some...</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d27/Timer_8h_source.xhtml#l00014">Timer.h:14</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_af3487901a239a99750dc5dcdc3a8c868"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a></div><div class="ttdeci">void ExitWith(ExitCode e)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d72/Defs_8cpp_source.xhtml#l00045">Defs.cpp:45</a></div></div>
<div class="ttc" id="classefd_1_1Timer_xhtml_ac83f06f2145058ef3b3b6a53892ed39b"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml#ac83f06f2145058ef3b3b6a53892ed39b">efd::Timer::getMicroseconds</a></div><div class="ttdeci">uint64_t getMicroseconds()</div><div class="ttdoc">Gets the number of microseconds stored in mDuration. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dc2/Timer_8cpp_source.xhtml#l00030">Timer.cpp:30</a></div></div>
<div class="ttc" id="Defs_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00046">Defs.h:46</a></div></div>
<div class="ttc" id="classefd_1_1Timer_xhtml_a0b9a3de677363a5d3f995ac03a3d0a5e"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml#a0b9a3de677363a5d3f995ac03a3d0a5e">efd::Timer::stop</a></div><div class="ttdeci">void stop()</div><div class="ttdoc">Stops the timer. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dc2/Timer_8cpp_source.xhtml#l00015">Timer.cpp:15</a></div></div>
<div class="ttc" id="classefd_1_1Timer_xhtml_a9c68b3e3e18b5e4bb575754265f2a901"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml#a9c68b3e3e18b5e4bb575754265f2a901">efd::Timer::getSeconds</a></div><div class="ttdeci">uint64_t getSeconds()</div><div class="ttdoc">Gets the number of seconds stored in mDuration. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dc2/Timer_8cpp_source.xhtml#l00048">Timer.cpp:48</a></div></div>
<div class="ttc" id="classefd_1_1Timer_xhtml_a81fdb21554585ada61315b63eaf45cd7"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml#a81fdb21554585ada61315b63eaf45cd7">efd::Timer::Start</a></div><div class="ttdeci">static void Start()</div><div class="ttdoc">Starts the static timer. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dc2/Timer_8cpp_source.xhtml#l00057">Timer.cpp:57</a></div></div>
<div class="ttc" id="classefd_1_1Timer_xhtml_a12124caea02f8efea63a4ed320acb06f"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml#a12124caea02f8efea63a4ed320acb06f">efd::Timer::getMilliseconds</a></div><div class="ttdeci">uint64_t getMilliseconds()</div><div class="ttdoc">Gets the number of milliseconds stored in mDuration. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dc2/Timer_8cpp_source.xhtml#l00039">Timer.cpp:39</a></div></div>
<div class="ttc" id="classefd_1_1Timer_xhtml_a04b2df0f873780111173bc5e2a1810aa"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml#a04b2df0f873780111173bc5e2a1810aa">efd::Timer::start</a></div><div class="ttdeci">void start()</div><div class="ttdoc">Starts the timer. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dc2/Timer_8cpp_source.xhtml#l00010">Timer.cpp:10</a></div></div>
<div class="ttc" id="classefd_1_1Timer_xhtml_a2678e3ff0f85ac2e30f8fd46907d8ec6"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml#a2678e3ff0f85ac2e30f8fd46907d8ec6">efd::Timer::Timer</a></div><div class="ttdeci">Timer()</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dc2/Timer_8cpp_source.xhtml#l00007">Timer.cpp:7</a></div></div>
<div class="ttc" id="classefd_1_1Timer_xhtml_a65d1abd4920c48793eeab392dd79d87a"><div class="ttname"><a href="../../d4/d89/classefd_1_1Timer.xhtml#a65d1abd4920c48793eeab392dd79d87a">efd::Timer::getNanoseconds</a></div><div class="ttdeci">uint64_t getNanoseconds()</div><div class="ttdoc">Gets the number of nanoseconds stored in mDuration. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dc2/Timer_8cpp_source.xhtml#l00021">Timer.cpp:21</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">efd::ExitCode::EXIT_unreachable</a></div></div>
<div class="ttc" id="Timer_8h_xhtml"><div class="ttname"><a href="../../dd/d27/Timer_8h.xhtml">Timer.h</a></div></div>
<div class="ttc" id="Defs_8h_xhtml"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml">Defs.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:35 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
