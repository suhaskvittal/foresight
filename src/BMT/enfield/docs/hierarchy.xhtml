<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: Class Hierarchy</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Class Hierarchy</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock">
<p><a href="inherits.xhtml">Go to the graphical class hierarchy</a></p>
This inheritance list is sorted roughly, but not completely, alphabetically:</div><div class="directory">
<div class="levels">[detail level <span onclick="javascript:toggleLevel(1);">1</span><span onclick="javascript:toggleLevel(2);">2</span><span onclick="javascript:toggleLevel(3);">3</span><span onclick="javascript:toggleLevel(4);">4</span><span onclick="javascript:toggleLevel(5);">5</span>]</div><table class="directory">
<tr id="row_0_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/d5b/structAllocProps.xhtml" target="_self">AllocProps</a></td><td class="desc"></td></tr>
<tr id="row_1_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/d9c/classefd_1_1ArgsParser.xhtml" target="_self">efd::ArgsParser</a></td><td class="desc"></td></tr>
<tr id="row_2_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/da6/structefd_1_1ASTWrapper.xhtml" target="_self">efd::ASTWrapper</a></td><td class="desc"></td></tr>
<tr id="row_3_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/db9/classefd_1_1BitOptions.xhtml" target="_self">efd::BitOptions&lt; ETy, last &gt;</a></td><td class="desc">Implements bit options for size last </td></tr>
<tr id="row_4_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_4_" class="arrow" onclick="toggleFolder('4_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/db9/classefd_1_1BitOptions.xhtml" target="_self">efd::BitOptions&lt; SolutionBuilderOptions, SolutionBuilderOptions::KeepStats &gt;</a></td><td class="desc"></td></tr>
<tr id="row_4_0_" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_4_0_" class="arrow" onclick="toggleFolder('4_0_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/d30/classefd_1_1SolutionBuilder.xhtml" target="_self">efd::SolutionBuilder</a></td><td class="desc">Interface for building the solution from an initial mapping </td></tr>
<tr id="row_4_0_0_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/df7/classefd_1_1PathGuidedSolBuilder.xhtml" target="_self">efd::PathGuidedSolBuilder</a></td><td class="desc">Solves the dependencies by looking at the path in the graph </td></tr>
<tr id="row_4_0_1_" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/d7c/classefd_1_1QbitterSolBuilder.xhtml" target="_self">efd::QbitterSolBuilder</a></td><td class="desc">Solves the dependencies using the 'long-cnot' gates </td></tr>
<tr id="row_5_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_5_" class="arrow" onclick="toggleFolder('5_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/d1d/structefd_1_1CandidateSelector.xhtml" target="_self">efd::CandidateSelector</a></td><td class="desc">Interface for selecting candidates (if they are greater than a max) in phase 1 </td></tr>
<tr id="row_5_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/ddc/classefd_1_1FirstCandidateSelector.xhtml" target="_self">efd::FirstCandidateSelector</a></td><td class="desc">Gets the first <em>maxCandidates</em> from <em>candidates</em> </td></tr>
<tr id="row_5_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/ddf/classefd_1_1WeightedRouletteCandidateSelector.xhtml" target="_self">efd::WeightedRouletteCandidateSelector</a></td><td class="desc">Selects the candidates randomly, based on their cost </td></tr>
<tr id="row_6_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d54/classefd_1_1CircuitGraph.xhtml" target="_self">efd::CircuitGraph</a></td><td class="desc">The Circuit representation of the <em><a class="el" href="dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a></em> </td></tr>
<tr id="row_7_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/dbc/structefd_1_1CircuitGraph_1_1CircuitNode.xhtml" target="_self">efd::CircuitGraph::CircuitNode</a></td><td class="desc">Representation of a quantum operation </td></tr>
<tr id="row_8_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d62/structefd_1_1CompilationSettings.xhtml" target="_self">efd::CompilationSettings</a></td><td class="desc">Required information in order to compile a <em><a class="el" href="dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a></em> </td></tr>
<tr id="row_9_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/d38/structefd_1_1Dep.xhtml" target="_self">efd::Dep</a></td><td class="desc">Structure for abstracting dependencies </td></tr>
<tr id="row_10_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/d38/structDepComp.xhtml" target="_self">DepComp</a></td><td class="desc"></td></tr>
<tr id="row_11_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/dca/structefd_1_1Dependencies.xhtml" target="_self">efd::Dependencies</a></td><td class="desc">Represents a sequence of dependencies (should be treated as parallel dependencies) for each node </td></tr>
<tr id="row_12_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d76/structefd_1_1DependencyBuilder.xhtml" target="_self">efd::DependencyBuilder</a></td><td class="desc">Keep track of the dependencies of each qbit for the whole program, as well as the dependencies for every gate </td></tr>
<tr id="row_13_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/d5d/classefd_1_1EnumString.xhtml" target="_self">efd::EnumString&lt; T, first, last &gt;</a></td><td class="desc">Enum wrapper class </td></tr>
<tr id="row_14_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/d5d/classefd_1_1EnumString.xhtml" target="_self">efd::EnumString&lt; Allocator, Allocator::first, Allocator::last &gt;</a></td><td class="desc"></td></tr>
<tr id="row_15_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_15_" class="arrow" onclick="toggleFolder('15_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/db3/classefd_1_1Graph.xhtml" target="_self">efd::Graph</a></td><td class="desc"><a class="el" href="db/db3/classefd_1_1Graph.xhtml" title="Graph representation. ">Graph</a> representation </td></tr>
<tr id="row_15_0_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_15_0_" class="arrow" onclick="toggleFolder('15_0_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/dae/classefd_1_1ArchGraph.xhtml" target="_self">efd::ArchGraph</a></td><td class="desc">This is the base class for the architectures that this project will be supporting </td></tr>
<tr id="row_15_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/db8/classefd_1_1ArchIBMQX2.xhtml" target="_self">efd::ArchIBMQX2</a></td><td class="desc"></td></tr>
<tr id="row_15_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/df8/classefd_1_1ArchIBMQX3.xhtml" target="_self">efd::ArchIBMQX3</a></td><td class="desc"></td></tr>
<tr id="row_15_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/d54/classefd_1_1WeightedGraph.xhtml" target="_self">efd::WeightedGraph&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_16_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/de1/structefd_1_1IndexOrder.xhtml" target="_self">efd::IndexOrder&lt; T &gt;</a></td><td class="desc">Helper class to sort an index vector based on a value vector </td></tr>
<tr id="row_17_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/d0b/classefd_1_1CircuitGraph_1_1Iterator.xhtml" target="_self">efd::CircuitGraph::Iterator</a></td><td class="desc">Abstracts the iteration of the <em><a class="el" href="d0/d54/classefd_1_1CircuitGraph.xhtml" title="The Circuit representation of the QModule. ">CircuitGraph</a></em> </td></tr>
<tr id="row_18_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/d41/structefd_1_1LayerBasedOrdering.xhtml" target="_self">efd::LayerBasedOrdering</a></td><td class="desc"></td></tr>
<tr id="row_19_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_19_" class="arrow" onclick="toggleFolder('19_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d98/structefd_1_1LiveQubitsPreProcessor.xhtml" target="_self">efd::LiveQubitsPreProcessor</a></td><td class="desc">Interface for preparing the <code>Mapping</code>s for fixing the Live Qubits problem </td></tr>
<tr id="row_19_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d30/classefd_1_1GeoNearestLQPProcessor.xhtml" target="_self">efd::GeoNearestLQPProcessor</a></td><td class="desc">Forces <em>toM</em> to map all qubits mapped in <em>fromM</em> </td></tr>
<tr id="row_20_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d0e/structefd_1_1bmt_1_1MappingCandidate.xhtml" target="_self">efd::bmt::MappingCandidate</a></td><td class="desc">Composition of each candidate in phase 1 </td></tr>
<tr id="row_21_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_21_" class="arrow" onclick="toggleFolder('21_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/dde/classefd_1_1MappingFinder.xhtml" target="_self">efd::MappingFinder</a></td><td class="desc">Interface for finding a mapping from some set of dependencies </td></tr>
<tr id="row_21_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/d24/classefd_1_1IdentityMappingFinder.xhtml" target="_self">efd::IdentityMappingFinder</a></td><td class="desc">Finds a mapping where the logical qubit 0 is mapped to the physical qubit 0, etc </td></tr>
<tr id="row_21_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d03/classefd_1_1RandomMappingFinder.xhtml" target="_self">efd::RandomMappingFinder</a></td><td class="desc">Randomizes the mapping </td></tr>
<tr id="row_21_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/d4f/classefd_1_1WeightedSIMappingFinder.xhtml" target="_self">efd::WeightedSIMappingFinder</a></td><td class="desc">Finds a mapping with a weighted partial matching algorithm (subgraph isomorphism) </td></tr>
<tr id="row_22_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/d18/structefd_1_1bmt_1_1MappingSeq.xhtml" target="_self">efd::bmt::MappingSeq</a></td><td class="desc">Keep track of the sequence of <code>Mapping</code>s and its cost </td></tr>
<tr id="row_23_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/da7/structefd_1_1bmt_1_1MappingSwapSequence.xhtml" target="_self">efd::bmt::MappingSwapSequence</a></td><td class="desc">Holds the sequence of <code>Mapping</code>s and <code>Swaps</code>to be executed </td></tr>
<tr id="row_24_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_24_" class="arrow" onclick="toggleFolder('24_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d8e/structefd_1_1MapSeqSelector.xhtml" target="_self">efd::MapSeqSelector</a></td><td class="desc">Selects a number of line numbers from the memoized matrix </td></tr>
<tr id="row_24_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/dd1/classefd_1_1BestNMSSelector.xhtml" target="_self">efd::BestNMSSelector</a></td><td class="desc">Selects the line that yielded the best cost </td></tr>
<tr id="row_25_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_25_" class="arrow" onclick="toggleFolder('25_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d6a/classefd_1_1Node.xhtml" target="_self">efd::Node</a></td><td class="desc">Base class for AST nodes </td></tr>
<tr id="row_25_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/df0/classefd_1_1NDBinOp.xhtml" target="_self">efd::NDBinOp</a></td><td class="desc">Binary operation node </td></tr>
<tr id="row_25_1_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_25_1_" class="arrow" onclick="toggleFolder('25_1_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d9e/classefd_1_1NDDecl.xhtml" target="_self">efd::NDDecl</a></td><td class="desc"><a class="el" href="d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for declaration of registers (concrete and quantum) </td></tr>
<tr id="row_25_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_25_1_0_" class="arrow" onclick="toggleFolder('25_1_0_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d1f/classefd_1_1NDGateSign.xhtml" target="_self">efd::NDGateSign</a></td><td class="desc"><a class="el" href="d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for declaration of opaque quantum gates </td></tr>
<tr id="row_25_1_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d4b/classefd_1_1NDGateDecl.xhtml" target="_self">efd::NDGateDecl</a></td><td class="desc"><a class="el" href="d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for declaration of quantum gates </td></tr>
<tr id="row_25_1_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d97/classefd_1_1NDRegDecl.xhtml" target="_self">efd::NDRegDecl</a></td><td class="desc"></td></tr>
<tr id="row_25_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/dd2/classefd_1_1NDIdRef.xhtml" target="_self">efd::NDIdRef</a></td><td class="desc"><a class="el" href="d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for id references (register specific positions) </td></tr>
<tr id="row_25_3_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/d9d/classefd_1_1NDIfStmt.xhtml" target="_self">efd::NDIfStmt</a></td><td class="desc"><a class="el" href="d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for conditional statement </td></tr>
<tr id="row_25_4_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/d29/classefd_1_1NDInclude.xhtml" target="_self">efd::NDInclude</a></td><td class="desc"><a class="el" href="d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> used to parse another file </td></tr>
<tr id="row_25_5_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_25_5_" class="arrow" onclick="toggleFolder('25_5_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/ddd/classefd_1_1NDList.xhtml" target="_self">efd::NDList</a></td><td class="desc">Base class for list of nodes </td></tr>
<tr id="row_25_5_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d14/classefd_1_1NDGOpList.xhtml" target="_self">efd::NDGOpList</a></td><td class="desc"><a class="el" href="d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for list of qubit operation sequences inside gate declarations </td></tr>
<tr id="row_25_5_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d7f/classefd_1_1NDStmtList.xhtml" target="_self">efd::NDStmtList</a></td><td class="desc"><a class="el" href="d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for list of qubit operation sequences </td></tr>
<tr id="row_25_6_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/dcb/classefd_1_1NDQasmVersion.xhtml" target="_self">efd::NDQasmVersion</a></td><td class="desc"><a class="el" href="d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> that holds the current Qasm version and the rest of the program </td></tr>
<tr id="row_25_7_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_25_7_" class="arrow" onclick="toggleFolder('25_7_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d94/classefd_1_1NDQOp.xhtml" target="_self">efd::NDQOp</a></td><td class="desc">Generic node for quantum operations. This is also the base node for the other quantum gates </td></tr>
<tr id="row_25_7_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/d2a/classefd_1_1NDQOpBarrier.xhtml" target="_self">efd::NDQOpBarrier</a></td><td class="desc"><a class="el" href="dd/d94/classefd_1_1NDQOp.xhtml" title="Generic node for quantum operations. This is also the base node for the other quantum gates...">NDQOp</a> specialized for barrier operation </td></tr>
<tr id="row_25_7_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/d14/classefd_1_1NDQOpCX.xhtml" target="_self">efd::NDQOpCX</a></td><td class="desc"><a class="el" href="dd/d94/classefd_1_1NDQOp.xhtml" title="Generic node for quantum operations. This is also the base node for the other quantum gates...">NDQOp</a> specialized for barrier operation </td></tr>
<tr id="row_25_7_2_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_25_7_2_" class="arrow" onclick="toggleFolder('25_7_2_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/dff/classefd_1_1NDQOpGen.xhtml" target="_self">efd::NDQOpGen</a></td><td class="desc"><a class="el" href="dd/d94/classefd_1_1NDQOp.xhtml" title="Generic node for quantum operations. This is also the base node for the other quantum gates...">NDQOp</a> specialized for generic gates </td></tr>
<tr id="row_25_7_2_0_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/d46/structefd_1_1NDQOpLongCX.xhtml" target="_self">efd::NDQOpLongCX</a></td><td class="desc">Special node for long cnot calls </td></tr>
<tr id="row_25_7_2_1_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d69/structefd_1_1NDQOpRevCX.xhtml" target="_self">efd::NDQOpRevCX</a></td><td class="desc">Special node for reversal cnot calls </td></tr>
<tr id="row_25_7_2_2_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d04/structefd_1_1NDQOpSwap.xhtml" target="_self">efd::NDQOpSwap</a></td><td class="desc">Special node for swap calls </td></tr>
<tr id="row_25_7_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/d64/classefd_1_1NDQOpMeasure.xhtml" target="_self">efd::NDQOpMeasure</a></td><td class="desc"><a class="el" href="dd/d94/classefd_1_1NDQOp.xhtml" title="Generic node for quantum operations. This is also the base node for the other quantum gates...">NDQOp</a> specialized for measure operation </td></tr>
<tr id="row_25_7_4_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/dd2/classefd_1_1NDQOpReset.xhtml" target="_self">efd::NDQOpReset</a></td><td class="desc"><a class="el" href="dd/d94/classefd_1_1NDQOp.xhtml" title="Generic node for quantum operations. This is also the base node for the other quantum gates...">NDQOp</a> specialized for reset operation </td></tr>
<tr id="row_25_7_5_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/dbe/classefd_1_1NDQOpU.xhtml" target="_self">efd::NDQOpU</a></td><td class="desc"><a class="el" href="dd/d94/classefd_1_1NDQOp.xhtml" title="Generic node for quantum operations. This is also the base node for the other quantum gates...">NDQOp</a> specialized for barrier operation </td></tr>
<tr id="row_25_8_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/dd3/classefd_1_1NDUnaryOp.xhtml" target="_self">efd::NDUnaryOp</a></td><td class="desc">Unary operation node </td></tr>
<tr id="row_25_9_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/d1b/classefd_1_1NDValue.xhtml" target="_self">efd::NDValue&lt; T &gt;</a></td><td class="desc"><a class="el" href="d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a> for literal types </td></tr>
<tr id="row_26_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d52/structefd_1_1bmt_1_1NodeCandidate.xhtml" target="_self">efd::bmt::NodeCandidate</a></td><td class="desc">Used for ordering the nodes based on some weight </td></tr>
<tr id="row_27_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_27_" class="arrow" onclick="toggleFolder('27_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d29/structefd_1_1NodeCandidatesGenerator.xhtml" target="_self">efd::NodeCandidatesGenerator</a></td><td class="desc">Generates a vector with the <code><a class="el" href="d6/d6a/classefd_1_1Node.xhtml" title="Base class for AST nodes. ">Node</a></code>s that can be chosen as the next instruction </td></tr>
<tr id="row_27_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d88/classefd_1_1CircuitCandidatesGenerator.xhtml" target="_self">efd::CircuitCandidatesGenerator</a></td><td class="desc">Generates a vector with the nodes that it can reach using the <code><a class="el" href="d0/d54/classefd_1_1CircuitGraph.xhtml" title="The Circuit representation of the QModule. ">CircuitGraph</a></code> </td></tr>
<tr id="row_27_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/dfc/classefd_1_1SeqNCandidatesGenerator.xhtml" target="_self">efd::SeqNCandidatesGenerator</a></td><td class="desc">Sequential generator </td></tr>
<tr id="row_28_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_28_" class="arrow" onclick="toggleFolder('28_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/d5d/classefd_1_1NodeVisitor.xhtml" target="_self">efd::NodeVisitor</a></td><td class="desc">Interface class to be used as a visitor </td></tr>
<tr id="row_28_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d7d/classefd_1_1ArchVerifierVisitor.xhtml" target="_self">efd::ArchVerifierVisitor</a></td><td class="desc"></td></tr>
<tr id="row_28_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/de5/classefd_1_1DependencyBuilderVisitor.xhtml" target="_self">efd::DependencyBuilderVisitor</a></td><td class="desc"></td></tr>
<tr id="row_28_2_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/dc6/classefd_1_1FlattenVisitor.xhtml" target="_self">efd::FlattenVisitor</a></td><td class="desc"></td></tr>
<tr id="row_28_3_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d71/classefd_1_1InlineAllVisitor.xhtml" target="_self">efd::InlineAllVisitor</a></td><td class="desc"></td></tr>
<tr id="row_28_4_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d38/classefd_1_1NodeRenameVisitor.xhtml" target="_self">efd::NodeRenameVisitor</a></td><td class="desc"></td></tr>
<tr id="row_28_5_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml" target="_self">efd::QArgsReplaceVisitor</a></td><td class="desc"></td></tr>
<tr id="row_28_6_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d71/classefd_1_1QModulefyVisitor.xhtml" target="_self">efd::QModulefyVisitor</a></td><td class="desc"></td></tr>
<tr id="row_28_7_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/da6/classefd_1_1RenameQbitVisitor.xhtml" target="_self">efd::RenameQbitVisitor</a></td><td class="desc"></td></tr>
<tr id="row_28_8_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/d28/classefd_1_1ReverseEdgesVisitor.xhtml" target="_self">efd::ReverseEdgesVisitor</a></td><td class="desc"></td></tr>
<tr id="row_28_9_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/de5/classefd_1_1SemanticVerifierVisitor.xhtml" target="_self">efd::SemanticVerifierVisitor</a></td><td class="desc"></td></tr>
<tr id="row_28_10_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/dcc/classefd_1_1StdSolutionImplPass.xhtml" target="_self">efd::StdSolutionImplPass</a></td><td class="desc"></td></tr>
<tr id="row_28_11_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d88/classefd_1_1UsedBitsVisitor.xhtml" target="_self">efd::UsedBitsVisitor</a></td><td class="desc"></td></tr>
<tr id="row_28_12_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/d66/classefd_1_1XbitToNumberVisitor.xhtml" target="_self">efd::XbitToNumberVisitor</a></td><td class="desc"></td></tr>
<tr id="row_29_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/d90/structefd_1_1Operation.xhtml" target="_self">efd::Operation</a></td><td class="desc">Struct used to describe the operation chosen for each solving each dependency </td></tr>
<tr id="row_30_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_30_" class="arrow" onclick="toggleFolder('30_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d25/classefd_1_1OptBase.xhtml" target="_self">efd::OptBase</a></td><td class="desc">Base class for implementing command line options </td></tr>
<tr id="row_30_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d50/classefd_1_1Opt.xhtml" target="_self">efd::Opt&lt; T &gt;</a></td><td class="desc">Class used to declare the command line options available </td></tr>
<tr id="row_31_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/df8/structefd_1_1ParseOptTrait.xhtml" target="_self">efd::ParseOptTrait&lt; T &gt;</a></td><td class="desc">Parses the arguments in <code>args</code> to <code>opt</code> </td></tr>
<tr id="row_32_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/db7/structefd_1_1ParseOptTrait_3_01bool_01_4.xhtml" target="_self">efd::ParseOptTrait&lt; bool &gt;</a></td><td class="desc"></td></tr>
<tr id="row_33_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/dda/structefd_1_1ParseOptTrait_3_01double_01_4.xhtml" target="_self">efd::ParseOptTrait&lt; double &gt;</a></td><td class="desc"></td></tr>
<tr id="row_34_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/df0/structefd_1_1ParseOptTrait_3_01EnumString_3_01T_00_01first_00_01last_01_4_01_4.xhtml" target="_self">efd::ParseOptTrait&lt; EnumString&lt; T, first, last &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_35_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/da9/structefd_1_1ParseOptTrait_3_01float_01_4.xhtml" target="_self">efd::ParseOptTrait&lt; float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_36_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/df3/structefd_1_1ParseOptTrait_3_01int_01_4.xhtml" target="_self">efd::ParseOptTrait&lt; int &gt;</a></td><td class="desc"></td></tr>
<tr id="row_37_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d77/structefd_1_1ParseOptTrait_3_01long_01long_01_4.xhtml" target="_self">efd::ParseOptTrait&lt; long long &gt;</a></td><td class="desc"></td></tr>
<tr id="row_38_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/d04/structefd_1_1ParseOptTrait_3_01MapGateUInt_01_4.xhtml" target="_self">efd::ParseOptTrait&lt; MapGateUInt &gt;</a></td><td class="desc"></td></tr>
<tr id="row_39_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/d9d/structefd_1_1ParseOptTrait_3_01std_1_1string_01_4.xhtml" target="_self">efd::ParseOptTrait&lt; std::string &gt;</a></td><td class="desc"></td></tr>
<tr id="row_40_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/dbd/structefd_1_1ParseOptTrait_3_01std_1_1vector_3_01std_1_1string_01_4_01_4.xhtml" target="_self">efd::ParseOptTrait&lt; std::vector&lt; std::string &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_41_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d4a/structefd_1_1ParseOptTrait_3_01unsigned_01_4.xhtml" target="_self">efd::ParseOptTrait&lt; unsigned &gt;</a></td><td class="desc"></td></tr>
<tr id="row_42_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/da0/structefd_1_1ParseOptTrait_3_01unsigned_01long_01long_01_4.xhtml" target="_self">efd::ParseOptTrait&lt; unsigned long long &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_43_" class="arrow" onclick="toggleFolder('43_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/d98/classefd_1_1Pass.xhtml" target="_self">efd::Pass</a></td><td class="desc">Base class for implementation of <a class="el" href="dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a> passes. This information will be used when the <a class="el" href="dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a>'s function is called </td></tr>
<tr id="row_43_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d56/classefd_1_1PassT.xhtml" target="_self">efd::PassT&lt; T &gt;</a></td><td class="desc">Should serve as base class for classes that produces some data of type <em>T</em> </td></tr>
<tr id="row_43_1_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_43_1_" class="arrow" onclick="toggleFolder('43_1_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d84/classefd_1_1PassT_3_01void_01_4.xhtml" target="_self">efd::PassT&lt; void &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/df2/classefd_1_1FlattenPass.xhtml" target="_self">efd::FlattenPass</a></td><td class="desc">Flattens the given <a class="el" href="dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a> </td></tr>
<tr id="row_43_1_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/de3/classefd_1_1InlineAllPass.xhtml" target="_self">efd::InlineAllPass</a></td><td class="desc"></td></tr>
<tr id="row_43_1_2_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/dd7/classefd_1_1RenameQbitPass.xhtml" target="_self">efd::RenameQbitPass</a></td><td class="desc">Renames all the qbits according to the map from the constructor </td></tr>
<tr id="row_43_1_3_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d2/ddc/classefd_1_1ReverseEdgesPass.xhtml" target="_self">efd::ReverseEdgesPass</a></td><td class="desc"><a class="el" href="d0/d98/classefd_1_1Pass.xhtml" title="Base class for implementation of QModule passes. This information will be used when the QModule&#39;s fun...">Pass</a> that reverses the edges accordingly with the architecture <a class="el" href="db/db3/classefd_1_1Graph.xhtml" title="Graph representation. ">Graph</a> </td></tr>
<tr id="row_43_1_4_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/dcc/classefd_1_1StdSolutionImplPass.xhtml" target="_self">efd::StdSolutionImplPass</a></td><td class="desc"></td></tr>
<tr id="row_43_2_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_43_2_" class="arrow" onclick="toggleFolder('43_2_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d56/classefd_1_1PassT.xhtml" target="_self">efd::PassT&lt; bool &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_2_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d0/de6/classefd_1_1ArchVerifierPass.xhtml" target="_self">efd::ArchVerifierPass</a></td><td class="desc">Verifies if the CNOT relations between every qubit respects the architecture constraints </td></tr>
<tr id="row_43_2_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/dd7/classefd_1_1SemanticVerifierPass.xhtml" target="_self">efd::SemanticVerifierPass</a></td><td class="desc">Verifies the CNOT relations between every qubit </td></tr>
<tr id="row_43_3_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_43_3_" class="arrow" onclick="toggleFolder('43_3_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d56/classefd_1_1PassT.xhtml" target="_self">efd::PassT&lt; CircuitGraph &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_3_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml" target="_self">efd::CircuitGraphBuilderPass</a></td><td class="desc">Builds the circuit graph corresponding to the <em><a class="el" href="dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a></em> given </td></tr>
<tr id="row_43_4_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_43_4_" class="arrow" onclick="toggleFolder('43_4_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d56/classefd_1_1PassT.xhtml" target="_self">efd::PassT&lt; DependencyBuilder &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_4_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml" target="_self">efd::DependencyBuilderWrapperPass</a></td><td class="desc">WrapperPass that yields a <em><a class="el" href="d1/d76/structefd_1_1DependencyBuilder.xhtml" title="Keep track of the dependencies of each qbit for the whole program, as well as the dependencies for ev...">DependencyBuilder</a></em> structure </td></tr>
<tr id="row_43_5_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_43_5_" class="arrow" onclick="toggleFolder('43_5_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d56/classefd_1_1PassT.xhtml" target="_self">efd::PassT&lt; DependencyGraph::sRef &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_5_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d27/classefd_1_1DependencyGraphBuilderPass.xhtml" target="_self">efd::DependencyGraphBuilderPass</a></td><td class="desc">Constructs the dependency graph for a <code><a class="el" href="dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a></code> </td></tr>
<tr id="row_43_6_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_43_6_" class="arrow" onclick="toggleFolder('43_6_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d56/classefd_1_1PassT.xhtml" target="_self">efd::PassT&lt; LayerBasedOrdering &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_6_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_43_6_0_" class="arrow" onclick="toggleFolder('43_6_0_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/de0/classefd_1_1LayerBasedOrderingWrapperPass.xhtml" target="_self">efd::LayerBasedOrderingWrapperPass</a></td><td class="desc">Interface for ordering the program by a specific layer-based ordering </td></tr>
<tr id="row_43_6_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/db9/classefd_1_1CNOTLBOWrapperPass.xhtml" target="_self">efd::CNOTLBOWrapperPass</a></td><td class="desc">Layer-based Ordering with CNOT priority </td></tr>
<tr id="row_43_7_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_43_7_" class="arrow" onclick="toggleFolder('43_7_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d56/classefd_1_1PassT.xhtml" target="_self">efd::PassT&lt; Layers &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_7_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/d1b/classefd_1_1LayersBuilderPass.xhtml" target="_self">efd::LayersBuilderPass</a></td><td class="desc">Create the layers of the '<a class="el" href="dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a>' </td></tr>
<tr id="row_43_8_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_43_8_" class="arrow" onclick="toggleFolder('43_8_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d56/classefd_1_1PassT.xhtml" target="_self">efd::PassT&lt; Mapping &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_8_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span id="arr_43_8_0_" class="arrow" onclick="toggleFolder('43_8_0_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d5a/classefd_1_1QbitAllocator.xhtml" target="_self">efd::QbitAllocator</a></td><td class="desc">Base abstract class that allocates the qbits used in the program to the qbits that are in the physical architecture </td></tr>
<tr id="row_43_8_0_0_" class="even" style="display:none;"><td class="entry"><span style="width:64px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/dd6/classefd_1_1BoundedMappingTreeQAllocator.xhtml" target="_self">efd::BoundedMappingTreeQAllocator</a></td><td class="desc">Subgraph Isomorphism based Qubit Allocator </td></tr>
<tr id="row_43_8_0_1_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span id="arr_43_8_0_1_" class="arrow" onclick="toggleFolder('43_8_0_1_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d8e/classefd_1_1StdSolutionQAllocator.xhtml" target="_self">efd::StdSolutionQAllocator</a></td><td class="desc">An abstract allocator that builds the solution based on a <code><a class="el" href="db/d36/structefd_1_1StdSolution.xhtml" title="The solution for the allocation problem. ">StdSolution</a></code> </td></tr>
<tr id="row_43_8_0_1_0_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d93/classefd_1_1DynprogQAllocator.xhtml" target="_self">efd::DynprogQAllocator</a></td><td class="desc">Implementation of DepSolverQAllocator that uses dynamic programming to obtain an optimal solution </td></tr>
<tr id="row_43_8_0_1_1_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/d23/classefd_1_1GreedyCktQAllocator.xhtml" target="_self">efd::GreedyCktQAllocator</a></td><td class="desc"></td></tr>
<tr id="row_43_8_0_1_2_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/d6c/classefd_1_1IBMQAllocator.xhtml" target="_self">efd::IBMQAllocator</a></td><td class="desc">Port of IBM's allocator </td></tr>
<tr id="row_43_8_0_1_3_" class="even" style="display:none;"><td class="entry"><span style="width:80px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="da/d39/classefd_1_1SimpleQAllocator.xhtml" target="_self">efd::SimpleQAllocator</a></td><td class="desc">DependencySolver that allocates the logical qubits from an initial mapping </td></tr>
<tr id="row_43_9_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_43_9_" class="arrow" onclick="toggleFolder('43_9_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d56/classefd_1_1PassT.xhtml" target="_self">efd::PassT&lt; QModuleQuality &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_9_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d79/classefd_1_1QModuleQualityEvalPass.xhtml" target="_self">efd::QModuleQualityEvalPass</a></td><td class="desc">Evaluates a <code><a class="el" href="dd/d52/classefd_1_1QModule.xhtml" title="Qasm module representation. ">QModule</a></code> </td></tr>
<tr id="row_43_10_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_43_10_" class="arrow" onclick="toggleFolder('43_10_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d56/classefd_1_1PassT.xhtml" target="_self">efd::PassT&lt; uint32_t &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_10_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/d16/classefd_1_1IntrinsicGateCostPass.xhtml" target="_self">efd::IntrinsicGateCostPass</a></td><td class="desc"></td></tr>
<tr id="row_43_11_" class="even" style="display:none;"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span id="arr_43_11_" class="arrow" onclick="toggleFolder('43_11_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d56/classefd_1_1PassT.xhtml" target="_self">efd::PassT&lt; XbitToNumber &gt;</a></td><td class="desc"></td></tr>
<tr id="row_43_11_0_" class="even" style="display:none;"><td class="entry"><span style="width:48px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="de/d2b/classefd_1_1XbitToNumberWrapperPass.xhtml" target="_self">efd::XbitToNumberWrapperPass</a></td><td class="desc">WrapperPass that yields a <em><a class="el" href="db/d0c/structefd_1_1XbitToNumber.xhtml" title="Maps every quantum and classic bit (not register) to a number inside a vector. ">XbitToNumber</a></em> structure </td></tr>
<tr id="row_44_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/df9/classefd_1_1PassCache.xhtml" target="_self">efd::PassCache</a></td><td class="desc">Static class that caches passes that were run by this compiler </td></tr>
<tr id="row_45_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_45_" class="arrow" onclick="toggleFolder('45_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/df1/classefd_1_1PathFinder.xhtml" target="_self">efd::PathFinder</a></td><td class="desc">Interface for finding the path between two vertices </td></tr>
<tr id="row_45_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/d45/classefd_1_1BFSPathFinder.xhtml" target="_self">efd::BFSPathFinder</a></td><td class="desc">Finds swaps for one restriction only </td></tr>
<tr id="row_45_1_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/dc3/classefd_1_1DijkstraPathFinder.xhtml" target="_self">efd::DijkstraPathFinder&lt; T &gt;</a></td><td class="desc">Dijkstra algorithm for finding a swap sequence in a weighted graph </td></tr>
<tr id="row_46_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/d65/structPermVal.xhtml" target="_self">PermVal</a></td><td class="desc"></td></tr>
<tr id="row_47_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/dac/structefd_1_1PossibleValuesListTrait.xhtml" target="_self">efd::PossibleValuesListTrait&lt; T &gt;</a></td><td class="desc"></td></tr>
<tr id="row_48_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/da9/structefd_1_1PossibleValuesListTrait_3_01efd_1_1EnumString_3_01T_00_01first_00_01last_01_4_01_4.xhtml" target="_self">efd::PossibleValuesListTrait&lt; efd::EnumString&lt; T, first, last &gt; &gt;</a></td><td class="desc"></td></tr>
<tr id="row_49_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dd/d52/classefd_1_1QModule.xhtml" target="_self">efd::QModule</a></td><td class="desc">Qasm module representation </td></tr>
<tr id="row_50_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/ddf/structefd_1_1QModuleQuality.xhtml" target="_self">efd::QModuleQuality</a></td><td class="desc">Holds the evaluation metrics for an allocation </td></tr>
<tr id="row_51_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="dc/dd0/classefd_1_1Registry.xhtml" target="_self">efd::Registry&lt; RTy, ATy, KTy, CTy &gt;</a></td><td class="desc">Base registry class for sets </td></tr>
<tr id="row_52_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d3/dcd/structefd_1_1SIFinder_1_1Result.xhtml" target="_self">efd::SIFinder::Result</a></td><td class="desc"></td></tr>
<tr id="row_53_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_53_" class="arrow" onclick="toggleFolder('53_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d1e/classefd_1_1SIFinder.xhtml" target="_self">efd::SIFinder</a></td><td class="desc">Interface for implementing different algorithms for finding matchings (subgraph isomorphism) </td></tr>
<tr id="row_53_0_" class="even" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d5/db6/classefd_1_1WeightedSIFinder.xhtml" target="_self">efd::WeightedSIFinder&lt; T &gt;</a></td><td class="desc">Extends the <em><a class="el" href="d6/d1e/classefd_1_1SIFinder.xhtml" title="Interface for implementing different algorithms for finding matchings (subgraph isomorphism). ">SIFinder</a></em> class for weighted graphs </td></tr>
<tr id="row_54_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_54_" class="arrow" onclick="toggleFolder('54_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d5d/classefd_1_1StatBase.xhtml" target="_self">efd::StatBase</a></td><td class="desc">Base class for stats </td></tr>
<tr id="row_54_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d6/d1d/classefd_1_1Stat.xhtml" target="_self">efd::Stat&lt; T &gt;</a></td><td class="desc">Stats of a given type </td></tr>
<tr id="row_55_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/d51/classefd_1_1StatsPool.xhtml" target="_self">efd::StatsPool</a></td><td class="desc"></td></tr>
<tr id="row_56_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d36/structefd_1_1StdSolution.xhtml" target="_self">efd::StdSolution</a></td><td class="desc">The solution for the allocation problem </td></tr>
<tr id="row_57_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d8/d62/structefd_1_1Swap.xhtml" target="_self">efd::Swap</a></td><td class="desc">Struct used for representing a swap between two qubits; </td></tr>
<tr id="row_58_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_58_" class="arrow" onclick="toggleFolder('58_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d43/structefd_1_1SwapCostEstimator.xhtml" target="_self">efd::SwapCostEstimator</a></td><td class="desc">Interface for estimating the number of swaps in phase 2 </td></tr>
<tr id="row_58_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d6b/classefd_1_1GeoDistanceSwapCEstimator.xhtml" target="_self">efd::GeoDistanceSwapCEstimator</a></td><td class="desc">The estimation is the sum of all distances </td></tr>
<tr id="row_59_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/d89/classefd_1_1Timer.xhtml" target="_self">efd::Timer</a></td><td class="desc">Tracks the elapsed time. One should use the methods <em>start</em> and <em>stop</em> in order to track the time of some event </td></tr>
<tr id="row_60_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_60_" class="arrow" onclick="toggleFolder('60_')">&#9654;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/dad/classefd_1_1TokenSwapFinder.xhtml" target="_self">efd::TokenSwapFinder</a></td><td class="desc">Interface for solving the Token <a class="el" href="d8/d62/structefd_1_1Swap.xhtml" title="Struct used for representing a swap between two qubits;. ">Swap</a> Problem </td></tr>
<tr id="row_60_0_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d4/dfd/classefd_1_1ApproxTSFinder.xhtml" target="_self">efd::ApproxTSFinder</a></td><td class="desc">4-Approximative polynomial algorithm </td></tr>
<tr id="row_60_1_" style="display:none;"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d1/d42/classefd_1_1ExpTSFinder.xhtml" target="_self">efd::ExpTSFinder</a></td><td class="desc">Brute force solution to the Token <a class="el" href="d8/d62/structefd_1_1Swap.xhtml" title="Struct used for representing a swap between two qubits;. ">Swap</a> Finder </td></tr>
<tr id="row_61_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d7/db0/structefd_1_1bmt_1_1TracebackInfo.xhtml" target="_self">efd::bmt::TracebackInfo</a></td><td class="desc">Necessary information for getting the combinations in phase 2 </td></tr>
<tr id="row_62_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="df/d2f/structVal.xhtml" target="_self">Val</a></td><td class="desc"></td></tr>
<tr id="row_63_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/d7a/structefd_1_1WrapperVal.xhtml" target="_self">efd::WrapperVal&lt; T &gt;</a></td><td class="desc">Wrapper for primitive values </td></tr>
<tr id="row_64_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="d9/d6b/classefd_1_1Xbit.xhtml" target="_self">efd::Xbit</a></td><td class="desc">Represents the id of one Quantum or Classical bit </td></tr>
<tr id="row_65_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d2b/structefd_1_1XbitToNumber_1_1XbitInfo.xhtml" target="_self">efd::XbitToNumber::XbitInfo</a></td><td class="desc"></td></tr>
<tr id="row_66_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="db/d0c/structefd_1_1XbitToNumber.xhtml" target="_self">efd::XbitToNumber</a></td><td class="desc">Maps every quantum and classic bit (not register) to a number inside a vector </td></tr>
</table>
</div><!-- directory -->
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:44 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
