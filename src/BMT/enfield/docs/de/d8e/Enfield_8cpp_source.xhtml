<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: tools/Enfield.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_4eeb864c4eec08c7d6b9d3b0352cfdde.xhtml">tools</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Enfield.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../de/d8e/Enfield_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d41/CommandLine_8h.xhtml">enfield/Support/CommandLine.h</a>&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d4/d73/QModule_8h.xhtml">enfield/Transform/QModule.h</a>&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/d91/Transform_2Driver_8h.xhtml">enfield/Transform/Driver.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/d82/PassCache_8h.xhtml">enfield/Transform/PassCache.h</a>&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/db5/IntrinsicGateCostPass_8h.xhtml">enfield/Transform/IntrinsicGateCostPass.h</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../df/d55/QModuleQualityEvalPass_8h.xhtml">enfield/Transform/QModuleQualityEvalPass.h</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d4/d61/InlineAllPass_8h.xhtml">enfield/Transform/InlineAllPass.h</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/dff/ReverseEdgesPass_8h.xhtml">enfield/Transform/ReverseEdgesPass.h</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/db1/Allocators_8h.xhtml">enfield/Transform/Allocators/Allocators.h</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../da/d8e/Architectures_8h.xhtml">enfield/Arch/Architectures.h</a>&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/d09/Stats_8h.xhtml">enfield/Support/Stats.h</a>&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d1/d73/Defs_8h.xhtml">enfield/Support/Defs.h</a>&quot;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;cassert&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;cctype&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../de/d8e/Enfield_8cpp.xhtml#a9932348cd1811ae3b2b18ad309ab48f5">   22</a></span>&#160;<span class="keyword">typedef</span> std::map&lt;std::string, uint32_t&gt; <a class="code" href="../../de/d8e/Enfield_8cpp.xhtml#a9932348cd1811ae3b2b18ad309ab48f5">MapGateUInt</a>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a> {</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../de/d50/classefd_1_1Opt.xhtml#a258c6aa1772de2cfc255d5a080bbb8c4">   25</a></span>&#160;    <span class="keyword">template</span> &lt;&gt; std::string <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#a5bcbb400700c773f4bba2af9f7478bf6">Opt&lt;MapGateUInt&gt;::getStringVal</a>() {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        std::string str;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; pair : mVal)</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            str += pair.first + <span class="stringliteral">&quot;:&quot;</span> + <a class="code" href="../../d8/dcc/namespacestd.xhtml#a76fb98cd4a35566d53c2f0513c5d12d1">std::to_string</a>(pair.second) + <span class="stringliteral">&quot; &quot;</span>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../df/d04/structefd_1_1ParseOptTrait_3_01MapGateUInt_01_4.xhtml">   32</a></span>&#160;    <span class="keyword">template</span> &lt;&gt; <span class="keyword">struct </span><a class="code" href="../../db/df8/structefd_1_1ParseOptTrait.xhtml">ParseOptTrait</a>&lt;<a class="code" href="../../de/d8e/Enfield_8cpp.xhtml#a9932348cd1811ae3b2b18ad309ab48f5">MapGateUInt</a>&gt; {</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="../../df/d04/structefd_1_1ParseOptTrait_3_01MapGateUInt_01_4.xhtml#a9f6b00556694463205a5a9dc4ad7ad78">   33</a></span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../df/d04/structefd_1_1ParseOptTrait_3_01MapGateUInt_01_4.xhtml#a9f6b00556694463205a5a9dc4ad7ad78">Run</a>(<a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">Opt&lt;MapGateUInt&gt;</a>* opt, std::vector&lt;std::string&gt; args) {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            std::string sVector = args[0];</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            std::istringstream iVector(sVector);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <span class="keywordflow">for</span> (std::string str; iVector &gt;&gt; str;) {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                std::size_t i = str.find(<span class="charliteral">&#39;:&#39;</span>);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                int32_t l = i, r = i;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                <span class="keywordflow">if</span> (i != std::string::npos) {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                    <span class="keywordflow">while</span> (l &gt;= 0 &amp;&amp; !isspace(str[l])) --l;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    <span class="keywordflow">while</span> (r &lt; (int32_t) str.length() &amp;&amp; !isspace(str[r])) ++r;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                    ++l; --r;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                std::string key = str.substr(l, i - l);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                std::string val = str.substr(i + 1, r - i);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                opt-&gt;mVal[key] = std::stoull(val);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    };</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">efd::Opt&lt;MapGateUInt&gt;</a> GateWeights</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;(<span class="stringliteral">&quot;-gate-w&quot;</span>,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">&quot;Cost of using each basis gate. \</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="stringliteral">Should be specified as &lt;gate&gt;:&lt;w&gt; between quotes.&quot;</span>,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{{<span class="stringliteral">&quot;U&quot;</span>, 1}, {<span class="stringliteral">&quot;CX&quot;</span>, 10}}, <span class="keyword">false</span>);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">Opt&lt;std::string&gt;</a> InFilepath</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;(<span class="stringliteral">&quot;i&quot;</span>, <span class="stringliteral">&quot;The input file.&quot;</span>, <span class="stringliteral">&quot;/dev/stdin&quot;</span>, <span class="keyword">true</span>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">Opt&lt;std::string&gt;</a> OutFilepath</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;(<span class="stringliteral">&quot;o&quot;</span>, <span class="stringliteral">&quot;The output file.&quot;</span>, <span class="stringliteral">&quot;/dev/stdout&quot;</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">Opt&lt;std::string&gt;</a> ArchFilepath</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;(<span class="stringliteral">&quot;arch-file&quot;</span>, <span class="stringliteral">&quot;An input file for using a custom architecture.&quot;</span>, <span class="stringliteral">&quot;&quot;</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">Opt&lt;bool&gt;</a> NoPretty</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;(<span class="stringliteral">&quot;-no-pretty&quot;</span>, <span class="stringliteral">&quot;Print in a pretty format (negation).&quot;</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">Opt&lt;bool&gt;</a> ShowStats</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;(<span class="stringliteral">&quot;stats&quot;</span>, <span class="stringliteral">&quot;Print statistical data collected.&quot;</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">Opt&lt;bool&gt;</a> Reorder</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;(<span class="stringliteral">&quot;ord&quot;</span>, <span class="stringliteral">&quot;Order the program input.&quot;</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">Opt&lt;bool&gt;</a> NoVerify</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;(<span class="stringliteral">&quot;-no-verify&quot;</span>, <span class="stringliteral">&quot;Verify the compiled code (negation).&quot;</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">Opt&lt;bool&gt;</a> Force</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;(<span class="stringliteral">&quot;f&quot;</span>, <span class="stringliteral">&quot;Compile and print the module, even if verification fails.&quot;</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">Opt&lt;EnumAllocator&gt;</a> Alloc</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;(<span class="stringliteral">&quot;alloc&quot;</span>, <span class="stringliteral">&quot;Sets the allocator to be used.&quot;</span>, <a class="code" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3af97f0e1738303c3421f25d4c96fb15e5">Allocator::Q_dynprog</a>, <span class="keyword">false</span>);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">efd::Opt&lt;EnumArchitecture&gt;</a> Arch</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;(<span class="stringliteral">&quot;arch&quot;</span>, <span class="stringliteral">&quot;Name of the architechture, or a file with the connectivity graph.&quot;</span>,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3fa64c29e728ce10959619fecf95dfdb2e0">Architecture::A_ibmqx2</a>, <span class="keyword">false</span>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">Opt&lt;std::string&gt;</a> PrintDepGraphFile</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;(<span class="stringliteral">&quot;-print-depgraph&quot;</span>, <span class="stringliteral">&quot;Choose a file to print the dependency graph.&quot;</span>, <span class="stringliteral">&quot;&quot;</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">static</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">Opt&lt;std::string&gt;</a> PrintArchGraphFile</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;(<span class="stringliteral">&quot;-print-archgraph&quot;</span>, <span class="stringliteral">&quot;Choose a file to print the architecture graph.&quot;</span>, <span class="stringliteral">&quot;&quot;</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">static</span> <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">efd::Stat&lt;uint32_t&gt;</a> TotalCost</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;(<span class="stringliteral">&quot;TotalCost&quot;</span>, <span class="stringliteral">&quot;Total cost after allocating the qubits.&quot;</span>);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword">static</span> <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">efd::Stat&lt;uint32_t&gt;</a> Depth</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;(<span class="stringliteral">&quot;Depth&quot;</span>, <span class="stringliteral">&quot;Total depth after allocating the qubits.&quot;</span>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">static</span> <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">efd::Stat&lt;uint32_t&gt;</a> Gates</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;(<span class="stringliteral">&quot;Gates&quot;</span>, <span class="stringliteral">&quot;Total number of gates after allocating the qubits.&quot;</span>);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">static</span> <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">efd::Stat&lt;uint32_t&gt;</a> WeightedCost</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;(<span class="stringliteral">&quot;WeightedCost&quot;</span>, <span class="stringliteral">&quot;Total weighted cost after allocating the qubits.&quot;</span>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> DumpToOutFile(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule::Ref</a> qmod) {</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    std::ofstream O(OutFilepath.getVal());</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="../../d4/deb/namespaceefd.xhtml#a540a63d03d49cb675f4f9d62e6b07780">PrintToStream</a>(qmod, O, !NoPretty.getVal());</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    O.close();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> ComputeStats(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule::Ref</a> qmod, <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">ArchGraph::sRef</a> archGraph) {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    TotalCost = PassCache::Get&lt;IntrinsicGateCostPass&gt;(qmod)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                    -&gt;getData();</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    std::vector&lt;std::string&gt; basisGates;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; pair : GateWeights.getVal()) {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        basisGates.push_back(pair.first);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">auto</span> inlinePass = <a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a39637a556c08bf458f9bf20812d11470">InlineAllPass::Create</a>(basisGates);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">auto</span> reversePass = <a class="code" href="../../d2/ddc/classefd_1_1ReverseEdgesPass.xhtml#a2ded6319bd54320a9fa099df78a04dc6">ReverseEdgesPass::Create</a>(archGraph);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">auto</span> qualityPass = <a class="code" href="../../dd/d79/classefd_1_1QModuleQualityEvalPass.xhtml#a88498958628bb925060202d443e27d55">QModuleQualityEvalPass::Create</a>(GateWeights.getVal());</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#acb82213b8e43f26fdca8266be3cc4c7c">PassCache::Run</a>(qmod, inlinePass.get());</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#acb82213b8e43f26fdca8266be3cc4c7c">PassCache::Run</a>(qmod, reversePass.get());</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#acb82213b8e43f26fdca8266be3cc4c7c">PassCache::Run</a>(qmod, inlinePass.get());</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="../../d1/df9/classefd_1_1PassCache.xhtml#acb82213b8e43f26fdca8266be3cc4c7c">PassCache::Run</a>(qmod, qualityPass.get());</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keyword">auto</span> &amp;quality = qualityPass-&gt;getData();</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    Depth = quality.mDepth;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    Gates = quality.mGates;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    WeightedCost = quality.mWeightedCost;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="../../de/d8e/Enfield_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">  128</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../de/d8e/Enfield_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>** argv) {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="../../d4/deb/namespaceefd.xhtml#ae4b41f17586b3bdf847d049e8994977c">InitializeAllQbitAllocators</a>();</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="../../d4/deb/namespaceefd.xhtml#a033a77baa1aa02f207c7a918246aeb59">InitializeAllArchitectures</a>();</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="../../d4/deb/namespaceefd.xhtml#a6bbed132b341f48d4aad4f970e3822bc">ParseArguments</a>(argc, argv);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">QModule::uRef</a> qmod = <a class="code" href="../../d4/deb/namespaceefd.xhtml#ab4181eb2261a81187a3e8800ec2782ed">ParseFile</a>(InFilepath.getVal());</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">if</span> (qmod.get() != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">ArchGraph::sRef</a> archGraph;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">if</span> (!ArchFilepath.isParsed() &amp;&amp; <a class="code" href="../../d4/deb/namespaceefd.xhtml#ac2b3e87bf8e57ce91119a679dd13440e">HasArchitecture</a>(Arch.getVal())) {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            archGraph = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a24ee93e1ddaa0a368ff107a3f2e85771">CreateArchitecture</a>(Arch.getVal());</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ArchFilepath.isParsed()) {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            archGraph = <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a11a2cd37da32cf420b0adeb322872c7a">ArchGraph::Read</a>(ArchFilepath.getVal());</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Architecture: &quot;</span> &lt;&lt; Arch.getVal().getStringValue()</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                &lt;&lt; <span class="stringliteral">&quot; not found.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        }</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">if</span> (PrintArchGraphFile.isParsed()) {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            std::ofstream ofs(PrintArchGraphFile.getVal());</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            ofs &lt;&lt; archGraph-&gt;dotify() &lt;&lt; std::endl;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            ofs.close();</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        }</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">if</span> (PrintDepGraphFile.isParsed()) {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            std::ofstream ofs(PrintDepGraphFile.getVal());</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <a class="code" href="../../d4/deb/namespaceefd.xhtml#a4fe79e93e6a1353b6d765bf2e540ee1c">PrintDependencyGraph</a>(qmod.get(), ofs);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            ofs.close();</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <a class="code" href="../../d0/d62/structefd_1_1CompilationSettings.xhtml">CompilationSettings</a> settings {</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            archGraph,</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            Alloc.getVal(),</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                <span class="stringliteral">&quot;intrinsic_swap__&quot;</span>,</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                <span class="stringliteral">&quot;intrinsic_rev_cx__&quot;</span>,</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <span class="stringliteral">&quot;intrinsic_lcx__&quot;</span>,</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                <span class="stringliteral">&quot;cx&quot;</span>,</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                <span class="stringliteral">&quot;u1&quot;</span>,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                <span class="stringliteral">&quot;u2&quot;</span>,</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <span class="stringliteral">&quot;u3&quot;</span>,</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                <span class="stringliteral">&quot;h&quot;</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            },</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            Reorder.getVal(),</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            !NoVerify.getVal(),</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            Force.getVal()</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        };</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        qmod.reset(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a6b1cf6e8a83c7c7e449ef7f3ea28287c">Compile</a>(std::move(qmod), settings).release());</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">if</span> (qmod.get() != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            DumpToOutFile(qmod.get());</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        ComputeStats(qmod.get(), archGraph);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">if</span> (ShowStats.getVal())</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#acef44623062a67b96096a7d9d4448433">efd::PrintStats</a>();</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div><div class="ttc" id="classefd_1_1PassCache_xhtml_acb82213b8e43f26fdca8266be3cc4c7c"><div class="ttname"><a href="../../d1/df9/classefd_1_1PassCache.xhtml#acb82213b8e43f26fdca8266be3cc4c7c">efd::PassCache::Run</a></div><div class="ttdeci">static void Run(QModule::Ref qmod)</div><div class="ttdoc">Runs the pass T in qmod. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d82/PassCache_8h_source.xhtml#l00047">PassCache.h:47</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a6b1cf6e8a83c7c7e449ef7f3ea28287c"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a6b1cf6e8a83c7c7e449ef7f3ea28287c">efd::Compile</a></div><div class="ttdeci">QModule::uRef Compile(QModule::uRef qmod, CompilationSettings settings)</div><div class="ttdoc">Compile qmod, and return the compiled version. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dd9/Driver_8cpp_source.xhtml#l00024">Driver.cpp:24</a></div></div>
<div class="ttc" id="Defs_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00046">Defs.h:46</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a540a63d03d49cb675f4f9d62e6b07780"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a540a63d03d49cb675f4f9d62e6b07780">efd::PrintToStream</a></div><div class="ttdeci">void PrintToStream(QModule::Ref qmod, std::ostream &amp;o=std::cout, bool pretty=true)</div><div class="ttdoc">Print qmod to an standard output stream o. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dd9/Driver_8cpp_source.xhtml#l00107">Driver.cpp:107</a></div></div>
<div class="ttc" id="Enfield_8cpp_xhtml_a3c04138a5bfe5d72780bb7e82a18e627"><div class="ttname"><a href="../../de/d8e/Enfield_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a></div><div class="ttdeci">int main(int argc, char **argv)</div><div class="ttdef"><b>Definition:</b> <a href="../../de/d8e/Enfield_8cpp_source.xhtml#l00128">Enfield.cpp:128</a></div></div>
<div class="ttc" id="IntrinsicGateCostPass_8h_xhtml"><div class="ttname"><a href="../../d3/db5/IntrinsicGateCostPass_8h.xhtml">IntrinsicGateCostPass.h</a></div></div>
<div class="ttc" id="classefd_1_1ReverseEdgesPass_xhtml_a2ded6319bd54320a9fa099df78a04dc6"><div class="ttname"><a href="../../d2/ddc/classefd_1_1ReverseEdgesPass.xhtml#a2ded6319bd54320a9fa099df78a04dc6">efd::ReverseEdgesPass::Create</a></div><div class="ttdeci">static uRef Create(ArchGraph::sRef graph)</div><div class="ttdoc">Create an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d17/ReverseEdgesPass_8cpp_source.xhtml#l00097">ReverseEdgesPass.cpp:97</a></div></div>
<div class="ttc" id="Allocators_8h_xhtml"><div class="ttname"><a href="../../db/db1/Allocators_8h.xhtml">Allocators.h</a></div></div>
<div class="ttc" id="classefd_1_1Stat_xhtml"><div class="ttname"><a href="../../d6/d1d/classefd_1_1Stat.xhtml">efd::Stat</a></div><div class="ttdoc">Stats of a given type. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d09/Stats_8h_source.xhtml#l00041">Stats.h:41</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml">efd::QModule</a></div><div class="ttdoc">Qasm module representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00013">QModule.h:13</a></div></div>
<div class="ttc" id="Enfield_8cpp_xhtml_a9932348cd1811ae3b2b18ad309ab48f5"><div class="ttname"><a href="../../de/d8e/Enfield_8cpp.xhtml#a9932348cd1811ae3b2b18ad309ab48f5">MapGateUInt</a></div><div class="ttdeci">std::map&lt; std::string, uint32_t &gt; MapGateUInt</div><div class="ttdef"><b>Definition:</b> <a href="../../de/d8e/Enfield_8cpp_source.xhtml#l00022">Enfield.cpp:22</a></div></div>
<div class="ttc" id="QModuleQualityEvalPass_8h_xhtml"><div class="ttname"><a href="../../df/d55/QModuleQualityEvalPass_8h.xhtml">QModuleQualityEvalPass.h</a></div></div>
<div class="ttc" id="classefd_1_1Opt_xhtml"><div class="ttname"><a href="../../de/d50/classefd_1_1Opt.xhtml">efd::Opt</a></div><div class="ttdoc">Class used to declare the command line options available. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d41/CommandLine_8h_source.xhtml#l00012">CommandLine.h:12</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00005">Architectures.cpp:5</a></div></div>
<div class="ttc" id="Architectures_8h_xhtml"><div class="ttname"><a href="../../da/d8e/Architectures_8h.xhtml">Architectures.h</a></div></div>
<div class="ttc" id="Transform_2Driver_8h_xhtml"><div class="ttname"><a href="../../d6/d91/Transform_2Driver_8h.xhtml">Driver.h</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a85ca5b04a1d4d196b30004c3e1acaf7e"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a85ca5b04a1d4d196b30004c3e1acaf7e">efd::QModule::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; QModule &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00016">QModule.h:16</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a8c9131ca43a772179c24fa4dc9701bb2"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">efd::ArchGraph::sRef</a></div><div class="ttdeci">std::shared_ptr&lt; ArchGraph &gt; sRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d9d/ArchGraph_8h_source.xhtml#l00014">ArchGraph.h:14</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_ab4181eb2261a81187a3e8800ec2782ed"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#ab4181eb2261a81187a3e8800ec2782ed">efd::ParseFile</a></div><div class="ttdeci">Node::uRef ParseFile(std::string filename, std::string path=&quot;./&quot;, bool forceStdLib=true)</div><div class="ttdoc">Parse filename at path. </div></div>
<div class="ttc" id="CommandLine_8h_xhtml"><div class="ttname"><a href="../../d9/d41/CommandLine_8h.xhtml">CommandLine.h</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a6bbed132b341f48d4aad4f970e3822bc"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a6bbed132b341f48d4aad4f970e3822bc">efd::ParseArguments</a></div><div class="ttdeci">void ParseArguments(const int argc, const char **argv)</div><div class="ttdoc">Parses the command line arguments (this function should be used in the main function). </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dd1/CommandLine_8cpp_source.xhtml#l00233">CommandLine.cpp:233</a></div></div>
<div class="ttc" id="InlineAllPass_8h_xhtml"><div class="ttname"><a href="../../d4/d61/InlineAllPass_8h.xhtml">InlineAllPass.h</a></div></div>
<div class="ttc" id="ReverseEdgesPass_8h_xhtml"><div class="ttname"><a href="../../d6/dff/ReverseEdgesPass_8h.xhtml">ReverseEdgesPass.h</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a033a77baa1aa02f207c7a918246aeb59"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a033a77baa1aa02f207c7a918246aeb59">efd::InitializeAllArchitectures</a></div><div class="ttdeci">void InitializeAllArchitectures()</div><div class="ttdoc">Registers all available architectures in the register. </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00074">Architectures.cpp:74</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_acef44623062a67b96096a7d9d4448433"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#acef44623062a67b96096a7d9d4448433">efd::PrintStats</a></div><div class="ttdeci">void PrintStats(std::ostream &amp;out=std::cout)</div><div class="ttdoc">Usually called in the end of the program, i.e. when all statistical data have already been collected...</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d1f/Stats_8cpp_source.xhtml#l00066">Stats.cpp:66</a></div></div>
<div class="ttc" id="PassCache_8h_xhtml"><div class="ttname"><a href="../../db/d82/PassCache_8h.xhtml">PassCache.h</a></div></div>
<div class="ttc" id="structefd_1_1CompilationSettings_xhtml"><div class="ttname"><a href="../../d0/d62/structefd_1_1CompilationSettings.xhtml">efd::CompilationSettings</a></div><div class="ttdoc">Required information in order to compile a QModule. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d91/Transform_2Driver_8h_source.xhtml#l00010">Driver.h:10</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a3ab6f82f2df49bbde5c943bbe60c3cf3af97f0e1738303c3421f25d4c96fb15e5"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3af97f0e1738303c3421f25d4c96fb15e5">efd::Allocator::Q_dynprog</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a4fe79e93e6a1353b6d765bf2e540ee1c"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a4fe79e93e6a1353b6d765bf2e540ee1c">efd::PrintDependencyGraph</a></div><div class="ttdeci">void PrintDependencyGraph(QModule::Ref qmod, std::ostream &amp;o=std::cout)</div><div class="ttdoc">Print the dependency graph of the qmod in o. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dd9/Driver_8cpp_source.xhtml#l00111">Driver.cpp:111</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_abc6b2068b056c3d6eb2cdf91fb7c2a3fa64c29e728ce10959619fecf95dfdb2e0"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#abc6b2068b056c3d6eb2cdf91fb7c2a3fa64c29e728ce10959619fecf95dfdb2e0">efd::Architecture::A_ibmqx2</a></div></div>
<div class="ttc" id="QModule_8h_xhtml"><div class="ttname"><a href="../../d4/d73/QModule_8h.xhtml">QModule.h</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_ac2b3e87bf8e57ce91119a679dd13440e"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#ac2b3e87bf8e57ce91119a679dd13440e">efd::HasArchitecture</a></div><div class="ttdeci">bool HasArchitecture(EnumArchitecture key)</div><div class="ttdoc">Returns true if there is an architecture mapped by key;. </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00083">Architectures.cpp:83</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllPass_xhtml_a39637a556c08bf458f9bf20812d11470"><div class="ttname"><a href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a39637a556c08bf458f9bf20812d11470">efd::InlineAllPass::Create</a></div><div class="ttdeci">static uRef Create(std::vector&lt; std::string &gt; basis=std::vector&lt; std::string &gt;())</div><div class="ttdoc">Creates an instance of this pass. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d93/InlineAllPass_8cpp_source.xhtml#l00062">InlineAllPass.cpp:62</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a11a2cd37da32cf420b0adeb322872c7a"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a11a2cd37da32cf420b0adeb322872c7a">efd::ArchGraph::Read</a></div><div class="ttdeci">static uRef Read(std::string filepath)</div><div class="ttdoc">Parses the file filename into a ArchGraph representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00139">ArchGraph.cpp:139</a></div></div>
<div class="ttc" id="classefd_1_1QModuleQualityEvalPass_xhtml_a88498958628bb925060202d443e27d55"><div class="ttname"><a href="../../dd/d79/classefd_1_1QModuleQualityEvalPass.xhtml#a88498958628bb925060202d443e27d55">efd::QModuleQualityEvalPass::Create</a></div><div class="ttdeci">static uRef Create(MapGateUInt gatesW)</div><div class="ttdoc">Returns a new instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dac/QModuleQualityEvalPass_8cpp_source.xhtml#l00046">QModuleQualityEvalPass.cpp:46</a></div></div>
<div class="ttc" id="Defs_8h_xhtml"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml">Defs.h</a></div></div>
<div class="ttc" id="Stats_8h_xhtml"><div class="ttname"><a href="../../dc/d09/Stats_8h.xhtml">Stats.h</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a76fb98cd4a35566d53c2f0513c5d12d1"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml#a76fb98cd4a35566d53c2f0513c5d12d1">std::to_string</a></div><div class="ttdeci">string to_string(efd::EnumString&lt; T, first, last &gt; &amp;val)</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00053">EnumString.h:53</a></div></div>
<div class="ttc" id="classefd_1_1Opt_xhtml_a5bcbb400700c773f4bba2af9f7478bf6"><div class="ttname"><a href="../../de/d50/classefd_1_1Opt.xhtml#a5bcbb400700c773f4bba2af9f7478bf6">efd::Opt::getStringVal</a></div><div class="ttdeci">std::string getStringVal() override</div><div class="ttdoc">Return the value in a string representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d41/CommandLine_8h_source.xhtml#l00173">CommandLine.h:173</a></div></div>
<div class="ttc" id="structefd_1_1ParseOptTrait_3_01MapGateUInt_01_4_xhtml_a9f6b00556694463205a5a9dc4ad7ad78"><div class="ttname"><a href="../../df/d04/structefd_1_1ParseOptTrait_3_01MapGateUInt_01_4.xhtml#a9f6b00556694463205a5a9dc4ad7ad78">efd::ParseOptTrait&lt; MapGateUInt &gt;::Run</a></div><div class="ttdeci">static void Run(Opt&lt; MapGateUInt &gt; *opt, std::vector&lt; std::string &gt; args)</div><div class="ttdef"><b>Definition:</b> <a href="../../de/d8e/Enfield_8cpp_source.xhtml#l00033">Enfield.cpp:33</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_ae4b41f17586b3bdf847d049e8994977c"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#ae4b41f17586b3bdf847d049e8994977c">efd::InitializeAllQbitAllocators</a></div><div class="ttdeci">void InitializeAllQbitAllocators()</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/dea/Allocators_8cpp_source.xhtml#l00072">Allocators.cpp:72</a></div></div>
<div class="ttc" id="structefd_1_1ParseOptTrait_xhtml"><div class="ttname"><a href="../../db/df8/structefd_1_1ParseOptTrait.xhtml">efd::ParseOptTrait</a></div><div class="ttdoc">Parses the arguments in args to opt. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d41/CommandLine_8h_source.xhtml#l00058">CommandLine.h:58</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a24ee93e1ddaa0a368ff107a3f2e85771"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a24ee93e1ddaa0a368ff107a3f2e85771">efd::CreateArchitecture</a></div><div class="ttdeci">ArchRegistry::RetTy CreateArchitecture(EnumArchitecture key)</div><div class="ttdoc">Creates an architecture referenced by name. </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00091">Architectures.cpp:91</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:35 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
