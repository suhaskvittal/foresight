<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: include/enfield/Support/EnumString.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_ca9ae9fc199b7939600155691e280c84.xhtml">enfield</a></li><li class="navelem"><a class="el" href="../../dir_71e3284cbba00b0db547557b8d5e42ce.xhtml">Support</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">EnumString.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../dd/d62/EnumString_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef __EFD_ENUM_STRING_H__</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define __EFD_ENUM_STRING_H__</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d1/d73/Defs_8h.xhtml">enfield/Support/Defs.h</a>&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;typeinfo&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a> {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, T first, T last&gt;</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../dc/d5d/classefd_1_1EnumString.xhtml">   16</a></span>&#160;        <span class="keyword">class </span><a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml">EnumString</a> {</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;            <span class="keyword">private</span>:</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                <span class="keyword">static</span> std::vector&lt;std::string&gt; mStrVal;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                uint32_t mValue;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                <span class="keywordtype">void</span> initImpl(std::string init);</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            <span class="keyword">public</span>:</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                <a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#aaab8abe6b72115b12edb9ef4c84d90e0">EnumString</a>(T init);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                <a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#aaab8abe6b72115b12edb9ef4c84d90e0">EnumString</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* cstr);</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                <a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#aaab8abe6b72115b12edb9ef4c84d90e0">EnumString</a>(std::string init);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                std::string <a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a39d129d188c7746b7f8b65308d7d7b53">getStringValue</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                T <a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a2a1c83a7056aca1cd040544b5919f132">getValue</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                <span class="keywordtype">bool</span> operator&lt;(const EnumString&lt;T, first, last&gt;&amp; rhs) <span class="keyword">const</span>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a746bc8641b5a0065e9f8d42a328fef0c">   38</a></span>&#160;                <span class="keyword">static</span> std::vector&lt;std::string&gt; <a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a746bc8641b5a0065e9f8d42a328fef0c">List</a>() {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                    <span class="keywordflow">return</span> mStrVal;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                }</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a7f47f58bfa7d2b5abce67976bd5e3ff4">   44</a></span>&#160;                <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a7f47f58bfa7d2b5abce67976bd5e3ff4">Has</a>(std::string str) {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                    <span class="keyword">auto</span> it = std::find(mStrVal.begin(), mStrVal.end(), str);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                    <span class="keywordflow">return</span> it != mStrVal.end();</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        };</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="../../d8/dcc/namespacestd.xhtml">   51</a></span>&#160;<span class="keyword">namespace </span><a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a> {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, T first, T last&gt;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../d8/dcc/namespacestd.xhtml#a76fb98cd4a35566d53c2f0513c5d12d1">   53</a></span>&#160;        <span class="keywordtype">string</span> <a class="code" href="../../d8/dcc/namespacestd.xhtml#a76fb98cd4a35566d53c2f0513c5d12d1">to_string</a>(<a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml">efd::EnumString&lt;T, first, last&gt;</a>&amp; val) {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordflow">return</span> val.<a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a39d129d188c7746b7f8b65308d7d7b53">getStringValue</a>();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, T first, T last&gt;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../dc/d5d/classefd_1_1EnumString.xhtml#aaab8abe6b72115b12edb9ef4c84d90e0">   59</a></span>&#160;<a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#aaab8abe6b72115b12edb9ef4c84d90e0">efd::EnumString&lt;T, first, last&gt;::EnumString</a>(T init) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    mValue = <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(init);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">if</span> (mValue &gt; static_cast&lt;uint32_t&gt;(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a98bd1c45684cf587ac2347a92dd7bb51">last</a>) || mValue &lt; static_cast&lt;uint32_t&gt;(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a8b04d5e3775d298e78455efc5ca404d5">first</a>)) {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Enum &#39;&quot;</span> &lt;&lt; <span class="keyword">typeid</span>(T).name() &lt;&lt; <span class="stringliteral">&quot;&#39; doesn&#39;t have such value &#39;&quot;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            &lt;&lt; mValue &lt;&lt; <span class="stringliteral">&quot;&#39;.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(ExitCode::EXIT_unreachable);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    mValue = mValue - <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a8b04d5e3775d298e78455efc5ca404d5">first</a>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, T first, T last&gt;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a04575249172a60e08794926afc5545cd">   72</a></span>&#160;<a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#aaab8abe6b72115b12edb9ef4c84d90e0">efd::EnumString&lt;T, first, last&gt;::EnumString</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* cstr) {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    initImpl(std::string(cstr));</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, T first, T last&gt;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../dc/d5d/classefd_1_1EnumString.xhtml#ac7e8a683c785a6b907405ec0d3fe52b6">   77</a></span>&#160;<a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#aaab8abe6b72115b12edb9ef4c84d90e0">efd::EnumString&lt;T, first, last&gt;::EnumString</a>(std::string init) {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    initImpl(init);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, T first, T last&gt;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml">efd::EnumString&lt;T, first, last&gt;::initImpl</a>(std::string init) {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml">EnumString&lt;T, first, last&gt;::Has</a>(init)) {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Enum &#39;&quot;</span> &lt;&lt; <span class="keyword">typeid</span>(T).name() &lt;&lt; <span class="stringliteral">&quot;&#39; doesn&#39;t have string &#39;&quot;</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            &lt;&lt; init &lt;&lt; <span class="stringliteral">&quot;&#39;.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(ExitCode::EXIT_unreachable);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">auto</span> it = std::find(mStrVal.begin(), mStrVal.end(), init);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    mValue = std::distance(mStrVal.begin(), it);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, T first, T last&gt;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a39d129d188c7746b7f8b65308d7d7b53">   94</a></span>&#160;std::string <a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a39d129d188c7746b7f8b65308d7d7b53">efd::EnumString&lt;T, first, last&gt;::getStringValue</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">auto</span> strSize = mStrVal.size();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">if</span> (strSize &lt; mValue) {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Enum &#39;&quot;</span> &lt;&lt; <span class="keyword">typeid</span>(T).name() &lt;&lt; <span class="stringliteral">&quot;&#39; does not have value over &quot;</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            &lt;&lt; strSize &lt;&lt; <span class="stringliteral">&quot;: &quot;</span> &lt;&lt; mValue &lt;&lt; std::endl;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(ExitCode::EXIT_unreachable);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">if</span> (static_cast&lt;uint32_t&gt;(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a98bd1c45684cf587ac2347a92dd7bb51">last</a>) - static_cast&lt;uint32_t&gt;(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a8b04d5e3775d298e78455efc5ca404d5">first</a>) + 1 != strSize) {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a9423380a92639b296ea0a984ea7e1c6b">WAR</a> &lt;&lt; <span class="stringliteral">&quot;Enum &#39;&quot;</span> &lt;&lt; <span class="keyword">typeid</span>(T).name() &lt;&lt; <span class="stringliteral">&quot;&#39; segmented. &quot;</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;Returning wrong string.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">return</span> mStrVal[mValue];</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, T first, T last&gt;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a2a1c83a7056aca1cd040544b5919f132">  112</a></span>&#160;T <a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a2a1c83a7056aca1cd040544b5919f132">efd::EnumString&lt;T, first, last&gt;::getValue</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(mValue + <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a8b04d5e3775d298e78455efc5ca404d5">first</a>));</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, T first, T last&gt;</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a06582b59d2e5a7b88ca27b9f875dd739">  117</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml#a06582b59d2e5a7b88ca27b9f875dd739">efd::EnumString&lt;T, first, last&gt;::operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="../../dc/d5d/classefd_1_1EnumString.xhtml">EnumString&lt;T, first, last&gt;</a>&amp; rhs)<span class="keyword"> const </span>{</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">return</span> mValue &lt; rhs.mValue;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">#endif </span></div><div class="ttc" id="namespaceefd_xhtml_af3487901a239a99750dc5dcdc3a8c868"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a></div><div class="ttdeci">void ExitWith(ExitCode e)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d72/Defs_8cpp_source.xhtml#l00045">Defs.cpp:45</a></div></div>
<div class="ttc" id="Defs_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00046">Defs.h:46</a></div></div>
<div class="ttc" id="classefd_1_1EnumString_xhtml_a746bc8641b5a0065e9f8d42a328fef0c"><div class="ttname"><a href="../../dc/d5d/classefd_1_1EnumString.xhtml#a746bc8641b5a0065e9f8d42a328fef0c">efd::EnumString::List</a></div><div class="ttdeci">static std::vector&lt; std::string &gt; List()</div><div class="ttdoc">Returns a list with every enumerated element in its string representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00038">EnumString.h:38</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00005">Architectures.cpp:5</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00051">EnumString.h:51</a></div></div>
<div class="ttc" id="classefd_1_1EnumString_xhtml_aaab8abe6b72115b12edb9ef4c84d90e0"><div class="ttname"><a href="../../dc/d5d/classefd_1_1EnumString.xhtml#aaab8abe6b72115b12edb9ef4c84d90e0">efd::EnumString::EnumString</a></div><div class="ttdeci">EnumString(T init)</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00059">EnumString.h:59</a></div></div>
<div class="ttc" id="classefd_1_1EnumString_xhtml_a2a1c83a7056aca1cd040544b5919f132"><div class="ttname"><a href="../../dc/d5d/classefd_1_1EnumString.xhtml#a2a1c83a7056aca1cd040544b5919f132">efd::EnumString::getValue</a></div><div class="ttdeci">T getValue() const</div><div class="ttdoc">Returns the value of the enum. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00112">EnumString.h:112</a></div></div>
<div class="ttc" id="Defs_8h_xhtml_a9423380a92639b296ea0a984ea7e1c6b"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml#a9423380a92639b296ea0a984ea7e1c6b">WAR</a></div><div class="ttdeci">#define WAR</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00047">Defs.h:47</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a3ab6f82f2df49bbde5c943bbe60c3cf3a98bd1c45684cf587ac2347a92dd7bb51"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a98bd1c45684cf587ac2347a92dd7bb51">efd::Allocator::last</a></div></div>
<div class="ttc" id="classefd_1_1EnumString_xhtml_a39d129d188c7746b7f8b65308d7d7b53"><div class="ttname"><a href="../../dc/d5d/classefd_1_1EnumString.xhtml#a39d129d188c7746b7f8b65308d7d7b53">efd::EnumString::getStringValue</a></div><div class="ttdeci">std::string getStringValue() const</div><div class="ttdoc">Returns the string value of the enum. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00094">EnumString.h:94</a></div></div>
<div class="ttc" id="classefd_1_1EnumString_xhtml_a06582b59d2e5a7b88ca27b9f875dd739"><div class="ttname"><a href="../../dc/d5d/classefd_1_1EnumString.xhtml#a06582b59d2e5a7b88ca27b9f875dd739">efd::EnumString::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const EnumString&lt; T, first, last &gt; &amp;rhs) const</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00117">EnumString.h:117</a></div></div>
<div class="ttc" id="classefd_1_1EnumString_xhtml"><div class="ttname"><a href="../../dc/d5d/classefd_1_1EnumString.xhtml">efd::EnumString</a></div><div class="ttdoc">Enum wrapper class. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00016">EnumString.h:16</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a3ab6f82f2df49bbde5c943bbe60c3cf3a8b04d5e3775d298e78455efc5ca404d5"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a3ab6f82f2df49bbde5c943bbe60c3cf3a8b04d5e3775d298e78455efc5ca404d5">efd::Allocator::first</a></div></div>
<div class="ttc" id="Defs_8h_xhtml"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml">Defs.h</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a76fb98cd4a35566d53c2f0513c5d12d1"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml#a76fb98cd4a35566d53c2f0513c5d12d1">std::to_string</a></div><div class="ttdeci">string to_string(efd::EnumString&lt; T, first, last &gt; &amp;val)</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00053">EnumString.h:53</a></div></div>
<div class="ttc" id="classefd_1_1EnumString_xhtml_a7f47f58bfa7d2b5abce67976bd5e3ff4"><div class="ttname"><a href="../../dc/d5d/classefd_1_1EnumString.xhtml#a7f47f58bfa7d2b5abce67976bd5e3ff4">efd::EnumString::Has</a></div><div class="ttdeci">static bool Has(std::string str)</div><div class="ttdoc">Returns whether str is a string representative of any element of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00044">EnumString.h:44</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:34 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
