<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Transform/InlineAllPass.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_582f290f049f08c25ab9fc887a9170ac.xhtml">Transform</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">InlineAllPass.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../dd/d93/InlineAllPass_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d4/d61/InlineAllPass_8h.xhtml">enfield/Transform/InlineAllPass.h</a>&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d0/d8d/NodeVisitor_8h.xhtml">enfield/Analysis/NodeVisitor.h</a>&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;uint8_t <a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a274a7fd1a796fde960af0c5d1c81303a">efd::InlineAllPass::ID</a> = 0;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a> {</div><div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml">    7</a></span>&#160;    <span class="keyword">class </span><a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml">InlineAllVisitor</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor</a> {</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;        <span class="keyword">private</span>:</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;            std::set&lt;std::string&gt; mBasis;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#a8a2129b4e2b49c243706ab62d992916d">   12</a></span>&#160;            std::vector&lt;NDQOp::Ref&gt; <a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#a8a2129b4e2b49c243706ab62d992916d">mInlineVector</a>;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#a3899a3e49b8425e369d0e55c2b467ec9">   14</a></span>&#160;            <a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#a3899a3e49b8425e369d0e55c2b467ec9">InlineAllVisitor</a>(std::set&lt;std::string&gt; basis) : mBasis(basis) {}</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#abca75f836014da5612e95983e3e3314b">visit</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#abca75f836014da5612e95983e3e3314b">visit</a>(<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    };</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#abca75f836014da5612e95983e3e3314b">   21</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#abca75f836014da5612e95983e3e3314b">efd::InlineAllVisitor::visit</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen::Ref</a> ref) {</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">if</span> (mBasis.find(ref-&gt;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">getId</a>()-&gt;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">getVal</a>()) == mBasis.end()) {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#a8a2129b4e2b49c243706ab62d992916d">mInlineVector</a>.push_back(ref);</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    }</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#ae1873a13eba469e9bc1b6c4f8accbccf">   27</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#abca75f836014da5612e95983e3e3314b">efd::InlineAllVisitor::visit</a>(<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt::Ref</a> ref) {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    ref-&gt;<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">getQOp</a>()-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">apply</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;}</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a2340ee3d5f41f90d53ed44ae63791481">   31</a></span>&#160;<a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a2340ee3d5f41f90d53ed44ae63791481">efd::InlineAllPass::InlineAllPass</a>(std::vector&lt;std::string&gt; basis) {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    mBasis = std::set&lt;std::string&gt;(basis.begin(), basis.end());</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a0d257f9561bb1af85b3ac88d07185dee">   35</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a0d257f9561bb1af85b3ac88d07185dee">efd::InlineAllPass::run</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule::Ref</a> qmod) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml">InlineAllVisitor</a> visitor(mBasis);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordtype">bool</span> changed = <span class="keyword">false</span>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">do</span> {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        visitor.<a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#a8a2129b4e2b49c243706ab62d992916d">mInlineVector</a>.clear();</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="comment">// Inline until we can&#39;t inline anything anymore.</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">stmt_begin</a>(), e = qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">stmt_end</a>(); it != e; ++it) {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            (*it)-&gt;apply(&amp;visitor);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> call : visitor.<a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#a8a2129b4e2b49c243706ab62d992916d">mInlineVector</a>) {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <span class="keyword">auto</span> sign = qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a2cbccf2cf8dd0e4e2dc30bf12e146644">getQGate</a>(call-&gt;getId()-&gt;getVal());</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <span class="comment">// Inline only non-opaque gates.</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordflow">if</span> (!sign-&gt;isOpaque()) {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a3fcf1f575008b4e75182367b6b479129">inlineCall</a>(call);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            }</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordflow">if</span> (!visitor.<a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#a8a2129b4e2b49c243706ab62d992916d">mInlineVector</a>.empty()) changed = <span class="keyword">true</span>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    } <span class="keywordflow">while</span> (!visitor.<a class="code" href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#a8a2129b4e2b49c243706ab62d992916d">mInlineVector</a>.empty());</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> changed;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a39637a556c08bf458f9bf20812d11470">   62</a></span>&#160;<a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a00ef3a512e6527c0bd8a0ce2a8f22685">efd::InlineAllPass::uRef</a> <a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a39637a556c08bf458f9bf20812d11470">efd::InlineAllPass::Create</a>(std::vector&lt;std::string&gt; basis) {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a00ef3a512e6527c0bd8a0ce2a8f22685">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d5/de3/classefd_1_1InlineAllPass.xhtml">InlineAllPass</a>(basis));</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="ttc" id="classefd_1_1NodeVisitor_xhtml"><div class="ttname"><a href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">efd::NodeVisitor</a></div><div class="ttdoc">Interface class to be used as a visitor. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d8d/NodeVisitor_8h_source.xhtml#l00009">NodeVisitor.h:9</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a3fcf1f575008b4e75182367b6b479129"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a3fcf1f575008b4e75182367b6b479129">efd::QModule::inlineCall</a></div><div class="ttdeci">Iterator inlineCall(NDQOp::Ref call)</div><div class="ttdoc">Inlines call and returns an iterator to the first node inserted. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00069">QModule.cpp:69</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllVisitor_xhtml"><div class="ttname"><a href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml">efd::InlineAllVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d93/InlineAllPass_8cpp_source.xhtml#l00007">InlineAllPass.cpp:7</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_ab813c60af1717cf50e92a28b274c24ef"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">efd::Node::apply</a></div><div class="ttdeci">virtual void apply(NodeVisitor *visitor)=0</div><div class="ttdoc">Used by visitor classes. </div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">efd::NDQOpGen</a></div><div class="ttdoc">NDQOp specialized for generic gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00930">Nodes.h:930</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllVisitor_xhtml_a8a2129b4e2b49c243706ab62d992916d"><div class="ttname"><a href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#a8a2129b4e2b49c243706ab62d992916d">efd::InlineAllVisitor::mInlineVector</a></div><div class="ttdeci">std::vector&lt; NDQOp::Ref &gt; mInlineVector</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d93/InlineAllPass_8cpp_source.xhtml#l00012">InlineAllPass.cpp:12</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a23d45e3b6c65d5fa14b199da8b0617c7"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">efd::QModule::stmt_end</a></div><div class="ttdeci">Iterator stmt_end()</div><div class="ttdoc">Iterator to the end of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00226">QModule.cpp:226</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml">efd::QModule</a></div><div class="ttdoc">Qasm module representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00013">QModule.h:13</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllPass_xhtml_a00ef3a512e6527c0bd8a0ce2a8f22685"><div class="ttname"><a href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a00ef3a512e6527c0bd8a0ce2a8f22685">efd::InlineAllPass::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; InlineAllPass &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d61/InlineAllPass_8h_source.xhtml#l00013">InlineAllPass.h:13</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllVisitor_xhtml_a3899a3e49b8425e369d0e55c2b467ec9"><div class="ttname"><a href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#a3899a3e49b8425e369d0e55c2b467ec9">efd::InlineAllVisitor::InlineAllVisitor</a></div><div class="ttdeci">InlineAllVisitor(std::set&lt; std::string &gt; basis)</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d93/InlineAllPass_8cpp_source.xhtml#l00014">InlineAllPass.cpp:14</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00005">Architectures.cpp:5</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllPass_xhtml_a0d257f9561bb1af85b3ac88d07185dee"><div class="ttname"><a href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a0d257f9561bb1af85b3ac88d07185dee">efd::InlineAllPass::run</a></div><div class="ttdeci">bool run(QModule::Ref qmod) override</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d93/InlineAllPass_8cpp_source.xhtml#l00035">InlineAllPass.cpp:35</a></div></div>
<div class="ttc" id="NodeVisitor_8h_xhtml"><div class="ttname"><a href="../../d0/d8d/NodeVisitor_8h.xhtml">NodeVisitor.h</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a2cbccf2cf8dd0e4e2dc30bf12e146644"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a2cbccf2cf8dd0e4e2dc30bf12e146644">efd::QModule::getQGate</a></div><div class="ttdeci">NDGateSign::Ref getQGate(std::string id) const</div><div class="ttdoc">Gets the quantum gate mapped to id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00336">QModule.cpp:336</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_a53ee724a8db3429bf30bb1936ad548b2"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">efd::NDValue::getVal</a></div><div class="ttdeci">T getVal() const</div><div class="ttdoc">Returns a copy to the setted value. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l01023">Nodes.h:1023</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">efd::NDIfStmt</a></div><div class="ttdoc">Node for conditional statement. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00968">Nodes.h:968</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllPass_xhtml_a2340ee3d5f41f90d53ed44ae63791481"><div class="ttname"><a href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a2340ee3d5f41f90d53ed44ae63791481">efd::InlineAllPass::InlineAllPass</a></div><div class="ttdeci">InlineAllPass(std::vector&lt; std::string &gt; basis=std::vector&lt; std::string &gt;())</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d93/InlineAllPass_8cpp_source.xhtml#l00031">InlineAllPass.cpp:31</a></div></div>
<div class="ttc" id="InlineAllPass_8h_xhtml"><div class="ttname"><a href="../../d4/d61/InlineAllPass_8h.xhtml">InlineAllPass.h</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_ae5c408d49862e644f1d299ab5b2f121d"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">efd::NDIfStmt::getQOp</a></div><div class="ttdeci">NDQOp::Ref getQOp() const</div><div class="ttdoc">Gets the qop. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00543">Nodes.cpp:543</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllVisitor_xhtml_abca75f836014da5612e95983e3e3314b"><div class="ttname"><a href="../../de/d71/classefd_1_1InlineAllVisitor.xhtml#abca75f836014da5612e95983e3e3314b">efd::InlineAllVisitor::visit</a></div><div class="ttdeci">void visit(NDQOpGen::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d93/InlineAllPass_8cpp_source.xhtml#l00021">InlineAllPass.cpp:21</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_ac00e1eb93f94c00db1e6a661d8f95d9d"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">efd::QModule::stmt_begin</a></div><div class="ttdeci">Iterator stmt_begin()</div><div class="ttdoc">Iterator to the beginning of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00218">QModule.cpp:218</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllPass_xhtml_a274a7fd1a796fde960af0c5d1c81303a"><div class="ttname"><a href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a274a7fd1a796fde960af0c5d1c81303a">efd::InlineAllPass::ID</a></div><div class="ttdeci">static uint8_t ID</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d61/InlineAllPass_8h_source.xhtml#l00015">InlineAllPass.h:15</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllPass_xhtml_a39637a556c08bf458f9bf20812d11470"><div class="ttname"><a href="../../d5/de3/classefd_1_1InlineAllPass.xhtml#a39637a556c08bf458f9bf20812d11470">efd::InlineAllPass::Create</a></div><div class="ttdeci">static uRef Create(std::vector&lt; std::string &gt; basis=std::vector&lt; std::string &gt;())</div><div class="ttdoc">Creates an instance of this pass. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d93/InlineAllPass_8cpp_source.xhtml#l00062">InlineAllPass.cpp:62</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_aa9d90f493865fe9cdc3fecd468eaa33b"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">efd::NDQOp::getId</a></div><div class="ttdeci">NDId::Ref getId() const</div><div class="ttdoc">Gets the id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00893">Nodes.cpp:893</a></div></div>
<div class="ttc" id="classefd_1_1InlineAllPass_xhtml"><div class="ttname"><a href="../../d5/de3/classefd_1_1InlineAllPass.xhtml">efd::InlineAllPass</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d61/InlineAllPass_8h_source.xhtml#l00010">InlineAllPass.h:10</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:35 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
