<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: include/enfield/Transform/Allocators/QbitAllocator.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="../../dir_ca9ae9fc199b7939600155691e280c84.xhtml">enfield</a></li><li class="navelem"><a class="el" href="../../dir_15dbf64d7f9e9589da7a7339d5165684.xhtml">Transform</a></li><li class="navelem"><a class="el" href="../../dir_1c507328897757a68287604c3cbe9853.xhtml">Allocators</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">QbitAllocator.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../dd/d3b/QbitAllocator_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef __EFD_QBIT_ALLOCATOR_H__</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define __EFD_QBIT_ALLOCATOR_H__</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/d9d/ArchGraph_8h.xhtml">enfield/Arch/ArchGraph.h</a>&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/dcf/DependencyBuilderPass_8h.xhtml">enfield/Transform/DependencyBuilderPass.h</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/d41/CommandLine_8h.xhtml">enfield/Support/CommandLine.h</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/d09/Stats_8h.xhtml">enfield/Support/Stats.h</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a> {</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml">   12</a></span>&#160;    <span class="keyword">class </span><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml">QbitAllocator</a> : <span class="keyword">public</span> <a class="code" href="../../db/d56/classefd_1_1PassT.xhtml">PassT</a>&lt;Mapping&gt; {</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aa516de6a5722fbe4cdfb468e8ca6da2b">   14</a></span>&#160;            <span class="keyword">typedef</span> <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml">QbitAllocator</a>* <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aa516de6a5722fbe4cdfb468e8ca6da2b">Ref</a>;</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a77f63874f86014322b038db294d61fee">   15</a></span>&#160;            <span class="keyword">typedef</span> std::unique_ptr&lt;QbitAllocator&gt; <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a77f63874f86014322b038db294d61fee">uRef</a>;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#af5639e021a0ebb35ea61b55488ce5054">   17</a></span>&#160;            <span class="keyword">typedef</span> std::vector&lt;std::string&gt; <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#af5639e021a0ebb35ea61b55488ce5054">BasisVector</a>;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a21975b5f126068170a3bd11a911c1b82">   18</a></span>&#160;            <span class="keyword">typedef</span> <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a64a1362f6fe60ee5a90c58d9f3143681">DependencyBuilder::DepsVector</a> <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a21975b5f126068170a3bd11a911c1b82">DepsVector</a>;</div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a437d6c89c21e30bf46d61b30eddd64bc">   19</a></span>&#160;            <span class="keyword">typedef</span> DependencyBuilder::DepsVector::iterator <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a437d6c89c21e30bf46d61b30eddd64bc">Iterator</a>;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        <span class="keyword">private</span>:</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;            <span class="keywordtype">void</span> inlineAllGates();</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            <span class="keywordtype">void</span> replaceWithArchSpecs();</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="keywordtype">void</span> renameQbits();</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keyword">protected</span>:</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#acacd8c581f5858d96fc551af781be664">   33</a></span>&#160;            <span class="keywordtype">bool</span> <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#acacd8c581f5858d96fc551af781be664">mInlineAll</a>;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">   34</a></span>&#160;            <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">ArchGraph::sRef</a> <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a0e4d317bfe27af72deffa87f85630037">   35</a></span>&#160;            <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#af5639e021a0ebb35ea61b55488ce5054">BasisVector</a> <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a0e4d317bfe27af72deffa87f85630037">mBasis</a>;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">   36</a></span>&#160;            <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule::Ref</a> <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">mMod</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a09fe8045d6640c9583f9dabfbd2db9ce">   38</a></span>&#160;            uint32_t <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a09fe8045d6640c9583f9dabfbd2db9ce">mVQubits</a>;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d48c40aef0cafc61f748a978264a5c3">   39</a></span>&#160;            uint32_t <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d48c40aef0cafc61f748a978264a5c3">mPQubits</a>;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aa380bf007e46c8c8f09ffe7d4a552d54">QbitAllocator</a>(<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">ArchGraph::sRef</a> archGraph);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            <span class="keyword">virtual</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a8b7e7b7e0b808cf87162b1e1898f236a">allocate</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule::Ref</a> qmod) = 0;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keywordtype">bool</span> <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#ad14c92694bf2e4c5874ac1bcc477a6dc">run</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule::Ref</a> qmod) <span class="keyword">override</span>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a997aa1c89bcfbcd5d5d796537c71c99a">setInlineAll</a>(<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#af5639e021a0ebb35ea61b55488ce5054">BasisVector</a> basis = {});</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aae527130ae67369e7ba62acae89438c5">setDontInline</a>();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    };</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="../../d4/deb/namespaceefd.xhtml#a1f91f26f141eb5b2dd549121451a786c">InverseMap</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml#adb4ffc373d7273aefb15d2f9dcd4aeb4">InvertMapping</a>(uint32_t archQ, <a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> mapping, <span class="keywordtype">bool</span> fill = <span class="keyword">true</span>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml#a18b0007f75e6b8d651b15754ff89f910">Fill</a>(uint32_t archQ, <a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a>&amp; mapping);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml#a18b0007f75e6b8d651b15754ff89f910">Fill</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a>&amp; mapping, <a class="code" href="../../d4/deb/namespaceefd.xhtml#a1f91f26f141eb5b2dd549121451a786c">InverseMap</a>&amp; inv);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml#a186bbb1cec68c992374b8795b10af1a8">IdentityMapping</a>(uint32_t progQ);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    std::string <a class="code" href="../../d4/deb/namespaceefd.xhtml#aac5a20e6db5d358cf72d4816441d0b0d">MappingToString</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> m);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">extern</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">efd::Opt&lt;uint32_t&gt;</a> <a class="code" href="../../dd/d3b/QbitAllocator_8h.xhtml#afaba9dee87b875df11740753768ba2f6">SwapCost</a>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">extern</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">efd::Opt&lt;uint32_t&gt;</a> <a class="code" href="../../dd/d3b/QbitAllocator_8h.xhtml#aeca2faa5e38b3c5c022e5f7e5a49e731">RevCost</a>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">extern</span> <a class="code" href="../../de/d50/classefd_1_1Opt.xhtml">efd::Opt&lt;uint32_t&gt;</a> <a class="code" href="../../dd/d3b/QbitAllocator_8h.xhtml#adc47407d5ff1ff899c58555e63019367">LCXCost</a>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="QbitAllocator_8h_xhtml_afaba9dee87b875df11740753768ba2f6"><div class="ttname"><a href="../../dd/d3b/QbitAllocator_8h.xhtml#afaba9dee87b875df11740753768ba2f6">SwapCost</a></div><div class="ttdeci">efd::Opt&lt; uint32_t &gt; SwapCost</div></div>
<div class="ttc" id="ArchGraph_8h_xhtml"><div class="ttname"><a href="../../d7/d9d/ArchGraph_8h.xhtml">ArchGraph.h</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_aa516de6a5722fbe4cdfb468e8ca6da2b"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aa516de6a5722fbe4cdfb468e8ca6da2b">efd::QbitAllocator::Ref</a></div><div class="ttdeci">QbitAllocator * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00014">QbitAllocator.h:14</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a77f63874f86014322b038db294d61fee"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a77f63874f86014322b038db294d61fee">efd::QbitAllocator::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; QbitAllocator &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00015">QbitAllocator.h:15</a></div></div>
<div class="ttc" id="DependencyBuilderPass_8h_xhtml"><div class="ttname"><a href="../../d9/dcf/DependencyBuilderPass_8h.xhtml">DependencyBuilderPass.h</a></div></div>
<div class="ttc" id="structefd_1_1DependencyBuilder_xhtml_a64a1362f6fe60ee5a90c58d9f3143681"><div class="ttname"><a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a64a1362f6fe60ee5a90c58d9f3143681">efd::DependencyBuilder::DepsVector</a></div><div class="ttdeci">std::vector&lt; Dependencies &gt; DepsVector</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00060">DependencyBuilderPass.h:60</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a997aa1c89bcfbcd5d5d796537c71c99a"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a997aa1c89bcfbcd5d5d796537c71c99a">efd::QbitAllocator::setInlineAll</a></div><div class="ttdeci">void setInlineAll(BasisVector basis={})</div><div class="ttdoc">Flags the QbitAllocator to inline all gates, but those inside the basis vector, before mapping...</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00183">QbitAllocator.cpp:183</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_aac5a20e6db5d358cf72d4816441d0b0d"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#aac5a20e6db5d358cf72d4816441d0b0d">efd::MappingToString</a></div><div class="ttdeci">std::string MappingToString(Mapping m)</div><div class="ttdoc">Prints the mapping m to a string and returns it. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00077">QbitAllocator.cpp:77</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a4d7d13dd12213a9f247d1304472badbd"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">efd::QbitAllocator::mArchGraph</a></div><div class="ttdeci">ArchGraph::sRef mArchGraph</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00034">QbitAllocator.h:34</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_ad14c92694bf2e4c5874ac1bcc477a6dc"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#ad14c92694bf2e4c5874ac1bcc477a6dc">efd::QbitAllocator::run</a></div><div class="ttdeci">bool run(QModule::Ref qmod) override</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00122">QbitAllocator.cpp:122</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_acacd8c581f5858d96fc551af781be664"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#acacd8c581f5858d96fc551af781be664">efd::QbitAllocator::mInlineAll</a></div><div class="ttdeci">bool mInlineAll</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00033">QbitAllocator.h:33</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml">efd::QModule</a></div><div class="ttdoc">Qasm module representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00013">QModule.h:13</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a4d48c40aef0cafc61f748a978264a5c3"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d48c40aef0cafc61f748a978264a5c3">efd::QbitAllocator::mPQubits</a></div><div class="ttdeci">uint32_t mPQubits</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00039">QbitAllocator.h:39</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_aae527130ae67369e7ba62acae89438c5"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aae527130ae67369e7ba62acae89438c5">efd::QbitAllocator::setDontInline</a></div><div class="ttdeci">void setDontInline()</div><div class="ttdoc">Flags the QbitAllocator not to inline. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00188">QbitAllocator.cpp:188</a></div></div>
<div class="ttc" id="classefd_1_1Opt_xhtml"><div class="ttname"><a href="../../de/d50/classefd_1_1Opt.xhtml">efd::Opt</a></div><div class="ttdoc">Class used to declare the command line options available. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d41/CommandLine_8h_source.xhtml#l00012">CommandLine.h:12</a></div></div>
<div class="ttc" id="classefd_1_1PassT_xhtml"><div class="ttname"><a href="../../db/d56/classefd_1_1PassT.xhtml">efd::PassT</a></div><div class="ttdoc">Should serve as base class for classes that produces some data of type T. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d29/Pass_8h_source.xhtml#l00040">Pass.h:40</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00005">Architectures.cpp:5</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a85958f7018c9dc1b6710420712399065"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a85958f7018c9dc1b6710420712399065">efd::QbitAllocator::mMod</a></div><div class="ttdeci">QModule::Ref mMod</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00036">QbitAllocator.h:36</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a8c9131ca43a772179c24fa4dc9701bb2"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">efd::ArchGraph::sRef</a></div><div class="ttdeci">std::shared_ptr&lt; ArchGraph &gt; sRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d9d/ArchGraph_8h_source.xhtml#l00014">ArchGraph.h:14</a></div></div>
<div class="ttc" id="CommandLine_8h_xhtml"><div class="ttname"><a href="../../d9/d41/CommandLine_8h.xhtml">CommandLine.h</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_aa380bf007e46c8c8f09ffe7d4a552d54"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#aa380bf007e46c8c8f09ffe7d4a552d54">efd::QbitAllocator::QbitAllocator</a></div><div class="ttdeci">QbitAllocator(ArchGraph::sRef archGraph)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00091">QbitAllocator.cpp:91</a></div></div>
<div class="ttc" id="QbitAllocator_8h_xhtml_aeca2faa5e38b3c5c022e5f7e5a49e731"><div class="ttname"><a href="../../dd/d3b/QbitAllocator_8h.xhtml#aeca2faa5e38b3c5c022e5f7e5a49e731">RevCost</a></div><div class="ttdeci">efd::Opt&lt; uint32_t &gt; RevCost</div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a09fe8045d6640c9583f9dabfbd2db9ce"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a09fe8045d6640c9583f9dabfbd2db9ce">efd::QbitAllocator::mVQubits</a></div><div class="ttdeci">uint32_t mVQubits</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00038">QbitAllocator.h:38</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_af5639e021a0ebb35ea61b55488ce5054"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#af5639e021a0ebb35ea61b55488ce5054">efd::QbitAllocator::BasisVector</a></div><div class="ttdeci">std::vector&lt; std::string &gt; BasisVector</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00017">QbitAllocator.h:17</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a18b0007f75e6b8d651b15754ff89f910"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a18b0007f75e6b8d651b15754ff89f910">efd::Fill</a></div><div class="ttdeci">void Fill(uint32_t archQ, Mapping &amp;mapping)</div><div class="ttdoc">Fills the unmapped qubits with the ones missing. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00062">QbitAllocator.cpp:62</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a186bbb1cec68c992374b8795b10af1a8"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a186bbb1cec68c992374b8795b10af1a8">efd::IdentityMapping</a></div><div class="ttdeci">Mapping IdentityMapping(uint32_t progQ)</div><div class="ttdoc">Returns an identity mapping. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00067">QbitAllocator.cpp:67</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a21975b5f126068170a3bd11a911c1b82"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a21975b5f126068170a3bd11a911c1b82">efd::QbitAllocator::DepsVector</a></div><div class="ttdeci">DependencyBuilder::DepsVector DepsVector</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00018">QbitAllocator.h:18</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a437d6c89c21e30bf46d61b30eddd64bc"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a437d6c89c21e30bf46d61b30eddd64bc">efd::QbitAllocator::Iterator</a></div><div class="ttdeci">DependencyBuilder::DepsVector::iterator Iterator</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00019">QbitAllocator.h:19</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a1f91f26f141eb5b2dd549121451a786c"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a1f91f26f141eb5b2dd549121451a786c">efd::InverseMap</a></div><div class="ttdeci">std::vector&lt; uint32_t &gt; InverseMap</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00012">Defs.h:12</a></div></div>
<div class="ttc" id="QbitAllocator_8h_xhtml_adc47407d5ff1ff899c58555e63019367"><div class="ttname"><a href="../../dd/d3b/QbitAllocator_8h.xhtml#adc47407d5ff1ff899c58555e63019367">LCXCost</a></div><div class="ttdeci">efd::Opt&lt; uint32_t &gt; LCXCost</div></div>
<div class="ttc" id="Stats_8h_xhtml"><div class="ttname"><a href="../../dc/d09/Stats_8h.xhtml">Stats.h</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml">efd::QbitAllocator</a></div><div class="ttdoc">Base abstract class that allocates the qbits used in the program to the qbits that are in the physica...</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00012">QbitAllocator.h:12</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a12a4775008cb8b6242cedc3621d98f9c"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">efd::Mapping</a></div><div class="ttdeci">std::vector&lt; uint32_t &gt; Mapping</div><div class="ttdoc">Defines the type used for mapping the qubits. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00011">Defs.h:11</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a8b7e7b7e0b808cf87162b1e1898f236a"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a8b7e7b7e0b808cf87162b1e1898f236a">efd::QbitAllocator::allocate</a></div><div class="ttdeci">virtual Mapping allocate(QModule::Ref qmod)=0</div><div class="ttdoc">Executes the allocation algorithm after the preprocessing. </div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a0e4d317bfe27af72deffa87f85630037"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a0e4d317bfe27af72deffa87f85630037">efd::QbitAllocator::mBasis</a></div><div class="ttdeci">BasisVector mBasis</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00035">QbitAllocator.h:35</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_adb4ffc373d7273aefb15d2f9dcd4aeb4"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#adb4ffc373d7273aefb15d2f9dcd4aeb4">efd::InvertMapping</a></div><div class="ttdeci">InverseMap InvertMapping(uint32_t archQ, Mapping mapping, bool fill=true)</div><div class="ttdoc">Generates an assignment mapping (maps the architecture&amp;#39;s qubits to the logical ones) of size archQ...</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00025">QbitAllocator.cpp:25</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:34 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
