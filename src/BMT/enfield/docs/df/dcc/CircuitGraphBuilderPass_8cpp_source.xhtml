<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Transform/CircuitGraphBuilderPass.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_582f290f049f08c25ab9fc887a9170ac.xhtml">Transform</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">CircuitGraphBuilderPass.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../df/dcc/CircuitGraphBuilderPass_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d8/d9b/CircuitGraphBuilderPass_8h.xhtml">enfield/Transform/CircuitGraphBuilderPass.h</a>&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d6/d94/XbitToNumberPass_8h.xhtml">enfield/Transform/XbitToNumberPass.h</a>&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/d82/PassCache_8h.xhtml">enfield/Transform/PassCache.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d5/dfc/RTTI_8h.xhtml">enfield/Support/RTTI.h</a>&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">using namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;uint8_t <a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#a702eb3f5f4a8f8ed84a03429c9daa2cc">CircuitGraphBuilderPass::ID</a> = 0;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#a178f61890593d8d7e10c675725e371be">   10</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#a178f61890593d8d7e10c675725e371be">CircuitGraphBuilderPass::run</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>* qmod) {</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    <span class="keyword">auto</span>&amp; graph = <a class="code" href="../../db/d56/classefd_1_1PassT.xhtml#a5b6a7296f64c3ae0dd8ad9f528b11ed0">mData</a>;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <span class="keyword">auto</span> xtonpass = PassCache::Get&lt;XbitToNumberWrapperPass&gt;(qmod);</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="keyword">auto</span> xton = xtonpass-&gt;getData();</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keyword">auto</span> qubits = xton.<a class="code" href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#adcb4c92728654114aa63ba37f853bac5">getQSize</a>();</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keyword">auto</span> cbits = xton.getCSize();</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    graph.init(qubits, cbits);</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">stmt_begin</a>(), e = qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">stmt_end</a>(); it != e; ++it) {</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keyword">auto</span> node = it-&gt;get();</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <span class="keyword">auto</span> qop = dynCast&lt;NDQOp&gt;(node);</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        std::vector&lt;Xbit&gt; xbits;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keywordflow">if</span> (<span class="keyword">auto</span> ifstmt = dynCast&lt;NDIfStmt&gt;(node)) {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            qop = ifstmt-&gt;getQOp();</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <span class="keyword">auto</span> cbitstr = ifstmt-&gt;getCondId()-&gt;getVal();</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span> cbit : xton.getRegUIds(cbitstr)) {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                xbits.push_back(<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">Xbit::C</a>(cbit));</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            }</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<span class="keyword">auto</span> measure = dynCast&lt;NDQOpMeasure&gt;(node)) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keyword">auto</span> cbitstr = measure-&gt;getCBit()-&gt;toString();</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            xbits.push_back(<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">Xbit::C</a>(xton.getCUId(cbitstr)));</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keyword">auto</span> qargs = qop-&gt;getQArgs();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">for</span> (uint32_t i = 0, e = qargs-&gt;getChildNumber(); i &lt; e; ++i) {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keyword">auto</span> qarg = qargs-&gt;getChild(i);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            xbits.push_back(<a class="code" href="../../d9/d6b/classefd_1_1Xbit.xhtml#a9bc4937fc867235e1e7867529aee20e3">Xbit::Q</a>(xton.getQUId(qarg-&gt;toString())));</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        graph.append(xbits, node);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#aaf979aada2c4731f90f1d350d886cf77">   53</a></span>&#160;<a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#afae2758d0a120a2e6b8943400e66852b">CircuitGraphBuilderPass::uRef</a> <a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#aaf979aada2c4731f90f1d350d886cf77">CircuitGraphBuilderPass::Create</a>() {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#afae2758d0a120a2e6b8943400e66852b">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml">CircuitGraphBuilderPass</a>());</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div><div class="ttc" id="XbitToNumberPass_8h_xhtml"><div class="ttname"><a href="../../d6/d94/XbitToNumberPass_8h.xhtml">XbitToNumberPass.h</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraphBuilderPass_xhtml_aaf979aada2c4731f90f1d350d886cf77"><div class="ttname"><a href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#aaf979aada2c4731f90f1d350d886cf77">efd::CircuitGraphBuilderPass::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdef"><b>Definition:</b> <a href="../../df/dcc/CircuitGraphBuilderPass_8cpp_source.xhtml#l00053">CircuitGraphBuilderPass.cpp:53</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml_a4cddd18c9e4ec4f08b28d1c3a81f67cc"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml#a4cddd18c9e4ec4f08b28d1c3a81f67cc">efd::Xbit::C</a></div><div class="ttdeci">static Xbit C(uint32_t id)</div><div class="ttdoc">Creates a classical Xbit with id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00060">CircuitGraph.cpp:60</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a23d45e3b6c65d5fa14b199da8b0617c7"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">efd::QModule::stmt_end</a></div><div class="ttdeci">Iterator stmt_end()</div><div class="ttdoc">Iterator to the end of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00226">QModule.cpp:226</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml">efd::QModule</a></div><div class="ttdoc">Qasm module representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00013">QModule.h:13</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00005">Architectures.cpp:5</a></div></div>
<div class="ttc" id="RTTI_8h_xhtml"><div class="ttname"><a href="../../d5/dfc/RTTI_8h.xhtml">RTTI.h</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraph_xhtml_adcb4c92728654114aa63ba37f853bac5"><div class="ttname"><a href="../../d0/d54/classefd_1_1CircuitGraph.xhtml#adcb4c92728654114aa63ba37f853bac5">efd::CircuitGraph::getQSize</a></div><div class="ttdeci">uint32_t getQSize() const</div><div class="ttdoc">Returns the number of qubits. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00195">CircuitGraph.cpp:195</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraphBuilderPass_xhtml_afae2758d0a120a2e6b8943400e66852b"><div class="ttname"><a href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#afae2758d0a120a2e6b8943400e66852b">efd::CircuitGraphBuilderPass::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; CircuitGraphBuilderPass &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9b/CircuitGraphBuilderPass_8h_source.xhtml#l00020">CircuitGraphBuilderPass.h:20</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraphBuilderPass_xhtml"><div class="ttname"><a href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml">efd::CircuitGraphBuilderPass</a></div><div class="ttdoc">Builds the circuit graph corresponding to the QModule given. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9b/CircuitGraphBuilderPass_8h_source.xhtml#l00017">CircuitGraphBuilderPass.h:17</a></div></div>
<div class="ttc" id="PassCache_8h_xhtml"><div class="ttname"><a href="../../db/d82/PassCache_8h.xhtml">PassCache.h</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraphBuilderPass_xhtml_a178f61890593d8d7e10c675725e371be"><div class="ttname"><a href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#a178f61890593d8d7e10c675725e371be">efd::CircuitGraphBuilderPass::run</a></div><div class="ttdeci">bool run(QModule *qmod) override</div><div class="ttdoc">Runs the pass in the given QModule and returns true if it has modified qmod. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dcc/CircuitGraphBuilderPass_8cpp_source.xhtml#l00010">CircuitGraphBuilderPass.cpp:10</a></div></div>
<div class="ttc" id="CircuitGraphBuilderPass_8h_xhtml"><div class="ttname"><a href="../../d8/d9b/CircuitGraphBuilderPass_8h.xhtml">CircuitGraphBuilderPass.h</a></div></div>
<div class="ttc" id="classefd_1_1Xbit_xhtml_a9bc4937fc867235e1e7867529aee20e3"><div class="ttname"><a href="../../d9/d6b/classefd_1_1Xbit.xhtml#a9bc4937fc867235e1e7867529aee20e3">efd::Xbit::Q</a></div><div class="ttdeci">static Xbit Q(uint32_t id)</div><div class="ttdoc">Creates a quantum Xbit with id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dce/CircuitGraph_8cpp_source.xhtml#l00056">CircuitGraph.cpp:56</a></div></div>
<div class="ttc" id="classefd_1_1PassT_xhtml_a5b6a7296f64c3ae0dd8ad9f528b11ed0"><div class="ttname"><a href="../../db/d56/classefd_1_1PassT.xhtml#a5b6a7296f64c3ae0dd8ad9f528b11ed0">efd::PassT&lt; CircuitGraph &gt;::mData</a></div><div class="ttdeci">CircuitGraph mData</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d29/Pass_8h_source.xhtml#l00047">Pass.h:47</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_ac00e1eb93f94c00db1e6a661d8f95d9d"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">efd::QModule::stmt_begin</a></div><div class="ttdeci">Iterator stmt_begin()</div><div class="ttdoc">Iterator to the beginning of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00218">QModule.cpp:218</a></div></div>
<div class="ttc" id="classefd_1_1CircuitGraphBuilderPass_xhtml_a702eb3f5f4a8f8ed84a03429c9daa2cc"><div class="ttname"><a href="../../de/dd0/classefd_1_1CircuitGraphBuilderPass.xhtml#a702eb3f5f4a8f8ed84a03429c9daa2cc">efd::CircuitGraphBuilderPass::ID</a></div><div class="ttdeci">static uint8_t ID</div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d9b/CircuitGraphBuilderPass_8h_source.xhtml#l00022">CircuitGraphBuilderPass.h:22</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:35 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
