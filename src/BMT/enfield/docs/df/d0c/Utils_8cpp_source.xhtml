<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Transform/Utils.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_582f290f049f08c25ab9fc887a9170ac.xhtml">Transform</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Utils.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../df/d0c/Utils_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/ded/Utils_8h.xhtml">enfield/Transform/Utils.h</a>&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d0/d8d/NodeVisitor_8h.xhtml">enfield/Analysis/NodeVisitor.h</a>&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d0/d5c/Analysis_2Driver_8h.xhtml">enfield/Analysis/Driver.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d5/dfc/RTTI_8h.xhtml">enfield/Support/RTTI.h</a>&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/d09/uRefCast_8h.xhtml">enfield/Support/uRefCast.h</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d1/d73/Defs_8h.xhtml">enfield/Support/Defs.h</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;iterator&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">using namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">// ==--------------- Intrinsic Gates ---------------==</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">static</span> std::vector&lt;NDGateSign::uRef&gt; IntrinsicGates;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> std::string IntrinsicGatesStr =</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#define EFD_LIB(...) #__VA_ARGS__</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d3/da1/intrinsic_8inc.xhtml">enfield/StdLib/intrinsic.inc</a>&quot;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#undef EFD_LIB</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> ProcessIntrinsicGates() {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keywordflow">if</span> (IntrinsicGates.empty()) {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="keyword">auto</span> ast = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">ParseString</a>(IntrinsicGatesStr, <span class="keyword">false</span>);</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <span class="keywordflow">if</span> (!instanceOf&lt;NDStmtList&gt;(ast.get())) {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Intrinsic gates root node of wrong type.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        }</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; gate : *ast) {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            <span class="keyword">auto</span> gateNode = uniqueCastForward&lt;NDGateSign&gt;(std::move(gate));</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            <span class="keywordflow">if</span> (gateNode.get() == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                std::string str = (gate == <span class="keyword">nullptr</span>) ? <span class="stringliteral">&quot;nullptr&quot;</span> : gate-&gt;toString(<span class="keyword">false</span>);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Statement is not a gate declaration: `&quot;</span> &lt;&lt; str</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                    &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            IntrinsicGates.push_back(std::move(gateNode));</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        }</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#a194305909125a1398a1f0e00fbae1cf5">   45</a></span>&#160;std::vector&lt;NDGateSign::uRef&gt; <a class="code" href="../../d4/deb/namespaceefd.xhtml#a194305909125a1398a1f0e00fbae1cf5">efd::GetIntrinsicGates</a>() {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    ProcessIntrinsicGates();</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    std::vector&lt;NDGateSign::uRef&gt; gates;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; gate : IntrinsicGates)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        gates.push_back(uniqueCastForward&lt;NDGateSign&gt;(gate-&gt;clone()));</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> gates;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a> {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">extern</span> <span class="keyword">const</span> std::string <a class="code" href="../../d4/deb/namespaceefd.xhtml#afaf520a011031e3dc171b2896cba167f">StdLibCX</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml">   59</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml">NDQOpSwap</a> : <span class="keyword">public</span> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen</a> {</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml#aef056ad9c84be1b6e86e3645c7d858e8">   60</a></span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> std::string <a class="code" href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml#aef056ad9c84be1b6e86e3645c7d858e8">IdStr</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml#a3821a8ddbdbe10b972bcfa99ce4d90db">   62</a></span>&#160;        <a class="code" href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml#a3821a8ddbdbe10b972bcfa99ce4d90db">NDQOpSwap</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhs, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhs) :</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDId</a>::<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">Create</a>(<a class="code" href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml#aef056ad9c84be1b6e86e3645c7d858e8">IdStr</a>), <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">Create</a>(), <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">Create</a>(), <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eaca06d08c07a567eac8a58914ef691dc9f8">K_INTRINSIC_SWAP</a>) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <span class="keyword">auto</span> qargs = <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>();</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                qargs-&gt;addChild(std::move(lhs));</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                qargs-&gt;addChild(std::move(rhs));</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    };</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml">   71</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml">NDQOpLongCX</a> : <span class="keyword">public</span> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen</a> {</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml#a5575a1e85dab246c708c670472e67287">   72</a></span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> std::string <a class="code" href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml#a5575a1e85dab246c708c670472e67287">IdStr</a>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml#acfedeef7e4a8fd4dd96e13c8a9e6fbcb">   74</a></span>&#160;        <a class="code" href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml#acfedeef7e4a8fd4dd96e13c8a9e6fbcb">NDQOpLongCX</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhs, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> middle, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhs) :</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDId</a>::<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">Create</a>(<a class="code" href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml#a5575a1e85dab246c708c670472e67287">IdStr</a>), <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">Create</a>(), <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">Create</a>(), <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eaca407b48bc476412424a62cc5eaee7184e">K_INTRINSIC_LCX</a>) {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                <span class="keyword">auto</span> qargs = <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>();</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                qargs-&gt;addChild(std::move(lhs));</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                qargs-&gt;addChild(std::move(middle));</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                qargs-&gt;addChild(std::move(rhs));</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    };</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml">   84</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml">NDQOpRevCX</a> : <span class="keyword">public</span> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen</a> {</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml#ac48cc707e2ac1479918b16fb8e3db722">   85</a></span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> std::string <a class="code" href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml#ac48cc707e2ac1479918b16fb8e3db722">IdStr</a>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml#a8dc362aa103195558d180f53b6476be9">   87</a></span>&#160;        <a class="code" href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml#a8dc362aa103195558d180f53b6476be9">NDQOpRevCX</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhs, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhs) :</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDId</a>::<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">Create</a>(<a class="code" href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml#ac48cc707e2ac1479918b16fb8e3db722">IdStr</a>), <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">Create</a>(), <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">Create</a>(), <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eacaf7e8e47175639d18097588895f0b1b13">K_INTRINSIC_REV_CX</a>) {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                <span class="keyword">auto</span> qargs = <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>();</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                qargs-&gt;addChild(std::move(lhs));</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                qargs-&gt;addChild(std::move(rhs));</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    };</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">const</span> std::string <a class="code" href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml#aef056ad9c84be1b6e86e3645c7d858e8">efd::NDQOpSwap::IdStr</a> = <span class="stringliteral">&quot;intrinsic_swap__&quot;</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">const</span> std::string <a class="code" href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml#a5575a1e85dab246c708c670472e67287">efd::NDQOpLongCX::IdStr</a> = <span class="stringliteral">&quot;intrinsic_lcx__&quot;</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">const</span> std::string <a class="code" href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml#ac48cc707e2ac1479918b16fb8e3db722">efd::NDQOpRevCX::IdStr</a> = <span class="stringliteral">&quot;intrinsic_rev_cx__&quot;</span>;</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#afaf520a011031e3dc171b2896cba167f">   99</a></span>&#160;<span class="keyword">const</span> std::string <a class="code" href="../../d4/deb/namespaceefd.xhtml#afaf520a011031e3dc171b2896cba167f">efd::StdLibCX</a> = <span class="stringliteral">&quot;cx&quot;</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#ab9c1264648ba0395505dc5b54358c0a9">  101</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml#ab9c1264648ba0395505dc5b54358c0a9">efd::IsCNOTGateCall</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref) {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">switch</span> (ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>()) {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a4a15c30d88c8421e7298f1152fba337ea2cd68b0c181b411f88a82060a7e4db9f">Node::K_QOP_CX</a>:</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a4a15c30d88c8421e7298f1152fba337ea5d911655c60ace0f70105ba8a09e8f8c">Node::K_QOP_GEN</a>:</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">return</span> ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae9f49bc3eeebb8d24af82ecaa8cc3636">getOperation</a>() == <a class="code" href="../../d4/deb/namespaceefd.xhtml#afaf520a011031e3dc171b2896cba167f">StdLibCX</a>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#ac1264355b1eb1da02a2ae2c1906ce0a5">  116</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml#ac1264355b1eb1da02a2ae2c1906ce0a5">efd::IsIntrinsicGateCall</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref) {</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">if</span> (<span class="keyword">auto</span> qopgen = dynCast&lt;NDQOpGen&gt;(ref)) {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        std::string gateid = qopgen-&gt;getOperation();</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">return</span> gateid == <a class="code" href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml#aef056ad9c84be1b6e86e3645c7d858e8">NDQOpSwap::IdStr</a> ||</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            gateid == <a class="code" href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml#a5575a1e85dab246c708c670472e67287">NDQOpLongCX::IdStr</a> ||</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            gateid == <a class="code" href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml#ac48cc707e2ac1479918b16fb8e3db722">NDQOpRevCX::IdStr</a>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#a6cbddf16d36e971fff36629ed192269b">  128</a></span>&#160;<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">NDQOpGen::IntrinsicKind</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml#a6cbddf16d36e971fff36629ed192269b">efd::GetIntrinsicKind</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref) {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="../../d4/deb/namespaceefd.xhtml#ac1264355b1eb1da02a2ae2c1906ce0a5">IsIntrinsicGateCall</a>(ref)) {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        std::string str = (ref == <span class="keyword">nullptr</span>) ? <span class="stringliteral">&quot;nullptr&quot;</span> : ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>(<span class="keyword">false</span>);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Node must be an intrinsic gate call: `&quot;</span> &lt;&lt; str &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    std::string gateid = ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae9f49bc3eeebb8d24af82ecaa8cc3636">getOperation</a>();</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">NDQOpGen::IntrinsicKind</a> kind;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">if</span> (gateid == <a class="code" href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml#aef056ad9c84be1b6e86e3645c7d858e8">efd::NDQOpSwap::IdStr</a>)          kind = <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eaca06d08c07a567eac8a58914ef691dc9f8">NDQOpGen::K_INTRINSIC_SWAP</a>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (gateid == <a class="code" href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml#a5575a1e85dab246c708c670472e67287">efd::NDQOpLongCX::IdStr</a>)   kind = <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eaca407b48bc476412424a62cc5eaee7184e">NDQOpGen::K_INTRINSIC_LCX</a>;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (gateid == <a class="code" href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml#ac48cc707e2ac1479918b16fb8e3db722">efd::NDQOpRevCX::IdStr</a>)    kind = <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eacaf7e8e47175639d18097588895f0b1b13">NDQOpGen::K_INTRINSIC_REV_CX</a>;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">else</span> <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Unreachable.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">return</span> kind;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#a4ef7671eeb9b9b12d20549b08b9269c2">  146</a></span>&#160;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml#a4ef7671eeb9b9b12d20549b08b9269c2">efd::CreateIntrinsicGate</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">NDQOpGen::IntrinsicKind</a> kind,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                     std::vector&lt;Node::uRef&gt; qargs) {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">switch</span> (kind) {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eaca06d08c07a567eac8a58914ef691dc9f8">NDQOpGen::K_INTRINSIC_SWAP</a>:</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">if</span> (qargs.size() != 2) {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Intrinsic swap instructions must have 2 qargs. Actual: `&quot;</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                    &lt;&lt; qargs.size() &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            }</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml#ad83c1dbaa41519964485ea8e2437bcb7">CreateISwap</a>(std::move(qargs[0]), std::move(qargs[1]));</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eacaf7e8e47175639d18097588895f0b1b13">NDQOpGen::K_INTRINSIC_REV_CX</a>:</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">if</span> (qargs.size() != 2) {</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Intrinsic reverse-cnot instructions must 2 qargs. Actual:&quot;</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                    &lt;&lt; qargs.size() &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            }</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml#af8e947f977669e54d6aaf3a43815833c">CreateIRevCX</a>(std::move(qargs[0]), std::move(qargs[1]));</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eaca407b48bc476412424a62cc5eaee7184e">NDQOpGen::K_INTRINSIC_LCX</a>:</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">if</span> (qargs.size() != 3) {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Intrinsic long-cnot instructions must have 3 qargs. Actual:&quot;</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                    &lt;&lt; qargs.size() &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml#a3c72243a170ffe8a4836e7092fd1469f">CreateILongCX</a>(std::move(qargs[0]), std::move(qargs[1]), std::move(qargs[2]));</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#ad83c1dbaa41519964485ea8e2437bcb7">  181</a></span>&#160;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml#ad83c1dbaa41519964485ea8e2437bcb7">efd::CreateISwap</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhs, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhs) {</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">auto</span> node = <span class="keyword">new</span> <a class="code" href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml">NDQOpSwap</a>(std::move(lhs), std::move(rhs));</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a>(node);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;}</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml#a3c72243a170ffe8a4836e7092fd1469f">efd::CreateILongCX</a></div><div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#a3c72243a170ffe8a4836e7092fd1469f">  187</a></span>&#160;(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhs, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> middle, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhs) {</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keyword">auto</span> node = <span class="keyword">new</span> <a class="code" href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml">NDQOpLongCX</a>(std::move(lhs), std::move(middle), std::move(rhs));</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a>(node);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;}</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#af8e947f977669e54d6aaf3a43815833c">  192</a></span>&#160;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml#af8e947f977669e54d6aaf3a43815833c">efd::CreateIRevCX</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhs, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhs) {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keyword">auto</span> node = <span class="keyword">new</span> <a class="code" href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml">NDQOpRevCX</a>(std::move(lhs), std::move(rhs));</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a>(node);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;}</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">// ==--------------- QModulefy ---------------==</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a> {</div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml">  199</a></span>&#160;    <span class="keyword">class </span><a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml">QModulefyVisitor</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor</a> {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keyword">private</span>:</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> getClonedOrIntrinsic(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#a2a5e955af4a49a5f42c5e18c76d83908">  204</a></span>&#160;            <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>&amp; <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#a2a5e955af4a49a5f42c5e18c76d83908">mMod</a>;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#a842705654c5e1aa3b1843add900f2b7d">  206</a></span>&#160;            <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#a842705654c5e1aa3b1843add900f2b7d">mCurGate</a>;</div><div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#ae2f79da280bbbd679d1e0b4724eead55">  207</a></span>&#160;            <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml">NDInclude::Ref</a> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#ae2f79da280bbbd679d1e0b4724eead55">mCurIncl</a>;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#abb023fa145e1e3b6c9f55493781ea874">  209</a></span>&#160;            <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#abb023fa145e1e3b6c9f55493781ea874">QModulefyVisitor</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>&amp; qmod)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                : <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#a2a5e955af4a49a5f42c5e18c76d83908">mMod</a>(qmod), <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#a842705654c5e1aa3b1843add900f2b7d">mCurGate</a>(nullptr), <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#ae2f79da280bbbd679d1e0b4724eead55">mCurIncl</a>(nullptr) {}</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml">NDQasmVersion::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml">NDInclude::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml">NDRegDecl::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml">NDOpaque::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">NDQOpMeasure::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml">NDQOpReset::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">NDQOpU::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">NDQOpCX::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">NDQOpBarrier::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">visit</a>(<a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml">NDStmtList::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    };</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;}</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> efd::QModulefyVisitor::getClonedOrIntrinsic(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref) {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">auto</span> cloned = ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a>();</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keyword">auto</span> ifstmt = dynCast&lt;NDIfStmt&gt;(cloned.get());</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keyword">auto</span> qop = dynCast&lt;NDQOp&gt;(cloned.get());</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">if</span> (qop == <span class="keyword">nullptr</span> &amp;&amp; ifstmt) {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        qop = ifstmt-&gt;getQOp();</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">if</span> (qop == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        std::string str = (ref == <span class="keyword">nullptr</span>) ? <span class="stringliteral">&quot;nullptr&quot;</span> : ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>(<span class="keyword">false</span>);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Node is neither NDQOp nor NDIfStmt. Actual: `&quot;</span> &lt;&lt; str &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    }</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a> intrinsic(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d4/deb/namespaceefd.xhtml#ac1264355b1eb1da02a2ae2c1906ce0a5">IsIntrinsicGateCall</a>(qop)) {</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keyword">auto</span> kind = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a6cbddf16d36e971fff36629ed192269b">GetIntrinsicKind</a>(qop);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keyword">auto</span> qargs = qop-&gt;getQArgs();</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        std::vector&lt;Node::uRef&gt; qargsVector;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; qarg : *qargs) { qargsVector.push_back(qarg-&gt;clone()); }</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        intrinsic = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a4ef7671eeb9b9b12d20549b08b9269c2">CreateIntrinsicGate</a>(kind, std::move(qargsVector));</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    }</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">if</span> (intrinsic.get() != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">if</span> (ifstmt != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            ifstmt-&gt;setQOp(std::move(intrinsic));</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            cloned = std::move(intrinsic);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        }</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    }</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordflow">return</span> cloned;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;}</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">  264</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml">NDQasmVersion::Ref</a> ref) {</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">if</span> (mCurIncl != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keyword">auto</span> vNum = uniqueCastForward&lt;NDReal&gt;(ref-&gt;<a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#adb0f8cedefb3c43a5e8346f31feaa9c0">getVersion</a>()-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a>());</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        mMod.setVersion(<a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a797ca00ee47d3e341eea1be65f0c8615">NDQasmVersion::Create</a>(std::move(vNum), <a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a015cefabf53b2666c442b01b86c2b7cd">NDStmtList::Create</a>()));</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    }</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    visitChildren(ref);</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;}</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#a5f54e8c098cc2e3e7f7f40dc64a9d82b">  273</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml">NDInclude::Ref</a> ref) {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keyword">auto</span> fileNode = uniqueCastForward&lt;NDString&gt;(ref-&gt;<a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a08ec207974cdeaf086c7978dc23b9a30">getFilename</a>()-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a>());</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    mMod.insertInclude(<a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a81d54827a61c546040dad4f57e34c318">NDInclude::Create</a></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            (std::move(fileNode), uniqueCastBackward&lt;Node&gt;(<a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a015cefabf53b2666c442b01b86c2b7cd">NDStmtList::Create</a>())));</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    mCurIncl = ref;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    visitChildren(ref);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    mCurIncl = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;}</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#aa5453be3473b9a335375257e2261787c">  283</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml">NDRegDecl::Ref</a> ref) {</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    mMod.insertReg(uniqueCastForward&lt;NDRegDecl&gt;(ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a>()));</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;}</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#a32d9beb9a056813fde0db06ec794fd3a">  287</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> ref) {</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keyword">auto</span> clone = uniqueCastForward&lt;NDGateSign&gt;(ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a>());</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keywordflow">if</span> (mCurIncl != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        clone-&gt;setInInclude();</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    }</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    mMod.insertGate(std::move(clone));</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#ac8a903296f2ee66a0b50368bf9e7d1b2">  297</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml">NDOpaque::Ref</a> ref) {</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    mMod.insertGate(uniqueCastForward&lt;NDGateSign&gt;(ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a>()));</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;}</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#ae93488178c9ddffc0b6cc481275f665a">  302</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">NDQOpMeasure::Ref</a> ref) {</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    mMod.insertStatementLast(ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a>());</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;}</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af965a08c4b619f4ab04d3723bd439fe1">  307</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml">NDQOpReset::Ref</a> ref) {</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    mMod.insertStatementLast(ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a>());</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;}</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#a1fbc640865a3411da612d2ed97a23434">  312</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">NDQOpU::Ref</a> ref) {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    mMod.insertStatementLast(ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a>());</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;}</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af30c70a55a06fcbc502e2a59595db83a">  317</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">NDQOpCX::Ref</a> ref) {</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    mMod.insertStatementLast(ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a>());</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;}</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#a67de909a067238c118e42d8ca8173883">  321</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">NDQOpBarrier::Ref</a> ref) {</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    mMod.insertStatementLast(ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a>());</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;}</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">// Both NDQOpGen and NDQOpIfStmt can be (the first) or have (the latter) an intrinsic gate.</span></div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#aa4c9c2141013c00e5d7b95999e0231e9">  326</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen::Ref</a> ref) {</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keyword">auto</span> cloned = getClonedOrIntrinsic(ref);</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    mMod.insertStatementLast(std::move(cloned));</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;}</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#abdba4ac2569e0c2168063ebd5bd2794c">  331</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt::Ref</a> ref) {</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keyword">auto</span> cloned = getClonedOrIntrinsic(ref);</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    mMod.insertStatementLast(std::move(cloned));</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;}</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#ac6c20258060ad077164abb1f2a1c148e">  336</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a>(<a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml">NDStmtList::Ref</a> ref) {</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    visitChildren(ref);</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;}</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#a5b8442e2de32a9529d7a4fcd5829ef62">  340</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b8442e2de32a9529d7a4fcd5829ef62">efd::ProcessAST</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule::Ref</a> qmod, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> root) {</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <a class="code" href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml">QModulefyVisitor</a> visitor(*qmod);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    root-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">apply</a>(&amp;visitor);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;}</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">// ==--------------- Inlining ---------------==</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> QArgsReplaceVisitorVisit(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor</a>* visitor, <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp::Ref</a> ref);</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="../../df/d0c/Utils_8cpp.xhtml#a80a5a055c9387b7d9d7e9d21f3acd79d">  348</a></span>&#160;<span class="keyword">typedef</span> std::unordered_map&lt;std::string, Node::Ref&gt; <a class="code" href="../../df/d0c/Utils_8cpp.xhtml#a80a5a055c9387b7d9d7e9d21f3acd79d">VarMap</a>;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a> {</div><div class="line"><a name="l00351"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml">  351</a></span>&#160;    <span class="keyword">class </span><a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml">QArgsReplaceVisitor</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor</a> {</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00353"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a74eda9d6d513203db313b0ac353d1ba3">  353</a></span>&#160;            <a class="code" href="../../df/d0c/Utils_8cpp.xhtml#a80a5a055c9387b7d9d7e9d21f3acd79d">VarMap</a>&amp; <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a74eda9d6d513203db313b0ac353d1ba3">varMap</a>;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a7dfbaca5bd21d40d429c27293195818e">  355</a></span>&#160;            <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a7dfbaca5bd21d40d429c27293195818e">QArgsReplaceVisitor</a>(<a class="code" href="../../df/d0c/Utils_8cpp.xhtml#a80a5a055c9387b7d9d7e9d21f3acd79d">VarMap</a>&amp; <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a74eda9d6d513203db313b0ac353d1ba3">varMap</a>) : <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a74eda9d6d513203db313b0ac353d1ba3">varMap</a>(<a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a74eda9d6d513203db313b0ac353d1ba3">varMap</a>) {}</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a0953381c6bb1aca40fc20efa2053661a">substituteChildrem</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a9bdff8b0ac5f10cb3d8619217436ebb1">replaceChild</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref);</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">visit</a>(<a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">NDQOpU::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">visit</a>(<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">NDQOpCX::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">visit</a>(<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">visit</a>(<a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">NDQOpBarrier::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">visit</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">visit</a>(<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml">NDBinOp::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">visit</a>(<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">NDUnaryOp::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">visit</a>(<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    };</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;}</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a9bdff8b0ac5f10cb3d8619217436ebb1">  371</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a9bdff8b0ac5f10cb3d8619217436ebb1">efd::QArgsReplaceVisitor::replaceChild</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> child) {</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    std::string _id = child-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>();</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keywordflow">if</span> (varMap.find(_id) != varMap.end()) {</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <span class="keywordflow">return</span> varMap[_id]-&gt;clone();</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    }</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;}</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a0953381c6bb1aca40fc20efa2053661a">  381</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a0953381c6bb1aca40fc20efa2053661a">efd::QArgsReplaceVisitor::substituteChildrem</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref) {</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0, e = ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a11df06f4d8e590426340024cbb2db23e">getChildNumber</a>(); i &lt; e; ++i) {</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        <span class="keyword">auto</span> newChild = replaceChild(ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a>(i));</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="keywordflow">if</span> (newChild.get() != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#aad4510814ff15bd26fe2f95f9d2a2279">setChild</a>(i, std::move(newChild));</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        }</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    }</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;}</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a4e7c8aefd6af0a9006df0fb71449073a">  390</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">efd::QArgsReplaceVisitor::visit</a>(<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList::Ref</a> ref) {</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    visitChildren(ref);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    substituteChildrem(ref);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;}</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">  395</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">efd::QArgsReplaceVisitor::visit</a>(<a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">NDQOpU::Ref</a> ref) {</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    QArgsReplaceVisitorVisit(<span class="keyword">this</span>, (<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp::Ref</a>) ref);</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;}</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a45125f6e8b86b31d1fc443ead9b35b94">  399</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">efd::QArgsReplaceVisitor::visit</a>(<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">NDQOpCX::Ref</a> ref) {</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    QArgsReplaceVisitorVisit(<span class="keyword">this</span>, (<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp::Ref</a>) ref);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;}</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a01f9feff2e4356aa81e9536497455046">  403</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">efd::QArgsReplaceVisitor::visit</a>(<a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">NDQOpBarrier::Ref</a> ref) {</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    QArgsReplaceVisitorVisit(<span class="keyword">this</span>, (<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp::Ref</a>) ref);</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;}</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#af0a49e53e7da3c8eed1dac76bbe756d8">  407</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">efd::QArgsReplaceVisitor::visit</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen::Ref</a> ref) {</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    QArgsReplaceVisitorVisit(<span class="keyword">this</span>, (<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp::Ref</a>) ref);</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;}</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a751990ab77c10efc6d2ed53dcb14bec2">  411</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">efd::QArgsReplaceVisitor::visit</a>(<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml">NDBinOp::Ref</a> ref) {</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    ref-&gt;<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aedf48dcf74c1dca8921de77810fbaf6f">getLhs</a>()-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">apply</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    ref-&gt;<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#af9332258a8ee96b82352e2a04d2e3af1">getRhs</a>()-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">apply</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    substituteChildrem(ref);</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;}</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#ad29b8fcd8ef4086b5286b9fc3148cc52">  417</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">efd::QArgsReplaceVisitor::visit</a>(<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">NDUnaryOp::Ref</a> ref) {</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    visitChildren(ref);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    substituteChildrem(ref);</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;}</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno"><a class="line" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a340924f8ad51d7c8d44a37585677eec5">  422</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">efd::QArgsReplaceVisitor::visit</a>(<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt::Ref</a> ref) {</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    <span class="comment">// We only need to visit the qop.</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    ref-&gt;<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">getQOp</a>()-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">apply</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;}</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno"><a class="line" href="../../d4/deb/namespaceefd.xhtml#acd4cde60c75b526798dab375aa82125c">  427</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/deb/namespaceefd.xhtml#acd4cde60c75b526798dab375aa82125c">efd::InlineGate</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule::Ref</a> qmod, <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp::Ref</a> qop) {</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    std::string gateId = qop-&gt;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">getId</a>()-&gt;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">getVal</a>();</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    </div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="keyword">auto</span> gate = qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a2cbccf2cf8dd0e4e2dc30bf12e146644">getQGate</a>(gateId);</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="keywordflow">if</span> (gate-&gt;isOpaque()) {</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Trying to inline opaque gate: `&quot;</span> &lt;&lt; gateId &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">ExitCode::EXIT_unreachable</a>);</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    }</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> gateDecl = dynCast&lt;NDGateDecl&gt;(gate);</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keywordflow">if</span> (gateDecl == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;No gate with such id found: `&quot;</span> &lt;&lt; gateId &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    }</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <a class="code" href="../../df/d0c/Utils_8cpp.xhtml#a80a5a055c9387b7d9d7e9d21f3acd79d">VarMap</a> varMap;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> gateQArgs = gateDecl-&gt;<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a081605b4c294930734e9d93b34ef85d0">getQArgs</a>();</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> qopQArgs = qop-&gt;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>();</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0, e = gateQArgs-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a11df06f4d8e590426340024cbb2db23e">getChildNumber</a>(); i &lt; e; ++i)</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        varMap[gateQArgs-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a>(i)-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>()] = qopQArgs-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a>(i);</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    </div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> gateArgs = gateDecl-&gt;<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a0be5984f118128bc3e2bf64a8a390071">getArgs</a>();</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> qopArgs = qop-&gt;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a38dbbb3a5ca8faaeb9973512f04c6f64">getArgs</a>();</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0, e = gateArgs-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a11df06f4d8e590426340024cbb2db23e">getChildNumber</a>(); i &lt; e; ++i)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        varMap[gateArgs-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a>(i)-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>()] = qopArgs-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a>(i);</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <span class="comment">// ------ Replacing</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <a class="code" href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml">QArgsReplaceVisitor</a> visitor(varMap);</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <span class="keyword">auto</span> gop = uniqueCastForward&lt;NDGOpList&gt;(gateDecl-&gt;<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#aa45195dbaf1b921fcece3cac5caaceac">getGOpList</a>()-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">clone</a>());</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <span class="comment">// &#39;stmt&#39; is the node we are going to replace.</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> stmt = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <span class="keyword">auto</span> ifstmt = dynCast&lt;NDIfStmt&gt;(qop-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">getParent</a>());</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keywordflow">if</span> (ifstmt != <span class="keyword">nullptr</span>) stmt = ifstmt;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <span class="keywordflow">else</span> stmt = qop;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <span class="comment">// Replace the arguments.</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    std::vector&lt;Node::uRef&gt; inlinedNodes;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; op : *gop) {</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        <span class="keyword">auto</span> qop = std::move(op);</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        <span class="comment">// If its parent is an NDIfStmt, we wrap the the operation into</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        <span class="comment">// a clone of the if.</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        <span class="keywordflow">if</span> (ifstmt != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            <span class="keyword">auto</span> ifclone = uniqueCastForward&lt;NDIfStmt&gt;(ifstmt-&gt;clone());</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            ifclone-&gt;setQOp(uniqueCastForward&lt;NDQOp&gt;(std::move(qop)));</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            qop.reset(ifclone.release());</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        }</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        <span class="comment">// The &#39;visitor&#39; is applied only in the &#39;qop&#39;.</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        qop-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">apply</a>(&amp;visitor);</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        inlinedNodes.push_back(std::move(qop));</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    }</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#abaf0b3dd099e4b098b89772b6a134d07">replaceStatement</a>(stmt, std::move(inlinedNodes));</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;}</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> QArgsReplaceVisitorVisit(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor</a>* visitor, <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp::Ref</a> ref) {</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    ref-&gt;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a38dbbb3a5ca8faaeb9973512f04c6f64">getArgs</a>()-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">apply</a>(visitor);</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    ref-&gt;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>()-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">apply</a>(visitor);</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;}</div><div class="ttc" id="classefd_1_1NDGateDecl_xhtml_aa45195dbaf1b921fcece3cac5caaceac"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#aa45195dbaf1b921fcece3cac5caaceac">efd::NDGateDecl::getGOpList</a></div><div class="ttdeci">NDGOpList::Ref getGOpList() const</div><div class="ttdoc">Gets the goplist node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00804">Nodes.cpp:804</a></div></div>
<div class="ttc" id="classefd_1_1NodeVisitor_xhtml"><div class="ttname"><a href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">efd::NodeVisitor</a></div><div class="ttdoc">Interface class to be used as a visitor. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d8d/NodeVisitor_8h_source.xhtml#l00009">NodeVisitor.h:9</a></div></div>
<div class="ttc" id="classefd_1_1QModulefyVisitor_xhtml_abb023fa145e1e3b6c9f55493781ea874"><div class="ttname"><a href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#abb023fa145e1e3b6c9f55493781ea874">efd::QModulefyVisitor::QModulefyVisitor</a></div><div class="ttdeci">QModulefyVisitor(QModule &amp;qmod)</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00209">Utils.cpp:209</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a08ec207974cdeaf086c7978dc23b9a30"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a08ec207974cdeaf086c7978dc23b9a30">efd::NDInclude::getFilename</a></div><div class="ttdeci">NDString::Ref getFilename() const</div><div class="ttdoc">Gets the node that holds the filename. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00675">Nodes.cpp:675</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a081605b4c294930734e9d93b34ef85d0"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a081605b4c294930734e9d93b34ef85d0">efd::NDGateSign::getQArgs</a></div><div class="ttdeci">NDList::Ref getQArgs() const</div><div class="ttdoc">Gets the qargs node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00742">Nodes.cpp:742</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_af3487901a239a99750dc5dcdc3a8c868"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a></div><div class="ttdeci">void ExitWith(ExitCode e)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d72/Defs_8cpp_source.xhtml#l00045">Defs.cpp:45</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_a797ca00ee47d3e341eea1be65f0c8615"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a797ca00ee47d3e341eea1be65f0c8615">efd::NDQasmVersion::Create</a></div><div class="ttdeci">static uRef Create(NDReal::uRef vNode, NDStmtList::uRef stmtsNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00647">Nodes.cpp:647</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a23e33e714f48070d9e8c090cd396d956"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">efd::Node::getKind</a></div><div class="ttdeci">Kind getKind() const</div><div class="ttdoc">Returns the kind of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00054">Nodes.cpp:54</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a6c85c9bd21014b73497de741cc75f706"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">efd::Node::clone</a></div><div class="ttdeci">Node::uRef clone() const</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00114">Nodes.cpp:114</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_ac1264355b1eb1da02a2ae2c1906ce0a5"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#ac1264355b1eb1da02a2ae2c1906ce0a5">efd::IsIntrinsicGateCall</a></div><div class="ttdeci">bool IsIntrinsicGateCall(Node::Ref ref)</div><div class="ttdoc">Returns whether ref is (or should be) an intrinsic gate. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00116">Utils.cpp:116</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a63e30243eca03b0c85d8c4856e91c79d"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">efd::Node::getChild</a></div><div class="ttdeci">Ref getChild(uint32_t i) const</div><div class="ttdoc">Gets the i-th child. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00021">Nodes.cpp:21</a></div></div>
<div class="ttc" id="Defs_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00046">Defs.h:46</a></div></div>
<div class="ttc" id="classefd_1_1QArgsReplaceVisitor_xhtml"><div class="ttname"><a href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml">efd::QArgsReplaceVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00351">Utils.cpp:351</a></div></div>
<div class="ttc" id="classefd_1_1QModulefyVisitor_xhtml_a2a5e955af4a49a5f42c5e18c76d83908"><div class="ttname"><a href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#a2a5e955af4a49a5f42c5e18c76d83908">efd::QModulefyVisitor::mMod</a></div><div class="ttdeci">QModule &amp; mMod</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00204">Utils.cpp:204</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_acd4cde60c75b526798dab375aa82125c"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#acd4cde60c75b526798dab375aa82125c">efd::InlineGate</a></div><div class="ttdeci">void InlineGate(QModule::Ref qmod, NDQOp::Ref qop)</div><div class="ttdoc">If found, inlines the gate that qop calls. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00427">Utils.cpp:427</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_a287cbca5c6c5fbf565ac32f435030eaca407b48bc476412424a62cc5eaee7184e"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eaca407b48bc476412424a62cc5eaee7184e">efd::NDQOpGen::K_INTRINSIC_LCX</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00938">Nodes.h:938</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_ab813c60af1717cf50e92a28b274c24ef"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#ab813c60af1717cf50e92a28b274c24ef">efd::Node::apply</a></div><div class="ttdeci">virtual void apply(NodeVisitor *visitor)=0</div><div class="ttdoc">Used by visitor classes. </div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">efd::NDQOpGen</a></div><div class="ttdoc">NDQOp specialized for generic gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00930">Nodes.h:930</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_abaf0b3dd099e4b098b89772b6a134d07"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#abaf0b3dd099e4b098b89772b6a134d07">efd::QModule::replaceStatement</a></div><div class="ttdeci">Iterator replaceStatement(Node::Ref stmt, std::vector&lt; Node::uRef &gt; stmts)</div><div class="ttdoc">Replaces the stmt by the vector stmts. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00113">QModule.cpp:113</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a6cbddf16d36e971fff36629ed192269b"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a6cbddf16d36e971fff36629ed192269b">efd::GetIntrinsicKind</a></div><div class="ttdeci">NDQOpGen::IntrinsicKind GetIntrinsicKind(Node::Ref ref)</div><div class="ttdoc">Gets the NDQOpGen::IntrinsicKind, given a Node ref. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00128">Utils.cpp:128</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpReset_xhtml"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml">efd::NDQOpReset</a></div><div class="ttdoc">NDQOp specialized for reset operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00630">Nodes.h:630</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml">efd::NDBinOp</a></div><div class="ttdoc">Binary operation node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00777">Nodes.h:777</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a3c72243a170ffe8a4836e7092fd1469f"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a3c72243a170ffe8a4836e7092fd1469f">efd::CreateILongCX</a></div><div class="ttdeci">NDQOp::uRef CreateILongCX(Node::uRef lhs, Node::uRef middle, Node::uRef rhs)</div><div class="ttdoc">Creates a call to the intrinsic long cnot function. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00187">Utils.cpp:187</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_af9332258a8ee96b82352e2a04d2e3af1"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#af9332258a8ee96b82352e2a04d2e3af1">efd::NDBinOp::getRhs</a></div><div class="ttdeci">Node::Ref getRhs() const</div><div class="ttdoc">Gets the right hand side argument. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01200">Nodes.cpp:1200</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a7df493996977432aee05df57ae6dc375"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">efd::Node::getParent</a></div><div class="ttdeci">Ref getParent() const</div><div class="ttdoc">Returns the parent node of the current node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00086">Nodes.cpp:86</a></div></div>
<div class="ttc" id="classefd_1_1QModulefyVisitor_xhtml_ae2f79da280bbbd679d1e0b4724eead55"><div class="ttname"><a href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#ae2f79da280bbbd679d1e0b4724eead55">efd::QModulefyVisitor::mCurIncl</a></div><div class="ttdeci">NDInclude::Ref mCurIncl</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00207">Utils.cpp:207</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml">efd::NDInclude</a></div><div class="ttdoc">Node used to parse another file. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00461">Nodes.h:461</a></div></div>
<div class="ttc" id="classefd_1_1QArgsReplaceVisitor_xhtml_a7dfbaca5bd21d40d429c27293195818e"><div class="ttname"><a href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a7dfbaca5bd21d40d429c27293195818e">efd::QArgsReplaceVisitor::QArgsReplaceVisitor</a></div><div class="ttdeci">QArgsReplaceVisitor(VarMap &amp;varMap)</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00355">Utils.cpp:355</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml">efd::QModule</a></div><div class="ttdoc">Qasm module representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00013">QModule.h:13</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml">efd::NDQasmVersion</a></div><div class="ttdoc">Node that holds the current Qasm version and the rest of the program. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00420">Nodes.h:420</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_a287cbca5c6c5fbf565ac32f435030eac"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">efd::NDQOpGen::IntrinsicKind</a></div><div class="ttdeci">IntrinsicKind</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00935">Nodes.h:935</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_a287cbca5c6c5fbf565ac32f435030eacaf7e8e47175639d18097588895f0b1b13"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eacaf7e8e47175639d18097588895f0b1b13">efd::NDQOpGen::K_INTRINSIC_REV_CX</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00937">Nodes.h:937</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a4a15c30d88c8421e7298f1152fba337ea2cd68b0c181b411f88a82060a7e4db9f"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a4a15c30d88c8421e7298f1152fba337ea2cd68b0c181b411f88a82060a7e4db9f">efd::Node::K_QOP_CX</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00058">Nodes.h:58</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00005">Architectures.cpp:5</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a38dbbb3a5ca8faaeb9973512f04c6f64"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a38dbbb3a5ca8faaeb9973512f04c6f64">efd::NDQOp::getArgs</a></div><div class="ttdeci">NDList::Ref getArgs() const</div><div class="ttdoc">Gets the arguments. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00901">Nodes.cpp:901</a></div></div>
<div class="ttc" id="RTTI_8h_xhtml"><div class="ttname"><a href="../../d5/dfc/RTTI_8h.xhtml">RTTI.h</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a96ca13a5c2b971b68619ce4a34be0f66"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">efd::Node::toString</a></div><div class="ttdeci">virtual std::string toString(bool pretty=false) const =0</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div></div>
<div class="ttc" id="classefd_1_1QModulefyVisitor_xhtml"><div class="ttname"><a href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml">efd::QModulefyVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00199">Utils.cpp:199</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml">efd::NDGateSign</a></div><div class="ttdoc">Node for declaration of opaque quantum gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00499">Nodes.h:499</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">efd::NDQOpU</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00716">Nodes.h:716</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a494a2123de6024d1057cf773acda5f25"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; Node &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00042">Nodes.h:42</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_ab9c1264648ba0395505dc5b54358c0a9"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#ab9c1264648ba0395505dc5b54358c0a9">efd::IsCNOTGateCall</a></div><div class="ttdeci">bool IsCNOTGateCall(Node::Ref ref)</div><div class="ttdoc">Returns whether ref is a CNOT gate. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00101">Utils.cpp:101</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_afaf520a011031e3dc171b2896cba167f"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#afaf520a011031e3dc171b2896cba167f">efd::StdLibCX</a></div><div class="ttdeci">const std::string StdLibCX</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00099">Utils.cpp:99</a></div></div>
<div class="ttc" id="classefd_1_1QArgsReplaceVisitor_xhtml_a9bdff8b0ac5f10cb3d8619217436ebb1"><div class="ttname"><a href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a9bdff8b0ac5f10cb3d8619217436ebb1">efd::QArgsReplaceVisitor::replaceChild</a></div><div class="ttdeci">Node::uRef replaceChild(Node::Ref ref)</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00371">Utils.cpp:371</a></div></div>
<div class="ttc" id="structefd_1_1NDQOpSwap_xhtml"><div class="ttname"><a href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml">efd::NDQOpSwap</a></div><div class="ttdoc">Special node for swap calls. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00059">Utils.cpp:59</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_a287cbca5c6c5fbf565ac32f435030eaca06d08c07a567eac8a58914ef691dc9f8"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eaca06d08c07a567eac8a58914ef691dc9f8">efd::NDQOpGen::K_INTRINSIC_SWAP</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00936">Nodes.h:936</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a5ef5ed743ddb6e586602c5242f2f36cc"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">efd::NDQOp::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDQOp &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00580">Nodes.h:580</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml">efd::NDStmtList</a></div><div class="ttdoc">Node for list of qubit operation sequences. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00379">Nodes.h:379</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node</a></div><div class="ttdoc">Base class for AST nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00039">Nodes.h:39</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">efd::NDUnaryOp</a></div><div class="ttdoc">Unary operation node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00851">Nodes.h:851</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml">efd::NDQOp</a></div><div class="ttdoc">Generic node for quantum operations. This is also the base node for the other quantum gates...</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00577">Nodes.h:577</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_aad4510814ff15bd26fe2f95f9d2a2279"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#aad4510814ff15bd26fe2f95f9d2a2279">efd::Node::setChild</a></div><div class="ttdeci">void setChild(uint32_t i, uRef ref)</div><div class="ttdoc">Sets the i-th child. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00025">Nodes.cpp:25</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_ad83c1dbaa41519964485ea8e2437bcb7"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#ad83c1dbaa41519964485ea8e2437bcb7">efd::CreateISwap</a></div><div class="ttdeci">NDQOp::uRef CreateISwap(Node::uRef lhs, Node::uRef rhs)</div><div class="ttdoc">Creates a call to the intrinsic swap function. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00181">Utils.cpp:181</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a81d54827a61c546040dad4f57e34c318"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a81d54827a61c546040dad4f57e34c318">efd::NDInclude::Create</a></div><div class="ttdeci">static uRef Create(NDId::uRef fNode, Node::uRef astNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00706">Nodes.cpp:706</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpBarrier_xhtml"><div class="ttname"><a href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">efd::NDQOpBarrier</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00658">Nodes.h:658</a></div></div>
<div class="ttc" id="Utils_8h_xhtml"><div class="ttname"><a href="../../d9/ded/Utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">efd::NDGateDecl</a></div><div class="ttdoc">Node for declaration of quantum gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00543">Nodes.h:543</a></div></div>
<div class="ttc" id="NodeVisitor_8h_xhtml"><div class="ttname"><a href="../../d0/d8d/NodeVisitor_8h.xhtml">NodeVisitor.h</a></div></div>
<div class="ttc" id="intrinsic_8inc_xhtml"><div class="ttname"><a href="../../d3/da1/intrinsic_8inc.xhtml">intrinsic.inc</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a2cbccf2cf8dd0e4e2dc30bf12e146644"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a2cbccf2cf8dd0e4e2dc30bf12e146644">efd::QModule::getQGate</a></div><div class="ttdeci">NDGateSign::Ref getQGate(std::string id) const</div><div class="ttdoc">Gets the quantum gate mapped to id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00336">QModule.cpp:336</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_a53ee724a8db3429bf30bb1936ad548b2"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">efd::NDValue::getVal</a></div><div class="ttdeci">T getVal() const</div><div class="ttdoc">Returns a copy to the setted value. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l01023">Nodes.h:1023</a></div></div>
<div class="ttc" id="structefd_1_1NDQOpSwap_xhtml_a3821a8ddbdbe10b972bcfa99ce4d90db"><div class="ttname"><a href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml#a3821a8ddbdbe10b972bcfa99ce4d90db">efd::NDQOpSwap::NDQOpSwap</a></div><div class="ttdeci">NDQOpSwap(Node::uRef lhs, Node::uRef rhs)</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00062">Utils.cpp:62</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">efd::NDIfStmt</a></div><div class="ttdoc">Node for conditional statement. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00968">Nodes.h:968</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_ae9f49bc3eeebb8d24af82ecaa8cc3636"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#ae9f49bc3eeebb8d24af82ecaa8cc3636">efd::Node::getOperation</a></div><div class="ttdeci">virtual std::string getOperation() const</div><div class="ttdoc">Returns a std::string representation of the operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00110">Nodes.cpp:110</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">efd::ExitCode::EXIT_unknown_resource</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_aedf48dcf74c1dca8921de77810fbaf6f"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aedf48dcf74c1dca8921de77810fbaf6f">efd::NDBinOp::getLhs</a></div><div class="ttdeci">Node::Ref getLhs() const</div><div class="ttdoc">Gets the left hand side argument. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01192">Nodes.cpp:1192</a></div></div>
<div class="ttc" id="structefd_1_1NDQOpRevCX_xhtml"><div class="ttname"><a href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml">efd::NDQOpRevCX</a></div><div class="ttdoc">Special node for reversal cnot calls. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00084">Utils.cpp:84</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a0c627fa9aac8afe1562eae8f64830bff"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">efd::NDList::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00414">Nodes.cpp:414</a></div></div>
<div class="ttc" id="structefd_1_1NDQOpRevCX_xhtml_ac48cc707e2ac1479918b16fb8e3db722"><div class="ttname"><a href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml#ac48cc707e2ac1479918b16fb8e3db722">efd::NDQOpRevCX::IdStr</a></div><div class="ttdeci">static const std::string IdStr</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00085">Utils.cpp:85</a></div></div>
<div class="ttc" id="structefd_1_1NDQOpLongCX_xhtml_acfedeef7e4a8fd4dd96e13c8a9e6fbcb"><div class="ttname"><a href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml#acfedeef7e4a8fd4dd96e13c8a9e6fbcb">efd::NDQOpLongCX::NDQOpLongCX</a></div><div class="ttdeci">NDQOpLongCX(Node::uRef lhs, Node::uRef middle, Node::uRef rhs)</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00074">Utils.cpp:74</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a4a15c30d88c8421e7298f1152fba337ea5d911655c60ace0f70105ba8a09e8f8c"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a4a15c30d88c8421e7298f1152fba337ea5d911655c60ace0f70105ba8a09e8f8c">efd::Node::K_QOP_GEN</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00060">Nodes.h:60</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_af7ef43289355c5bb047a46419177c8ed"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">efd::NDQOp::getQArgs</a></div><div class="ttdeci">NDList::Ref getQArgs() const</div><div class="ttdoc">Gets the quantum arguments. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00909">Nodes.cpp:909</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml">efd::NDValue</a></div><div class="ttdoc">Node for literal types. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00164">Nodes.h:164</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml_a015cefabf53b2666c442b01b86c2b7cd"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a015cefabf53b2666c442b01b86c2b7cd">efd::NDStmtList::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00473">Nodes.cpp:473</a></div></div>
<div class="ttc" id="Utils_8cpp_xhtml_a80a5a055c9387b7d9d7e9d21f3acd79d"><div class="ttname"><a href="../../df/d0c/Utils_8cpp.xhtml#a80a5a055c9387b7d9d7e9d21f3acd79d">VarMap</a></div><div class="ttdeci">std::unordered_map&lt; std::string, Node::Ref &gt; VarMap</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00348">Utils.cpp:348</a></div></div>
<div class="ttc" id="structefd_1_1NDQOpSwap_xhtml_aef056ad9c84be1b6e86e3645c7d858e8"><div class="ttname"><a href="../../dd/d04/structefd_1_1NDQOpSwap.xhtml#aef056ad9c84be1b6e86e3645c7d858e8">efd::NDQOpSwap::IdStr</a></div><div class="ttdeci">static const std::string IdStr</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00060">Utils.cpp:60</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_ae5c408d49862e644f1d299ab5b2f121d"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">efd::NDIfStmt::getQOp</a></div><div class="ttdeci">NDQOp::Ref getQOp() const</div><div class="ttdoc">Gets the qop. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00543">Nodes.cpp:543</a></div></div>
<div class="ttc" id="classefd_1_1QArgsReplaceVisitor_xhtml_a0953381c6bb1aca40fc20efa2053661a"><div class="ttname"><a href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a0953381c6bb1aca40fc20efa2053661a">efd::QArgsReplaceVisitor::substituteChildrem</a></div><div class="ttdeci">void substituteChildrem(Node::Ref ref)</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00381">Utils.cpp:381</a></div></div>
<div class="ttc" id="structefd_1_1NDQOpRevCX_xhtml_a8dc362aa103195558d180f53b6476be9"><div class="ttname"><a href="../../d1/d69/structefd_1_1NDQOpRevCX.xhtml#a8dc362aa103195558d180f53b6476be9">efd::NDQOpRevCX::NDQOpRevCX</a></div><div class="ttdeci">NDQOpRevCX(Node::uRef lhs, Node::uRef rhs)</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00087">Utils.cpp:87</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a11df06f4d8e590426340024cbb2db23e"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a11df06f4d8e590426340024cbb2db23e">efd::Node::getChildNumber</a></div><div class="ttdeci">virtual uint32_t getChildNumber() const =0</div><div class="ttdoc">Returns the number of childrem of this node. </div></div>
<div class="ttc" id="structefd_1_1NDQOpLongCX_xhtml_a5575a1e85dab246c708c670472e67287"><div class="ttname"><a href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml#a5575a1e85dab246c708c670472e67287">efd::NDQOpLongCX::IdStr</a></div><div class="ttdeci">static const std::string IdStr</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00072">Utils.cpp:72</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a4ef7671eeb9b9b12d20549b08b9269c2"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a4ef7671eeb9b9b12d20549b08b9269c2">efd::CreateIntrinsicGate</a></div><div class="ttdeci">NDQOp::uRef CreateIntrinsicGate(NDQOpGen::IntrinsicKind kind, std::vector&lt; Node::uRef &gt; qargs)</div><div class="ttdoc">Creates an intrinsic gate of kind kind and arguments args. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00146">Utils.cpp:146</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_adb0f8cedefb3c43a5e8346f31feaa9c0"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#adb0f8cedefb3c43a5e8346f31feaa9c0">efd::NDQasmVersion::getVersion</a></div><div class="ttdeci">NDReal::Ref getVersion() const</div><div class="ttdoc">Gets the node that holds the version. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00614">Nodes.cpp:614</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a0be5984f118128bc3e2bf64a8a390071"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a0be5984f118128bc3e2bf64a8a390071">efd::NDGateSign::getArgs</a></div><div class="ttdeci">NDList::Ref getArgs() const</div><div class="ttdoc">Gets the args node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00734">Nodes.cpp:734</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml">efd::NDList</a></div><div class="ttdoc">Base class for list of nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00331">Nodes.h:331</a></div></div>
<div class="ttc" id="classefd_1_1QArgsReplaceVisitor_xhtml_a74eda9d6d513203db313b0ac353d1ba3"><div class="ttname"><a href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a74eda9d6d513203db313b0ac353d1ba3">efd::QArgsReplaceVisitor::varMap</a></div><div class="ttdeci">VarMap &amp; varMap</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00353">Utils.cpp:353</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_af8e947f977669e54d6aaf3a43815833c"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#af8e947f977669e54d6aaf3a43815833c">efd::CreateIRevCX</a></div><div class="ttdeci">NDQOp::uRef CreateIRevCX(Node::uRef lhs, Node::uRef rhs)</div><div class="ttdoc">Creates a call to the intrinsic reversal cnot function. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00192">Utils.cpp:192</a></div></div>
<div class="ttc" id="structefd_1_1NDQOpLongCX_xhtml"><div class="ttname"><a href="../../d2/d46/structefd_1_1NDQOpLongCX.xhtml">efd::NDQOpLongCX</a></div><div class="ttdoc">Special node for long cnot calls. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00071">Utils.cpp:71</a></div></div>
<div class="ttc" id="classefd_1_1QModulefyVisitor_xhtml_af4a104815d57ca642cb1bc18ea16caf9"><div class="ttname"><a href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#af4a104815d57ca642cb1bc18ea16caf9">efd::QModulefyVisitor::visit</a></div><div class="ttdeci">void visit(NDQasmVersion::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00264">Utils.cpp:264</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a194305909125a1398a1f0e00fbae1cf5"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a194305909125a1398a1f0e00fbae1cf5">efd::GetIntrinsicGates</a></div><div class="ttdeci">std::vector&lt; NDGateSign::uRef &gt; GetIntrinsicGates()</div><div class="ttdoc">Returns a vector with the intrinsic gates implementation. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00045">Utils.cpp:45</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">efd::ExitCode::EXIT_unreachable</a></div></div>
<div class="ttc" id="classefd_1_1QArgsReplaceVisitor_xhtml_a2b6c4ec675c36ad75e0058631a2635bb"><div class="ttname"><a href="../../dc/d43/classefd_1_1QArgsReplaceVisitor.xhtml#a2b6c4ec675c36ad75e0058631a2635bb">efd::QArgsReplaceVisitor::visit</a></div><div class="ttdeci">void visit(NDQOpU::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00395">Utils.cpp:395</a></div></div>
<div class="ttc" id="uRefCast_8h_xhtml"><div class="ttname"><a href="../../dc/d09/uRefCast_8h.xhtml">uRefCast.h</a></div></div>
<div class="ttc" id="Defs_8h_xhtml"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml">Defs.h</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_acdb5cc3d663ae31fe14464b61e748435"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">efd::NDQOpGen::Create</a></div><div class="ttdeci">static uRef Create(NDId::uRef idNode, NDList::uRef aNode, NDList::uRef qaNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01177">Nodes.cpp:1177</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">efd::NDQOpMeasure</a></div><div class="ttdoc">NDQOp specialized for measure operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00681">Nodes.h:681</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">efd::NDQOpCX</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00744">Nodes.h:744</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_aa9d90f493865fe9cdc3fecd468eaa33b"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">efd::NDQOp::getId</a></div><div class="ttdeci">NDId::Ref getId() const</div><div class="ttdoc">Gets the id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00893">Nodes.cpp:893</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml">efd::NDRegDecl</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00245">Nodes.h:245</a></div></div>
<div class="ttc" id="Analysis_2Driver_8h_xhtml"><div class="ttname"><a href="../../d0/d5c/Analysis_2Driver_8h.xhtml">Driver.h</a></div></div>
<div class="ttc" id="classefd_1_1QModulefyVisitor_xhtml_a842705654c5e1aa3b1843add900f2b7d"><div class="ttname"><a href="../../de/d71/classefd_1_1QModulefyVisitor.xhtml#a842705654c5e1aa3b1843add900f2b7d">efd::QModulefyVisitor::mCurGate</a></div><div class="ttdeci">NDGateDecl::Ref mCurGate</div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00206">Utils.cpp:206</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a93709641ce1593c2f8143206beb0a699"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a93709641ce1593c2f8143206beb0a699">efd::ParseString</a></div><div class="ttdeci">Node::uRef ParseString(std::string program, bool forceStdLib=true)</div><div class="ttdoc">Parse the string program. </div></div>
<div class="ttc" id="namespaceefd_xhtml_a5b8442e2de32a9529d7a4fcd5829ef62"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a5b8442e2de32a9529d7a4fcd5829ef62">efd::ProcessAST</a></div><div class="ttdeci">void ProcessAST(QModule::Ref qmod, Node::Ref root)</div><div class="ttdoc">Processes the root node, and transform the entire AST into a QModule. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/d0c/Utils_8cpp_source.xhtml#l00340">Utils.cpp:340</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:35 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
