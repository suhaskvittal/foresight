<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Arch/ArchGraph.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_9b546808f634c5956ba486482eb20c78.xhtml">Arch</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ArchGraph.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../dc/d51/ArchGraph_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/d9d/ArchGraph_8h.xhtml">enfield/Arch/ArchGraph.h</a>&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d4/daf/Nodes_8h.xhtml">enfield/Analysis/Nodes.h</a>&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d5/dfc/RTTI_8h.xhtml">enfield/Support/RTTI.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d1/d73/Defs_8h.xhtml">enfield/Support/Defs.h</a>&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#ad8d5dcc8e2d83251b4263f6e8eea5893">    9</a></span>&#160;<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#ad8d5dcc8e2d83251b4263f6e8eea5893">efd::ArchGraph::ArchGraph</a>(uint32_t n, <span class="keywordtype">bool</span> isGeneric)</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    : <a class="code" href="../../db/db3/classefd_1_1Graph.xhtml">Graph</a>(K_ARCH, n, Directed), mNodes(n), mId(n, <span class="stringliteral">&quot;&quot;</span>), mGeneric(isGeneric), mVID(0) {}</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#aaf1aa97b8e0d1881e749264183b0b49f">   12</a></span>&#160;std::string <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#aaf1aa97b8e0d1881e749264183b0b49f">efd::ArchGraph::vertexToString</a>(uint32_t i)<span class="keyword"> const </span>{</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <span class="keyword">auto</span> vstr = getNode(i)-&gt;toString(<span class="keyword">false</span>);</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    std::size_t pos;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    pos = 0;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keywordflow">while</span> ((pos = vstr.find(pos, <span class="charliteral">&#39;[&#39;</span>)) != std::string::npos) {</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        vstr = vstr.erase(pos, 1);</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    }</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    pos = 0;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">while</span> ((pos = vstr.find(pos, <span class="charliteral">&#39;]&#39;</span>)) != std::string::npos) {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        vstr = vstr.erase(pos, 1);</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    }</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">return</span> vstr;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;}</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a1388225779727295176780b9a68aedf2">   29</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a1388225779727295176780b9a68aedf2">efd::ArchGraph::getNode</a>(uint32_t i)<span class="keyword"> const </span>{</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">if</span> (i &gt;= mNodes.size()) {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Node index out of bounds (of `&quot;</span> &lt;&lt; mNodes.size()</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;`): `&quot;</span> &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">ExitCode::EXIT_unreachable</a>);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    }</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">return</span> mNodes[i].get();</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a6307f3a9c6645e1fc1c0b5d5088fac48">   38</a></span>&#160;uint32_t <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a6307f3a9c6645e1fc1c0b5d5088fac48">efd::ArchGraph::putVertex</a>(std::string s) {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">if</span> (mStrToId.find(s) != mStrToId.end())</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">return</span> mStrToId[s];</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    uint32_t <span class="keywordtype">id</span> = mVID++;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    mId[id] = s;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    mStrToId[s] = id;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> id;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a45d2f772e437c3a5d60c88192675b7c6">   48</a></span>&#160;uint32_t <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a6307f3a9c6645e1fc1c0b5d5088fac48">efd::ArchGraph::putVertex</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> node) {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    std::string s = node-&gt;toString();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">if</span> (mStrToId.find(s) != mStrToId.end())</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">return</span> mStrToId[s];</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    uint32_t <span class="keywordtype">id</span> = putVertex(s);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    mNodes[id] = std::move(node);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">return</span> id;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a2be2f9183df2a3ae539dd406f8bb2d2a">   59</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a2be2f9183df2a3ae539dd406f8bb2d2a">efd::ArchGraph::putReg</a>(std::string <span class="keywordtype">id</span>, std::string size) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    mRegs.push_back(std::make_pair(<span class="keywordtype">id</span>, std::stoul(size)));</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a197c4183cb9e9127161a8944206c3ca6">   63</a></span>&#160;uint32_t <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a197c4183cb9e9127161a8944206c3ca6">efd::ArchGraph::getUId</a>(std::string s) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">if</span> (!hasSId(s)) {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;No such vertex with this string id: `&quot;</span> &lt;&lt; s &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">return</span> mStrToId[s];</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#ab7fb1e12dce31f495ef659d99e30b284">   71</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#ab7fb1e12dce31f495ef659d99e30b284">efd::ArchGraph::hasSId</a>(std::string s)<span class="keyword"> const </span>{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> mStrToId.find(s) != mStrToId.end();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a9a5504c22d41a2baf83e0f42aeb29fe3">   75</a></span>&#160;std::string <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a9a5504c22d41a2baf83e0f42aeb29fe3">efd::ArchGraph::getSId</a>(uint32_t i) {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">if</span> (i &gt;= mId.size()) {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;Vertex index out of bounds (of `&quot;</span> &lt;&lt; mId.size() &lt;&lt; <span class="stringliteral">&quot;`): `&quot;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">ExitCode::EXIT_unreachable</a>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> mId[i];</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">   84</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">efd::ArchGraph::isReverseEdge</a>(uint32_t i, uint32_t j) {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">auto</span>&amp; succ = mSuccessors[i];</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">auto</span>&amp; pred = mPredecessors[i];</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> succ.find(j) == succ.end() &amp;&amp; pred.find(j) != pred.end();</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#abc7ce53293b8ebcaea5e69f15da1091c">   90</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#abc7ce53293b8ebcaea5e69f15da1091c">efd::ArchGraph::isGeneric</a>() {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">return</span> mGeneric;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a0481cd8304cd18c5708e67244e754723">   94</a></span>&#160;<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a79ecc16e7d47295f6830503a2ddabceb">efd::ArchGraph::RegsIterator</a> <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a0481cd8304cd18c5708e67244e754723">efd::ArchGraph::reg_begin</a>() {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> mRegs.begin();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a32ca17290f67e79f38c1b591ca2c1257">   98</a></span>&#160;<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a79ecc16e7d47295f6830503a2ddabceb">efd::ArchGraph::RegsIterator</a> <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a32ca17290f67e79f38c1b591ca2c1257">efd::ArchGraph::reg_end</a>() {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> mRegs.end();</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a7cf58cb9879075429767278732460480">  102</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a7cf58cb9879075429767278732460480">efd::ArchGraph::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../db/db3/classefd_1_1Graph.xhtml">Graph</a>* g) {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">return</span> g-&gt;<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#a731fcd6c93e77379a962cdb3016c37c5">isArch</a>();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a6110c8ecd0e526ac1abd977e43602bd5">  106</a></span>&#160;std::unique_ptr&lt;efd::ArchGraph&gt; <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a6110c8ecd0e526ac1abd977e43602bd5">efd::ArchGraph::Create</a>(uint32_t n) {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span> std::unique_ptr&lt;ArchGraph&gt;(<span class="keyword">new</span> <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml">ArchGraph</a>(n));</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword">static</span> std::unique_ptr&lt;efd::ArchGraph&gt; ReadFromIn(std::istream&amp; in) {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    uint32_t regs, qubits;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    in &gt;&gt; regs &gt;&gt; qubits;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    std::unique_ptr&lt;efd::ArchGraph&gt; graph(<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a6110c8ecd0e526ac1abd977e43602bd5">efd::ArchGraph::Create</a>(qubits));</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">for</span> (uint32_t rid = 0; rid &lt; regs; ++rid) {</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        uint32_t regsize;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        std::string regname;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        in &gt;&gt; regname &gt;&gt; regsize;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keyword">auto</span> ndID = <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a96ab9dcd008523aa2f4cfc2eb95d7178">efd::NDId::Create</a>(regname);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        graph-&gt;putReg(regname, <a class="code" href="../../d8/dcc/namespacestd.xhtml#a76fb98cd4a35566d53c2f0513c5d12d1">std::to_string</a>(regsize));</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">for</span> (uint32_t i = 0; i &lt; regsize; ++i) {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keyword">auto</span> ndN = <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a96ab9dcd008523aa2f4cfc2eb95d7178">efd::NDInt::Create</a>(<a class="code" href="../../d8/dcc/namespacestd.xhtml#a76fb98cd4a35566d53c2f0513c5d12d1">std::to_string</a>(i));</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="keyword">auto</span> ndIDCpy = efd::dynCast&lt;efd::NDId&gt;(ndID-&gt;clone().release());</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            graph-&gt;putVertex(<a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a9407354bbb835d0daffbeb30cafc1076">efd::NDIdRef::Create</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">efd::NDId::uRef</a>(ndIDCpy), std::move(ndN)));</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">for</span> (std::string uS, vS; in &gt;&gt; uS &gt;&gt; vS;) {</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        uint32_t u = graph-&gt;getUId(uS);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        uint32_t v = graph-&gt;getUId(vS);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        graph-&gt;putEdge(u, v);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">return</span> graph;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a11a2cd37da32cf420b0adeb322872c7a">  139</a></span>&#160;std::unique_ptr&lt;efd::ArchGraph&gt; <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a11a2cd37da32cf420b0adeb322872c7a">efd::ArchGraph::Read</a>(std::string filepath) {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    std::ifstream in(filepath.c_str());</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">return</span> ReadFromIn(in);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a05d75e53d44cb045b88ad85abf4806a2">  144</a></span>&#160;std::unique_ptr&lt;efd::ArchGraph&gt; <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a05d75e53d44cb045b88ad85abf4806a2">efd::ArchGraph::ReadString</a>(std::string graphStr) {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    std::stringstream in(graphStr);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">return</span> ReadFromIn(in);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div><div class="ttc" id="classefd_1_1ArchGraph_xhtml_a32ca17290f67e79f38c1b591ca2c1257"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a32ca17290f67e79f38c1b591ca2c1257">efd::ArchGraph::reg_end</a></div><div class="ttdeci">RegsIterator reg_end()</div><div class="ttdoc">The end iterator for the mRegs. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00098">ArchGraph.cpp:98</a></div></div>
<div class="ttc" id="ArchGraph_8h_xhtml"><div class="ttname"><a href="../../d7/d9d/ArchGraph_8h.xhtml">ArchGraph.h</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a6307f3a9c6645e1fc1c0b5d5088fac48"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a6307f3a9c6645e1fc1c0b5d5088fac48">efd::ArchGraph::putVertex</a></div><div class="ttdeci">uint32_t putVertex(std::string s)</div><div class="ttdoc">Creates a string vertex and puts it in the vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00038">ArchGraph.cpp:38</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a05d75e53d44cb045b88ad85abf4806a2"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a05d75e53d44cb045b88ad85abf4806a2">efd::ArchGraph::ReadString</a></div><div class="ttdeci">static uRef ReadString(std::string graphStr)</div><div class="ttdoc">Parses the string graphStr into a ArchGraph representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00144">ArchGraph.cpp:144</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_af3487901a239a99750dc5dcdc3a8c868"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a></div><div class="ttdeci">void ExitWith(ExitCode e)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d72/Defs_8cpp_source.xhtml#l00045">Defs.cpp:45</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_aaf1aa97b8e0d1881e749264183b0b49f"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#aaf1aa97b8e0d1881e749264183b0b49f">efd::ArchGraph::vertexToString</a></div><div class="ttdeci">std::string vertexToString(uint32_t i) const override</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00012">ArchGraph.cpp:12</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a1388225779727295176780b9a68aedf2"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a1388225779727295176780b9a68aedf2">efd::ArchGraph::getNode</a></div><div class="ttdeci">Node::Ref getNode(uint32_t i) const</div><div class="ttdoc">Gets the node corresponding to the uid. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00029">ArchGraph.cpp:29</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_ab673c26004beaa75e2bb9c3a385af1be"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">efd::NDValue::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDValue &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00167">Nodes.h:167</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_ab7fb1e12dce31f495ef659d99e30b284"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#ab7fb1e12dce31f495ef659d99e30b284">efd::ArchGraph::hasSId</a></div><div class="ttdeci">bool hasSId(std::string s) const</div><div class="ttdoc">Returns true if this architecture has a vertex whose string representation is s. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00071">ArchGraph.cpp:71</a></div></div>
<div class="ttc" id="Defs_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00046">Defs.h:46</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a9a5504c22d41a2baf83e0f42aeb29fe3"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a9a5504c22d41a2baf83e0f42aeb29fe3">efd::ArchGraph::getSId</a></div><div class="ttdeci">std::string getSId(uint32_t i)</div><div class="ttdoc">Returns the std::string id of the vertex whose uid is i. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00075">ArchGraph.cpp:75</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a10786b155e3d2d397b9d94227080155a"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">efd::ArchGraph::isReverseEdge</a></div><div class="ttdeci">bool isReverseEdge(uint32_t i, uint32_t j)</div><div class="ttdoc">Returns true if the edge (i, j) is a reverse edge. i.e.: if (i, j) is not in the graph, but (j, i) is. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00084">ArchGraph.cpp:84</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml">efd::ArchGraph</a></div><div class="ttdoc">This is the base class for the architectures that this project will be supporting. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d9d/ArchGraph_8h_source.xhtml#l00010">ArchGraph.h:10</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_abc7ce53293b8ebcaea5e69f15da1091c"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#abc7ce53293b8ebcaea5e69f15da1091c">efd::ArchGraph::isGeneric</a></div><div class="ttdeci">bool isGeneric()</div><div class="ttdoc">Returns true if this is a generic architechture graph, i.e.: it was not created by any of the archite...</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00090">ArchGraph.cpp:90</a></div></div>
<div class="ttc" id="Nodes_8h_xhtml"><div class="ttname"><a href="../../d4/daf/Nodes_8h.xhtml">Nodes.h</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_ad8d5dcc8e2d83251b4263f6e8eea5893"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#ad8d5dcc8e2d83251b4263f6e8eea5893">efd::ArchGraph::ArchGraph</a></div><div class="ttdeci">ArchGraph(uint32_t n, bool isGeneric=true)</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00009">ArchGraph.cpp:9</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_a9407354bbb835d0daffbeb30cafc1076"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a9407354bbb835d0daffbeb30cafc1076">efd::NDIdRef::Create</a></div><div class="ttdeci">static uRef Create(NDId::uRef idNode, NDInt::uRef nNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00330">Nodes.cpp:330</a></div></div>
<div class="ttc" id="RTTI_8h_xhtml"><div class="ttname"><a href="../../d5/dfc/RTTI_8h.xhtml">RTTI.h</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a0481cd8304cd18c5708e67244e754723"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a0481cd8304cd18c5708e67244e754723">efd::ArchGraph::reg_begin</a></div><div class="ttdeci">RegsIterator reg_begin()</div><div class="ttdoc">The begin iterator for the mRegs. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00094">ArchGraph.cpp:94</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a494a2123de6024d1057cf773acda5f25"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; Node &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00042">Nodes.h:42</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node</a></div><div class="ttdoc">Base class for AST nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00039">Nodes.h:39</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a6110c8ecd0e526ac1abd977e43602bd5"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a6110c8ecd0e526ac1abd977e43602bd5">efd::ArchGraph::Create</a></div><div class="ttdeci">static uRef Create(uint32_t n)</div><div class="ttdoc">Encapsulates the creation of a new ArchGraph. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00106">ArchGraph.cpp:106</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">efd::ExitCode::EXIT_unknown_resource</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a2be2f9183df2a3ae539dd406f8bb2d2a"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a2be2f9183df2a3ae539dd406f8bb2d2a">efd::ArchGraph::putReg</a></div><div class="ttdeci">void putReg(std::string id, std::string size)</div><div class="ttdoc">Register the register. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00059">ArchGraph.cpp:59</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a79ecc16e7d47295f6830503a2ddabceb"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a79ecc16e7d47295f6830503a2ddabceb">efd::ArchGraph::RegsIterator</a></div><div class="ttdeci">RegsVector::iterator RegsIterator</div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d9d/ArchGraph_8h_source.xhtml#l00017">ArchGraph.h:17</a></div></div>
<div class="ttc" id="classefd_1_1Graph_xhtml"><div class="ttname"><a href="../../db/db3/classefd_1_1Graph.xhtml">efd::Graph</a></div><div class="ttdoc">Graph representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d16/Graph_8h_source.xhtml#l00011">Graph.h:11</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a11a2cd37da32cf420b0adeb322872c7a"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a11a2cd37da32cf420b0adeb322872c7a">efd::ArchGraph::Read</a></div><div class="ttdeci">static uRef Read(std::string filepath)</div><div class="ttdoc">Parses the file filename into a ArchGraph representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00139">ArchGraph.cpp:139</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a197c4183cb9e9127161a8944206c3ca6"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a197c4183cb9e9127161a8944206c3ca6">efd::ArchGraph::getUId</a></div><div class="ttdeci">uint32_t getUId(std::string s)</div><div class="ttdoc">Returns the uint32_t id of the vertex s. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00063">ArchGraph.cpp:63</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a7cf58cb9879075429767278732460480"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a7cf58cb9879075429767278732460480">efd::ArchGraph::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Graph *g)</div><div class="ttdoc">Returns true if g is of this type. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00102">ArchGraph.cpp:102</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">efd::ExitCode::EXIT_unreachable</a></div></div>
<div class="ttc" id="Defs_8h_xhtml"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml">Defs.h</a></div></div>
<div class="ttc" id="classefd_1_1Graph_xhtml_a731fcd6c93e77379a962cdb3016c37c5"><div class="ttname"><a href="../../db/db3/classefd_1_1Graph.xhtml#a731fcd6c93e77379a962cdb3016c37c5">efd::Graph::isArch</a></div><div class="ttdeci">bool isArch() const</div><div class="ttdoc">Returns true if this is an architecture graph. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/dea/Graph_8cpp_source.xhtml#l00076">Graph.cpp:76</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a76fb98cd4a35566d53c2f0513c5d12d1"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml#a76fb98cd4a35566d53c2f0513c5d12d1">std::to_string</a></div><div class="ttdeci">string to_string(efd::EnumString&lt; T, first, last &gt; &amp;val)</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00053">EnumString.h:53</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_a96ab9dcd008523aa2f4cfc2eb95d7178"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#a96ab9dcd008523aa2f4cfc2eb95d7178">efd::NDValue::Create</a></div><div class="ttdeci">static uRef Create(T val)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l01055">Nodes.h:1055</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:34 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
