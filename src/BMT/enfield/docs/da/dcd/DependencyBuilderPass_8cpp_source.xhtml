<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Transform/DependencyBuilderPass.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_582f290f049f08c25ab9fc887a9170ac.xhtml">Transform</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">DependencyBuilderPass.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../da/dcd/DependencyBuilderPass_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d9/dcf/DependencyBuilderPass_8h.xhtml">enfield/Transform/DependencyBuilderPass.h</a>&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../db/d82/PassCache_8h.xhtml">enfield/Transform/PassCache.h</a>&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d0/d8d/NodeVisitor_8h.xhtml">enfield/Analysis/NodeVisitor.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d5/dfc/RTTI_8h.xhtml">enfield/Support/RTTI.h</a>&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d1/d73/Defs_8h.xhtml">enfield/Support/Defs.h</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// --------------------- Dependencies ------------------------</span></div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a5c78bf4763aeb36f8dd32b35fd99bca8">   10</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a5c78bf4763aeb36f8dd32b35fd99bca8">efd::Dependencies::empty</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a8095a13dbb497fcb3cc56c8bcdb135f9">mDeps</a>.empty();</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;}</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a774330d9946ed2211aa8222a7e2453a4">   14</a></span>&#160;uint32_t <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a774330d9946ed2211aa8222a7e2453a4">efd::Dependencies::size</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <span class="keywordflow">return</span> mDeps.size();</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;}</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a0d1f055b604077006d2af6d9e9fd0822">   18</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml">efd::Dep</a>&amp; <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a0d1f055b604077006d2af6d9e9fd0822">efd::Dependencies::operator[]</a>(uint32_t i)<span class="keyword"> const </span>{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keywordflow">return</span> mDeps[i];</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;}</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a44ff7c580f8709701e476adb60daa220">   22</a></span>&#160;<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml">efd::Dep</a>&amp; <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a0d1f055b604077006d2af6d9e9fd0822">efd::Dependencies::operator[]</a>(uint32_t i) {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keywordflow">return</span> mDeps[i];</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;}</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="../../d1/dca/structefd_1_1Dependencies.xhtml#aa88c693b842064ffd3a4637cdbf8daa5">   26</a></span>&#160;<a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a00a96a50f1546251bb49613ffe9c8660">efd::Dependencies::Iterator</a> <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#aa88c693b842064ffd3a4637cdbf8daa5">efd::Dependencies::begin</a>() {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordflow">return</span> mDeps.begin();</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a6562984dc45feff23766064b3e4e15d7">   30</a></span>&#160;<a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#acee568782ee29435d94bb346a4e77f4e">efd::Dependencies::ConstIterator</a> <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#aa88c693b842064ffd3a4637cdbf8daa5">efd::Dependencies::begin</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">return</span> mDeps.begin();</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a4f94f7a8da158d09588f90c197f61521">   34</a></span>&#160;<a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a00a96a50f1546251bb49613ffe9c8660">efd::Dependencies::Iterator</a> <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a4f94f7a8da158d09588f90c197f61521">efd::Dependencies::end</a>() {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">return</span> mDeps.end();</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a571f723ba0bac0a9804944eda51b7f65">   38</a></span>&#160;<a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#acee568782ee29435d94bb346a4e77f4e">efd::Dependencies::ConstIterator</a> <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a4f94f7a8da158d09588f90c197f61521">efd::Dependencies::end</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">return</span> mDeps.end();</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">// --------------------- DependencyBuilder ------------------------</span></div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a226aa97b6050be812e3e1428edc1b3e2">   43</a></span>&#160;<a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a226aa97b6050be812e3e1428edc1b3e2">efd::DependencyBuilder::DependencyBuilder</a>() {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a270909cecb1317ad9cafa912aa4c34aa">   46</a></span>&#160;uint32_t <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a270909cecb1317ad9cafa912aa4c34aa">efd::DependencyBuilder::getUId</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref, <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> gate) {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    std::string _id = ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">return</span> mXbitToNumber.getQUId(_id, gate);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a64a1362f6fe60ee5a90c58d9f3143681">efd::DependencyBuilder::DepsVector</a>* <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#acd167ed2400c9a758a6b58aa472f9334">efd::DependencyBuilder::getDepsVector</a></div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#acd167ed2400c9a758a6b58aa472f9334">   52</a></span>&#160;(<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> gate) <span class="keyword">const</span> {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a64a1362f6fe60ee5a90c58d9f3143681">DepsVector</a>* deps = &amp;mGDeps;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">if</span> (gate != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordflow">if</span> (mLDeps.find(gate) == mLDeps.end()) {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">efd::ERR</a> &lt;&lt; <span class="stringliteral">&quot;No dependencies for this gate: `&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                &lt;&lt; gate-&gt;<a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">getId</a>()-&gt;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">getVal</a>() &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">efd::ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        deps = &amp;mLDeps.at(gate);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">return</span> deps;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a64a1362f6fe60ee5a90c58d9f3143681">efd::DependencyBuilder::DepsVector</a>* <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#acd167ed2400c9a758a6b58aa472f9334">efd::DependencyBuilder::getDepsVector</a></div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a5c4aa324696a8b01638fee1fbae21add">   69</a></span>&#160;(<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> gate) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">const_cast&lt;</span><a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a64a1362f6fe60ee5a90c58d9f3143681">DepsVector</a>*<span class="keyword">&gt;</span>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml">DependencyBuilder</a>*<span class="keyword">&gt;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            (<span class="keyword">this</span>)-&gt;getDepsVector(gate));</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a7e5498e4b9be314cc5c499541eda51d8">   74</a></span>&#160;<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml">efd::XbitToNumber</a>&amp; <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a7e5498e4b9be314cc5c499541eda51d8">efd::DependencyBuilder::getXbitToNumber</a>() {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">return</span> mXbitToNumber;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a0550349253bade61f466f9fcb855c5a0">   78</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a0550349253bade61f466f9fcb855c5a0">efd::DependencyBuilder::setXbitToNumber</a>(<a class="code" href="../../db/d0c/structefd_1_1XbitToNumber.xhtml">efd::XbitToNumber</a>&amp; xtn) {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    mXbitToNumber = xtn;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a64a1362f6fe60ee5a90c58d9f3143681">efd::DependencyBuilder::DepsVector</a>&amp; <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a5e2b814aaeb7862bda114ca10e26ace0">efd::DependencyBuilder::getDependencies</a></div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a5e2b814aaeb7862bda114ca10e26ace0">   83</a></span>&#160;(<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> ref) <span class="keyword">const</span> {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a64a1362f6fe60ee5a90c58d9f3143681">DepsVector</a>* deps = <span class="keyword">const_cast&lt;</span><a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a64a1362f6fe60ee5a90c58d9f3143681">DepsVector</a>*<span class="keyword">&gt;</span>(getDepsVector(ref));</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">return</span> *deps;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a64a1362f6fe60ee5a90c58d9f3143681">efd::DependencyBuilder::DepsVector</a>&amp; <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a5e2b814aaeb7862bda114ca10e26ace0">efd::DependencyBuilder::getDependencies</a></div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a78abb0d38a0daf64af398685350efaaf">   89</a></span>&#160;(<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> ref) {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">return</span> *getDepsVector(ref);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a1dd2f459d6b2107cc199d697e9ecffdb">   93</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml">efd::Dependencies</a> <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a1dd2f459d6b2107cc199d697e9ecffdb">efd::DependencyBuilder::getDeps</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* ref)<span class="keyword"> const </span>{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">if</span> (mIDeps.find(ref) == mIDeps.end()) {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        std::string refStr = (ref == <span class="keyword">nullptr</span>) ? <span class="stringliteral">&quot;nullptr&quot;</span> : ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>(<span class="keyword">false</span>);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">efd::ERR</a> &lt;&lt; <span class="stringliteral">&quot;Instruction never seen before: `&quot;</span> &lt;&lt; refStr &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">efd::ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">return</span> mIDeps.at(ref);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a983d11adaea7f3f7c01bfc42fa0c17c3">  103</a></span>&#160;<a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml">efd::Dependencies</a> <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a1dd2f459d6b2107cc199d697e9ecffdb">efd::DependencyBuilder::getDeps</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* ref) {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">if</span> (mIDeps.find(ref) == mIDeps.end())</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        mIDeps[ref] = { {}, ref };</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">return</span> mIDeps.at(ref);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">// --------------------- DependencyBuilderWrapperPass ------------------------</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;uint8_t <a class="code" href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml#a97226982dc6b46ce06af4f4012d53e11">efd::DependencyBuilderWrapperPass::ID</a> = 0;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a> {</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml">  113</a></span>&#160;    <span class="keyword">class </span><a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml">DependencyBuilderVisitor</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor</a> {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keyword">private</span>:</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>&amp; mMod;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml">DependencyBuilder</a>&amp; mDepBuilder;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> getParentGate(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#aa74c5d9fa5d1a61e816406a12e56faae">  123</a></span>&#160;            <a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#aa74c5d9fa5d1a61e816406a12e56faae">DependencyBuilderVisitor</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule</a>&amp; qmod, <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml">DependencyBuilder</a>&amp; dep)</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                : mMod(qmod), mDepBuilder(dep) {}</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a6977e524c57090e1857ae75415347048">visit</a>(<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a6977e524c57090e1857ae75415347048">visit</a>(<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">NDQOpCX::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a6977e524c57090e1857ae75415347048">visit</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a6977e524c57090e1857ae75415347048">visit</a>(<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a6977e524c57090e1857ae75415347048">visit</a>(<a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml">NDGOpList::Ref</a> ref) <span class="keyword">override</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    };</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">efd::NDGateDecl::Ref</a> efd::DependencyBuilderVisitor::getParentGate(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Node::Ref</a> ref) {</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a9ad4e117b79b53f5194cae9d47e1a10b">NDGOpList::Ref</a> goplist = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">if</span> (<span class="keyword">auto</span> ifstmt = dynCast&lt;NDIfStmt&gt;(ref-&gt;getParent())) {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        goplist = dynCast&lt;NDGOpList&gt;(ifstmt-&gt;getParent());</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        goplist = dynCast&lt;NDGOpList&gt;(ref-&gt;getParent());</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">if</span> (goplist == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keyword">auto</span> gate = dynCast&lt;NDGateDecl&gt;(goplist-&gt;getParent());</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">if</span> (gate == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">efd::ERR</a> &lt;&lt; <span class="stringliteral">&quot;NDGOpList is owned by a no node.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">efd::ExitCode::EXIT_unreachable</a>);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">return</span> gate;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;}</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a6977e524c57090e1857ae75415347048">  157</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a6977e524c57090e1857ae75415347048">efd::DependencyBuilderVisitor::visit</a>(<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> ref) {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    mDepBuilder.mLDeps[ref] = <a class="code" href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a64a1362f6fe60ee5a90c58d9f3143681">DependencyBuilder::DepsVector</a>();</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    visitChildren(ref);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#aa704695baca1d4796ae1ba190812edd7">  162</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a6977e524c57090e1857ae75415347048">efd::DependencyBuilderVisitor::visit</a>(<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">NDQOpCX::Ref</a> ref) {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keyword">auto</span> gate = getParentGate(ref);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keyword">auto</span> deps = mDepBuilder.getDepsVector(gate);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="comment">// CX controlQ, invertQ;</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    uint32_t controlQ = mDepBuilder.getUId(ref-&gt;<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#aebb2d70f1197065d1b127c2925dd33e6">getLhs</a>(), gate);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    uint32_t invertQ = mDepBuilder.getUId(ref-&gt;<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a7b526a26be080f963c70e7001b7e9ff5">getRhs</a>(), gate);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml">Dependencies</a> depV { { <a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml">Dep</a> { controlQ, invertQ } }, ref };</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    deps-&gt;push_back(depV);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    mDepBuilder.mIDeps[ref] = depV;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;}</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a13546214c130f15585bb62dfcfd6d884">  176</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a6977e524c57090e1857ae75415347048">efd::DependencyBuilderVisitor::visit</a>(<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen::Ref</a> ref) {</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="comment">// Single qbit gate.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">if</span> (ref-&gt;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>()-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">getChildNumber</a>() == 1) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keyword">auto</span> gate = getParentGate(ref);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keyword">auto</span> deps = mDepBuilder.getDepsVector(gate);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="comment">// Getting the qargs uint32_t representations.</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    std::vector&lt;uint32_t&gt; uidVector;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; childRef : *ref-&gt;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>())</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        uidVector.push_back(mDepBuilder.getUId(childRef.get(), gate));</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="comment">// Getting the gate declaration node.</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> node = mMod.getQGate(ref-&gt;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">getId</a>()-&gt;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">getVal</a>());</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl::Ref</a> gRef = dynCast&lt;NDGateDecl&gt;(node);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">if</span> (gRef == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        std::string nodeStr = (node == <span class="keyword">nullptr</span>) ? <span class="stringliteral">&quot;nullptr&quot;</span> : node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>(<span class="keyword">false</span>);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">efd::ERR</a> &lt;&lt; <span class="stringliteral">&quot;There is no quantum gate with this id: `&quot;</span> &lt;&lt; nodeStr &lt;&lt; <span class="stringliteral">&quot;`.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">efd::ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keyword">auto</span>&amp; gDeps = mDepBuilder.mLDeps[gRef];</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml">Dependencies</a> thisDeps { {}, ref };</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="comment">// For every qarg uint32_t representation</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> parallelDeps : gDeps) {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> dep : parallelDeps) {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="comment">// Getting the uid&#39;s of the qubit interaction (u, v)</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            uint32_t u = uidVector[dep.mFrom];</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            uint32_t v = uidVector[dep.mTo];</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            thisDeps.mDeps.push_back(<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml">Dep</a> { u, v });</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    }</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">if</span> (!thisDeps.empty())</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        deps-&gt;push_back(thisDeps);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    mDepBuilder.mIDeps[ref] = thisDeps;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;}</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a67fdf1cb1dc7e3a23f15a92cda4c8425">  215</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a6977e524c57090e1857ae75415347048">efd::DependencyBuilderVisitor::visit</a>(<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt::Ref</a> ref) {</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    mDepBuilder.mIDeps[ref] = <a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml">Dependencies</a>();</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    visitChildren(ref);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;}</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a5d836511889f18e11fe3977c762e2024">  220</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a6977e524c57090e1857ae75415347048">efd::DependencyBuilderVisitor::visit</a>(<a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml">NDGOpList::Ref</a> ref) {</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    visitChildren(ref);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml#ae41382a6ee29c5ca91a2dc121e315793">  224</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml#ae41382a6ee29c5ca91a2dc121e315793">efd::DependencyBuilderWrapperPass::run</a>(<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml">QModule::Ref</a> qmod) {</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    mData.mLDeps.clear();</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    mData.mGDeps.clear();</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    mData.mIDeps.clear();</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">auto</span> xtn = PassCache::Get&lt;XbitToNumberWrapperPass&gt;(qmod);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keyword">auto</span> data = xtn-&gt;getData();</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    mData.setXbitToNumber(data);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <a class="code" href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml">DependencyBuilderVisitor</a> visitor(*qmod, mData);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#af560135001f7e189109fdd5330f1908f">gates_begin</a>(), e = qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a674bb9ce9b51f508600c30ad781d8af3">gates_end</a>(); it != e; ++it) {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        (*it)-&gt;apply(&amp;visitor);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    }</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">stmt_begin</a>(), e = qmod-&gt;<a class="code" href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">stmt_end</a>(); it != e; ++it) {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        (*it)-&gt;apply(&amp;visitor);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    }</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;}</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml#a67450aaa55ea88c8e01fae54143bc92d">  245</a></span>&#160;<a class="code" href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml#af8c10dc71ce91fa68e33fab32e4aa9c8">efd::DependencyBuilderWrapperPass::uRef</a> <a class="code" href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml#a67450aaa55ea88c8e01fae54143bc92d">efd::DependencyBuilderWrapperPass::Create</a>() {</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml#af8c10dc71ce91fa68e33fab32e4aa9c8">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml">DependencyBuilderWrapperPass</a>());</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;}</div><div class="ttc" id="classefd_1_1NodeVisitor_xhtml"><div class="ttname"><a href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">efd::NodeVisitor</a></div><div class="ttdoc">Interface class to be used as a visitor. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d8d/NodeVisitor_8h_source.xhtml#l00009">NodeVisitor.h:9</a></div></div>
<div class="ttc" id="structefd_1_1Dep_xhtml"><div class="ttname"><a href="../../d9/d38/structefd_1_1Dep.xhtml">efd::Dep</a></div><div class="ttdoc">Structure for abstracting dependencies. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00017">DependencyBuilderPass.h:17</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_af3487901a239a99750dc5dcdc3a8c868"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a></div><div class="ttdeci">void ExitWith(ExitCode e)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d72/Defs_8cpp_source.xhtml#l00045">Defs.cpp:45</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a674bb9ce9b51f508600c30ad781d8af3"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a674bb9ce9b51f508600c30ad781d8af3">efd::QModule::gates_end</a></div><div class="ttdeci">GateIterator gates_end()</div><div class="ttdoc">Iterator to the end of the gate declaration node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00210">QModule.cpp:210</a></div></div>
<div class="ttc" id="DependencyBuilderPass_8h_xhtml"><div class="ttname"><a href="../../d9/dcf/DependencyBuilderPass_8h.xhtml">DependencyBuilderPass.h</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_a774330d9946ed2211aa8222a7e2453a4"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#a774330d9946ed2211aa8222a7e2453a4">efd::Dependencies::size</a></div><div class="ttdeci">uint32_t size() const</div><div class="ttdoc">Forwards to the mDeps attribute. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00014">DependencyBuilderPass.cpp:14</a></div></div>
<div class="ttc" id="structefd_1_1DependencyBuilder_xhtml_a5e2b814aaeb7862bda114ca10e26ace0"><div class="ttname"><a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a5e2b814aaeb7862bda114ca10e26ace0">efd::DependencyBuilder::getDependencies</a></div><div class="ttdeci">const DepsVector &amp; getDependencies(NDGateDecl::Ref ref=nullptr) const</div><div class="ttdoc">Gets the dependencies for some gate declaration. If it is a nullptr, then it is returned the dependen...</div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00083">DependencyBuilderPass.cpp:83</a></div></div>
<div class="ttc" id="Defs_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00046">Defs.h:46</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_a8095a13dbb497fcb3cc56c8bcdb135f9"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#a8095a13dbb497fcb3cc56c8bcdb135f9">efd::Dependencies::mDeps</a></div><div class="ttdeci">std::vector&lt; Dep &gt; mDeps</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00028">DependencyBuilderPass.h:28</a></div></div>
<div class="ttc" id="classefd_1_1NDGOpList_xhtml_a9ad4e117b79b53f5194cae9d47e1a10b"><div class="ttname"><a href="../../da/d14/classefd_1_1NDGOpList.xhtml#a9ad4e117b79b53f5194cae9d47e1a10b">efd::NDGOpList::Ref</a></div><div class="ttdeci">NDGOpList * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00401">Nodes.h:401</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">efd::NDQOpGen</a></div><div class="ttdoc">NDQOp specialized for generic gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00930">Nodes.h:930</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_a0d1f055b604077006d2af6d9e9fd0822"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#a0d1f055b604077006d2af6d9e9fd0822">efd::Dependencies::operator[]</a></div><div class="ttdeci">const Dep &amp; operator[](uint32_t i) const</div><div class="ttdoc">Forwards to the mDeps attribute. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00018">DependencyBuilderPass.cpp:18</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_af560135001f7e189109fdd5330f1908f"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#af560135001f7e189109fdd5330f1908f">efd::QModule::gates_begin</a></div><div class="ttdeci">GateIterator gates_begin()</div><div class="ttdoc">Iterator to the beginning of the gate declaration node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00202">QModule.cpp:202</a></div></div>
<div class="ttc" id="structefd_1_1DependencyBuilder_xhtml_a64a1362f6fe60ee5a90c58d9f3143681"><div class="ttname"><a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a64a1362f6fe60ee5a90c58d9f3143681">efd::DependencyBuilder::DepsVector</a></div><div class="ttdeci">std::vector&lt; Dependencies &gt; DepsVector</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00060">DependencyBuilderPass.h:60</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml">efd::Dependencies</a></div><div class="ttdoc">Represents a sequence of dependencies (should be treated as parallel dependencies) for each node...</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00024">DependencyBuilderPass.h:24</a></div></div>
<div class="ttc" id="structefd_1_1DependencyBuilder_xhtml_a1dd2f459d6b2107cc199d697e9ecffdb"><div class="ttname"><a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a1dd2f459d6b2107cc199d697e9ecffdb">efd::DependencyBuilder::getDeps</a></div><div class="ttdeci">const Dependencies getDeps(Node *ref) const</div><div class="ttdoc">Gets the dependencies for a specific instruction. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00093">DependencyBuilderPass.cpp:93</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_a23d45e3b6c65d5fa14b199da8b0617c7"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#a23d45e3b6c65d5fa14b199da8b0617c7">efd::QModule::stmt_end</a></div><div class="ttdeci">Iterator stmt_end()</div><div class="ttdoc">Iterator to the end of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00226">QModule.cpp:226</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml">efd::QModule</a></div><div class="ttdoc">Qasm module representation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d73/QModule_8h_source.xhtml#l00013">QModule.h:13</a></div></div>
<div class="ttc" id="classefd_1_1DependencyBuilderWrapperPass_xhtml"><div class="ttname"><a href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml">efd::DependencyBuilderWrapperPass</a></div><div class="ttdoc">WrapperPass that yields a DependencyBuilder structure. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00093">DependencyBuilderPass.h:93</a></div></div>
<div class="ttc" id="structefd_1_1DependencyBuilder_xhtml"><div class="ttname"><a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml">efd::DependencyBuilder</a></div><div class="ttdoc">Keep track of the dependencies of each qbit for the whole program, as well as the dependencies for ev...</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00058">DependencyBuilderPass.h:58</a></div></div>
<div class="ttc" id="structefd_1_1XbitToNumber_xhtml"><div class="ttname"><a href="../../db/d0c/structefd_1_1XbitToNumber.xhtml">efd::XbitToNumber</a></div><div class="ttdoc">Maps every quantum and classic bit (not register) to a number inside a vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d94/XbitToNumberPass_8h_source.xhtml#l00023">XbitToNumberPass.h:23</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d6e/Architectures_8cpp_source.xhtml#l00005">Architectures.cpp:5</a></div></div>
<div class="ttc" id="RTTI_8h_xhtml"><div class="ttname"><a href="../../d5/dfc/RTTI_8h.xhtml">RTTI.h</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a96ca13a5c2b971b68619ce4a34be0f66"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">efd::Node::toString</a></div><div class="ttdeci">virtual std::string toString(bool pretty=false) const =0</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a64f9421919034b63bbf5b014c2de4130"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">efd::Node::Ref</a></div><div class="ttdeci">Node * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00041">Nodes.h:41</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_acee568782ee29435d94bb346a4e77f4e"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#acee568782ee29435d94bb346a4e77f4e">efd::Dependencies::ConstIterator</a></div><div class="ttdeci">std::vector&lt; Dep &gt;::const_iterator ConstIterator</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00026">DependencyBuilderPass.h:26</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a7d1b691a45689241a8138539a2be8596"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">efd::NDList::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00410">Nodes.cpp:410</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_aa88c693b842064ffd3a4637cdbf8daa5"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#aa88c693b842064ffd3a4637cdbf8daa5">efd::Dependencies::begin</a></div><div class="ttdeci">Iterator begin()</div><div class="ttdoc">Forwards to the mDeps attribute. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00026">DependencyBuilderPass.cpp:26</a></div></div>
<div class="ttc" id="structefd_1_1DependencyBuilder_xhtml_a0550349253bade61f466f9fcb855c5a0"><div class="ttname"><a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a0550349253bade61f466f9fcb855c5a0">efd::DependencyBuilder::setXbitToNumber</a></div><div class="ttdeci">void setXbitToNumber(XbitToNumber &amp;xtn)</div><div class="ttdoc">Sets the structure that will map the qbits. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00078">DependencyBuilderPass.cpp:78</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_a00a96a50f1546251bb49613ffe9c8660"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#a00a96a50f1546251bb49613ffe9c8660">efd::Dependencies::Iterator</a></div><div class="ttdeci">std::vector&lt; Dep &gt;::iterator Iterator</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00025">DependencyBuilderPass.h:25</a></div></div>
<div class="ttc" id="classefd_1_1NDDecl_xhtml_a34957c2122c38cebf80a264d5fa3863f"><div class="ttname"><a href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">efd::NDDecl::getId</a></div><div class="ttdeci">NDId::Ref getId() const</div><div class="ttdoc">Gets the id node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00186">Nodes.cpp:186</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node</a></div><div class="ttdoc">Base class for AST nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00039">Nodes.h:39</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">efd::NDGateDecl</a></div><div class="ttdoc">Node for declaration of quantum gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00543">Nodes.h:543</a></div></div>
<div class="ttc" id="NodeVisitor_8h_xhtml"><div class="ttname"><a href="../../d0/d8d/NodeVisitor_8h.xhtml">NodeVisitor.h</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_a4f94f7a8da158d09588f90c197f61521"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#a4f94f7a8da158d09588f90c197f61521">efd::Dependencies::end</a></div><div class="ttdeci">Iterator end()</div><div class="ttdoc">Forwards to the mDeps attribute. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00034">DependencyBuilderPass.cpp:34</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_a53ee724a8db3429bf30bb1936ad548b2"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#a53ee724a8db3429bf30bb1936ad548b2">efd::NDValue::getVal</a></div><div class="ttdeci">T getVal() const</div><div class="ttdoc">Returns a copy to the setted value. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l01023">Nodes.h:1023</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">efd::NDIfStmt</a></div><div class="ttdoc">Node for conditional statement. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00968">Nodes.h:968</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_a7b526a26be080f963c70e7001b7e9ff5"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a7b526a26be080f963c70e7001b7e9ff5">efd::NDQOpCX::getRhs</a></div><div class="ttdeci">Node::Ref getRhs() const</div><div class="ttdoc">Gets the right hand side of the gate. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01110">Nodes.cpp:1110</a></div></div>
<div class="ttc" id="structefd_1_1DependencyBuilder_xhtml_a270909cecb1317ad9cafa912aa4c34aa"><div class="ttname"><a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a270909cecb1317ad9cafa912aa4c34aa">efd::DependencyBuilder::getUId</a></div><div class="ttdeci">uint32_t getUId(Node::Ref ref, NDGateDecl::Ref gate)</div><div class="ttdoc">Gets an unsingned id for ref. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00046">DependencyBuilderPass.cpp:46</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">efd::ExitCode::EXIT_unknown_resource</a></div></div>
<div class="ttc" id="classefd_1_1DependencyBuilderWrapperPass_xhtml_a97226982dc6b46ce06af4f4012d53e11"><div class="ttname"><a href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml#a97226982dc6b46ce06af4f4012d53e11">efd::DependencyBuilderWrapperPass::ID</a></div><div class="ttdeci">static uint8_t ID</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00099">DependencyBuilderPass.h:99</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_aebb2d70f1197065d1b127c2925dd33e6"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#aebb2d70f1197065d1b127c2925dd33e6">efd::NDQOpCX::getLhs</a></div><div class="ttdeci">Node::Ref getLhs() const</div><div class="ttdoc">Gets the left hand side of the gate. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01102">Nodes.cpp:1102</a></div></div>
<div class="ttc" id="PassCache_8h_xhtml"><div class="ttname"><a href="../../db/d82/PassCache_8h.xhtml">PassCache.h</a></div></div>
<div class="ttc" id="structefd_1_1DependencyBuilder_xhtml_a7e5498e4b9be314cc5c499541eda51d8"><div class="ttname"><a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a7e5498e4b9be314cc5c499541eda51d8">efd::DependencyBuilder::getXbitToNumber</a></div><div class="ttdeci">XbitToNumber &amp; getXbitToNumber()</div><div class="ttdoc">Returns the structure that mapped the qbits. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00074">DependencyBuilderPass.cpp:74</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_af7ef43289355c5bb047a46419177c8ed"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">efd::NDQOp::getQArgs</a></div><div class="ttdeci">NDList::Ref getQArgs() const</div><div class="ttdoc">Gets the quantum arguments. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00909">Nodes.cpp:909</a></div></div>
<div class="ttc" id="structefd_1_1DependencyBuilder_xhtml_acd167ed2400c9a758a6b58aa472f9334"><div class="ttname"><a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#acd167ed2400c9a758a6b58aa472f9334">efd::DependencyBuilder::getDepsVector</a></div><div class="ttdeci">const DepsVector * getDepsVector(NDGateDecl::Ref gate=nullptr) const</div><div class="ttdoc">Gets the DepsVector corresponding to the current quantum gate, or the global (if current gate is null...</div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00052">DependencyBuilderPass.cpp:52</a></div></div>
<div class="ttc" id="classefd_1_1DependencyBuilderWrapperPass_xhtml_a67450aaa55ea88c8e01fae54143bc92d"><div class="ttname"><a href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml#a67450aaa55ea88c8e01fae54143bc92d">efd::DependencyBuilderWrapperPass::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdoc">Returns a new instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00245">DependencyBuilderPass.cpp:245</a></div></div>
<div class="ttc" id="classefd_1_1NDGOpList_xhtml"><div class="ttname"><a href="../../da/d14/classefd_1_1NDGOpList.xhtml">efd::NDGOpList</a></div><div class="ttdoc">Node for list of qubit operation sequences inside gate declarations. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00399">Nodes.h:399</a></div></div>
<div class="ttc" id="classefd_1_1DependencyBuilderVisitor_xhtml_a6977e524c57090e1857ae75415347048"><div class="ttname"><a href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#a6977e524c57090e1857ae75415347048">efd::DependencyBuilderVisitor::visit</a></div><div class="ttdeci">void visit(NDGateDecl::Ref ref) override</div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00157">DependencyBuilderPass.cpp:157</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_a5c78bf4763aeb36f8dd32b35fd99bca8"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#a5c78bf4763aeb36f8dd32b35fd99bca8">efd::Dependencies::empty</a></div><div class="ttdeci">bool empty() const</div><div class="ttdoc">Forwards to the mDeps attribute. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00010">DependencyBuilderPass.cpp:10</a></div></div>
<div class="ttc" id="structefd_1_1DependencyBuilder_xhtml_a226aa97b6050be812e3e1428edc1b3e2"><div class="ttname"><a href="../../d1/d76/structefd_1_1DependencyBuilder.xhtml#a226aa97b6050be812e3e1428edc1b3e2">efd::DependencyBuilder::DependencyBuilder</a></div><div class="ttdeci">DependencyBuilder()</div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00043">DependencyBuilderPass.cpp:43</a></div></div>
<div class="ttc" id="classefd_1_1QModule_xhtml_ac00e1eb93f94c00db1e6a661d8f95d9d"><div class="ttname"><a href="../../dd/d52/classefd_1_1QModule.xhtml#ac00e1eb93f94c00db1e6a661d8f95d9d">efd::QModule::stmt_begin</a></div><div class="ttdeci">Iterator stmt_begin()</div><div class="ttdoc">Iterator to the beginning of the statement node vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d5d/QModule_8cpp_source.xhtml#l00218">QModule.cpp:218</a></div></div>
<div class="ttc" id="classefd_1_1DependencyBuilderWrapperPass_xhtml_af8c10dc71ce91fa68e33fab32e4aa9c8"><div class="ttname"><a href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml#af8c10dc71ce91fa68e33fab32e4aa9c8">efd::DependencyBuilderWrapperPass::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; DependencyBuilderWrapperPass &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00096">DependencyBuilderPass.h:96</a></div></div>
<div class="ttc" id="classefd_1_1DependencyBuilderVisitor_xhtml_aa74c5d9fa5d1a61e816406a12e56faae"><div class="ttname"><a href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml#aa74c5d9fa5d1a61e816406a12e56faae">efd::DependencyBuilderVisitor::DependencyBuilderVisitor</a></div><div class="ttdeci">DependencyBuilderVisitor(QModule &amp;qmod, DependencyBuilder &amp;dep)</div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00123">DependencyBuilderPass.cpp:123</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">efd::ExitCode::EXIT_unreachable</a></div></div>
<div class="ttc" id="classefd_1_1DependencyBuilderWrapperPass_xhtml_ae41382a6ee29c5ca91a2dc121e315793"><div class="ttname"><a href="../../d1/d06/classefd_1_1DependencyBuilderWrapperPass.xhtml#ae41382a6ee29c5ca91a2dc121e315793">efd::DependencyBuilderWrapperPass::run</a></div><div class="ttdeci">bool run(QModule::Ref qmod) override</div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00224">DependencyBuilderPass.cpp:224</a></div></div>
<div class="ttc" id="Defs_8h_xhtml"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml">Defs.h</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">efd::NDQOpCX</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00744">Nodes.h:744</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_aa9d90f493865fe9cdc3fecd468eaa33b"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">efd::NDQOp::getId</a></div><div class="ttdeci">NDId::Ref getId() const</div><div class="ttdoc">Gets the id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00893">Nodes.cpp:893</a></div></div>
<div class="ttc" id="classefd_1_1DependencyBuilderVisitor_xhtml"><div class="ttname"><a href="../../df/de5/classefd_1_1DependencyBuilderVisitor.xhtml">efd::DependencyBuilderVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00113">DependencyBuilderPass.cpp:113</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:35 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
