<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Analysis/Nodes.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_a25db018342d3ae6c7e6779086c18378.xhtml">Analysis</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Nodes.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d1/d89/Nodes_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d4/daf/Nodes_8h.xhtml">enfield/Analysis/Nodes.h</a>&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d0/d8d/NodeVisitor_8h.xhtml">enfield/Analysis/NodeVisitor.h</a>&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d5/dfc/RTTI_8h.xhtml">enfield/Support/RTTI.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/d09/uRefCast_8h.xhtml">enfield/Support/uRefCast.h</a>&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d1/d73/Defs_8h.xhtml">enfield/Support/Defs.h</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a09ac8cdf7898a3d17293d92ae956eece">    9</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a09ac8cdf7898a3d17293d92ae956eece">efd::Node::Node</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a4a15c30d88c8421e7298f1152fba337e">Kind</a> k, <span class="keywordtype">bool</span> empty) : mK(k), mIsEmpty(empty), mWasGenerated(false),</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    mInInclude(false) {</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;}</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">   13</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">efd::Node::innerAddChild</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> ref) {</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    ref-&gt;setParent(<span class="keyword">this</span>);</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    mChild.push_back(std::move(ref));</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;}</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d9da2030336053b8afd1cbb3d6dd5ea">   18</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d9da2030336053b8afd1cbb3d6dd5ea">efd::Node::~Node</a>() {</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">   21</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">efd::Node::getChild</a>(uint32_t i)<span class="keyword"> const </span>{</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">return</span> mChild[i].get();</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#aad4510814ff15bd26fe2f95f9d2a2279">   25</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#aad4510814ff15bd26fe2f95f9d2a2279">efd::Node::setChild</a>(uint32_t i, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a> ref) {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    ref-&gt;setParent(<span class="keyword">this</span>);</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    mChild[i] = std::move(ref);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">   30</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d6a0c6f7ea7ef0d994c79fc96aba31d">efd::Node::Iterator</a> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">efd::Node::findChild</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Ref</a> ref) {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = mChild.begin(), end = mChild.end(); it != end; ++it) {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keywordflow">if</span> (ref == it-&gt;get()) <span class="keywordflow">return</span> it;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    }</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">return</span> mChild.end();</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">   38</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d6a0c6f7ea7ef0d994c79fc96aba31d">efd::Node::Iterator</a> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">efd::Node::begin</a>() {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">return</span> mChild.begin();</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">   42</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d6a0c6f7ea7ef0d994c79fc96aba31d">efd::Node::Iterator</a> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">efd::Node::end</a>() {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">return</span> mChild.end();</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a72513b510ce4279c702589234432a8d9">   46</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7e3f55d770ef1eab141f1c2fe0e7e86b">efd::Node::ConstIterator</a> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">efd::Node::begin</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> mChild.begin();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a2bb488159dbb91796d5c8c0b008c558d">   50</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7e3f55d770ef1eab141f1c2fe0e7e86b">efd::Node::ConstIterator</a> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">efd::Node::end</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">return</span> mChild.end();</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">   54</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a4a15c30d88c8421e7298f1152fba337e">efd::Node::Kind</a> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">efd::Node::getKind</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">return</span> mK;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#aeed2f635da7bc63682fab4230059d690">   58</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#aeed2f635da7bc63682fab4230059d690">efd::Node::print</a>(std::ostream&amp; O, <span class="keywordtype">bool</span> pretty) {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    O &lt;&lt; toString(pretty);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#ab81eb836a6539c25d37af7bc84d18f57">   62</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#aeed2f635da7bc63682fab4230059d690">efd::Node::print</a>(<span class="keywordtype">bool</span> pretty) {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    std::cout &lt;&lt; toString(pretty);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a3f8e26eafae005e4befadedeab9b6df4">   66</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a3f8e26eafae005e4befadedeab9b6df4">efd::Node::isEmpty</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> mIsEmpty;  </div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a2bc1ab74f5bde4a10ad5c2fd41bc640d">   70</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2bc1ab74f5bde4a10ad5c2fd41bc640d">efd::Node::wasGenerated</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> mWasGenerated;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a666ff4d2eac98f15341daab7f4f1ee08">   74</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a666ff4d2eac98f15341daab7f4f1ee08">efd::Node::setGenerated</a>() {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    mWasGenerated = <span class="keyword">true</span>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a0c2aac79f80799e7b16fb370f8cf88b8">   78</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a0c2aac79f80799e7b16fb370f8cf88b8">efd::Node::isInInclude</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">return</span> mInInclude;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#ab9ae2fce1eb28b2074d0919f9820a47d">   82</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ab9ae2fce1eb28b2074d0919f9820a47d">efd::Node::setInInclude</a>() {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    mInInclude = <span class="keyword">true</span>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">   86</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">efd::Node::getParent</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> mParent;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a48e9d49d994b9023b8400316e2782e2b">   90</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a48e9d49d994b9023b8400316e2782e2b">efd::Node::setParent</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Ref</a> ref) {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    mParent = ref;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a09d052b58e537bb983993baa68ab1cc9">   94</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a09d052b58e537bb983993baa68ab1cc9">efd::Node::equalsImpl</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a8a024f4a6c321f6af9db9202105fcad2">   96</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8a024f4a6c321f6af9db9202105fcad2">efd::Node::equals</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref)<span class="keyword"> const </span>{</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">if</span> (mK != ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">if</span> (mChild.size() != ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a11df06f4d8e590426340024cbb2db23e">getChildNumber</a>()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">if</span> (getOperation() != ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae9f49bc3eeebb8d24af82ecaa8cc3636">getOperation</a>()) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    uint32_t childNumber = getChildNumber();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0; i &lt; childNumber; ++i) {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">if</span> (!mChild[i]-&gt;equals(ref-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a>(i)))</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span> equalsImpl(ref);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#ae9f49bc3eeebb8d24af82ecaa8cc3636">  110</a></span>&#160;std::string <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#ae9f49bc3eeebb8d24af82ecaa8cc3636">efd::Node::getOperation</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">  114</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">efd::Node::clone</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">auto</span> cloned = cloneImpl();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    cloned-&gt;mK = mK;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    cloned-&gt;mIsEmpty = mIsEmpty;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    cloned-&gt;mInInclude = mInInclude;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    cloned-&gt;mWasGenerated = mWasGenerated;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">return</span> cloned;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">// -------------- Value Specializations -----------------</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">// -------------- Value&lt;efd::IntVal&gt; -----------------</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keyword">template</span> &lt;&gt; </div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="../../df/d1b/classefd_1_1NDValue.xhtml#afe4f2cc5fa82e1ee578cb0e62bac9f10">  128</a></span>&#160;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a316704b1e616364e1d8a8589a840d097">efd::NDValue&lt;efd::IntVal&gt;::NDValue</a>(<a class="code" href="../../d9/d7a/structefd_1_1WrapperVal.xhtml">efd::IntVal</a> val) : <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>(K_LIT_INT), mVal(val) {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keyword">template</span> &lt;&gt; </div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="../../df/d1b/classefd_1_1NDValue.xhtml#a64a4b36fc28066a7ef61505c5800b082">  132</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a4ac23dab67956439a9af5893e703bca8">efd::NDValue&lt;efd::IntVal&gt;::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) { </div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_LIT_INT; </div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">template</span> &lt;&gt; </div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="../../df/d1b/classefd_1_1NDValue.xhtml#a433a7cc31e28b7faafb4e2c158a07e93">  137</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ae160ac5a42d2c3e6a2f35622330e6407">efd::NDValue&lt;efd::IntVal&gt;::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">// -------------- Value&lt;efd::RealVal&gt; -----------------</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">template</span> &lt;&gt; </div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="../../df/d1b/classefd_1_1NDValue.xhtml#aeda3359ca29cd0e126b405d7447270ae">  143</a></span>&#160;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a316704b1e616364e1d8a8589a840d097">efd::NDValue&lt;efd::RealVal&gt;::NDValue</a>(<a class="code" href="../../d9/d7a/structefd_1_1WrapperVal.xhtml">efd::RealVal</a> val) : <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>(K_LIT_REAL), mVal(val) {</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword">template</span> &lt;&gt; </div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="../../df/d1b/classefd_1_1NDValue.xhtml#a33d450c2895c7c98530daa60a5ad068b">  147</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a4ac23dab67956439a9af5893e703bca8">efd::NDValue&lt;efd::RealVal&gt;::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_LIT_REAL; </div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keyword">template</span> &lt;&gt; </div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="../../df/d1b/classefd_1_1NDValue.xhtml#a5ec1a94da5dec86863e0191082a91994">  152</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ae160ac5a42d2c3e6a2f35622330e6407">efd::NDValue&lt;efd::RealVal&gt;::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">// -------------- Value&lt;std::string&gt; -----------------</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keyword">template</span> &lt;&gt; </div><div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="../../df/d1b/classefd_1_1NDValue.xhtml#af5808500139e96d2580d92d331b1fe47">  158</a></span>&#160;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a316704b1e616364e1d8a8589a840d097">efd::NDValue&lt;std::string&gt;::NDValue</a>(std::string val) : <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>(K_LIT_STRING), mVal(val) {</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keyword">template</span> &lt;&gt; </div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="../../df/d1b/classefd_1_1NDValue.xhtml#a7e9bcab4c327edf04c198fafa87f2690">  162</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a4ac23dab67956439a9af5893e703bca8">efd::NDValue&lt;std::string&gt;::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_LIT_STRING; </div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword">template</span> &lt;&gt; </div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="../../df/d1b/classefd_1_1NDValue.xhtml#aaa02169ddc9e8c37ea9d7726cc7922c7">  167</a></span>&#160;std::string <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#aa1729ed919eb6f57251b699be12dd3b2">efd::NDValue&lt;std::string&gt;::getOperation</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">return</span> mVal; </div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keyword">template</span> &lt;&gt; </div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="../../df/d1b/classefd_1_1NDValue.xhtml#a4bcd90b1cb35e42f0e72a41f8365f811">  172</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ae160ac5a42d2c3e6a2f35622330e6407">efd::NDValue&lt;std::string&gt;::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;}</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keyword">template</span> &lt;&gt; </div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="../../df/d1b/classefd_1_1NDValue.xhtml#a3b7102548e6d59026e526f43186699a9">  177</a></span>&#160;std::string <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#a9ded6b0d00e7ea4d748be60c5cc3632b">efd::NDValue&lt;std::string&gt;::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">return</span> mVal; </div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">// -------------- Decl -----------------</span></div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a1d2cdd96c460f6968ecd4ae2b4a5181c">  182</a></span>&#160;<a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a1d2cdd96c460f6968ecd4ae2b4a5181c">efd::NDDecl::NDDecl</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a4a15c30d88c8421e7298f1152fba337e">Kind</a> k, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode) : <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>(k) {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(idNode));</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;}</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">  186</a></span>&#160;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">efd::NDId::Ref</a> <a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">efd::NDDecl::getId</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDId&gt;(mChild[I_ID].get());</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#abaa5d70e3d471b827ead505febf495cb">  190</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#abaa5d70e3d471b827ead505febf495cb">efd::NDDecl::setId</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> ref) {</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    setChild(I_ID, std::move(ref));</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;}</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a8e4ecd63efbbb72224dd99fc8a2eb69b">  194</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a8e4ecd63efbbb72224dd99fc8a2eb69b">efd::NDDecl::isReg</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">return</span> getKind() == K_REG_DECL;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#abb55bc564ddfa0df1d56ef1427ed2796">  198</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#abb55bc564ddfa0df1d56ef1427ed2796">efd::NDDecl::isGate</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">return</span> getKind() == K_GATE_DECL;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;}</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#abaecb01dd85f5fe959aa93b7744f9006">  202</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml#abaecb01dd85f5fe959aa93b7744f9006">efd::NDDecl::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_REG_DECL ||</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_GATE_DECL;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;}</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">// -------------- RegDecl -----------------</span></div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a0d7664d9c483fdeab6c982771eb5eb5e">  208</a></span>&#160;<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a0d7664d9c483fdeab6c982771eb5eb5e">efd::NDRegDecl::NDRegDecl</a>(<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a63ca8edd1abc565c351eda6a55920ae5">Type</a> t, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDInt::uRef</a> sizeNode)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                        : <a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml">NDDecl</a>(K_REG_DECL, <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(idNode)), mT(t) {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(sizeNode));</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;}</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a1b8a5fb302732a638fef839b08e8fae5">  213</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a1b8a5fb302732a638fef839b08e8fae5">efd::NDRegDecl::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keyword">auto</span> <span class="keywordtype">id</span> = uniqueCastForward&lt;NDId&gt;(getId()-&gt;clone());</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keyword">auto</span> size = uniqueCastForward&lt;NDInt&gt;(getSize()-&gt;clone());</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af9be5b386325a1d50ff7e2e2bfe1c8d3">NDRegDecl::Create</a>(mT, std::move(<span class="keywordtype">id</span>), std::move(size));</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#aa0cfc2736f15ea67553ea975b3b207f9">  219</a></span>&#160;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">efd::NDInt::Ref</a> <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#aa0cfc2736f15ea67553ea975b3b207f9">efd::NDRegDecl::getSize</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDInt&gt;(mChild[I_SIZE].get());</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;}</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a2f2867174765d2d2132a4cc95108d7cd">  223</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a2f2867174765d2d2132a4cc95108d7cd">efd::NDRegDecl::setSize</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDInt::uRef</a> ref) {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    setChild(I_SIZE, std::move(ref));</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;}</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a192297c494e1aabc57cd4cd72444e2ff">  227</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a192297c494e1aabc57cd4cd72444e2ff">efd::NDRegDecl::isCReg</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordflow">return</span> mT == CONCRETE;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;}</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a185157dac09992d6138cb80310e3c826">  231</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a185157dac09992d6138cb80310e3c826">efd::NDRegDecl::isQReg</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">return</span> mT == QUANTUM;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#ae1a4518aa5a5ba67545587381c9e0fa1">  235</a></span>&#160;std::string <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#ae1a4518aa5a5ba67545587381c9e0fa1">efd::NDRegDecl::getOperation</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordflow">switch</span> (mT) {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">case</span> CONCRETE: <span class="keywordflow">return</span> <span class="stringliteral">&quot;creg&quot;</span>;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">case</span> QUANTUM:  <span class="keywordflow">return</span> <span class="stringliteral">&quot;qreg&quot;</span>;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keywordflow">default</span>: </div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                       <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">efd::ERR</a> &lt;&lt; <span class="stringliteral">&quot;Unknown register type.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                       <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">efd::ExitCode::EXIT_unreachable</a>);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    }</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;}</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a36b76c92793e3ecf3269a6d9c563e918">  245</a></span>&#160;uint32_t <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a36b76c92793e3ecf3269a6d9c563e918">efd::NDRegDecl::getChildNumber</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">return</span> 2;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;}</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a2acfdcaf9096f9882565fd1a07d00870">  249</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a2acfdcaf9096f9882565fd1a07d00870">efd::NDRegDecl::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;}</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a3bf9bff2803d9e5c9a838d47a81c2d20">  253</a></span>&#160;std::string <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a3bf9bff2803d9e5c9a838d47a81c2d20">efd::NDRegDecl::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    std::string str;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    std::string endl = (pretty) ? <span class="stringliteral">&quot;\n&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    str += getOperation();</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    str += <span class="stringliteral">&quot; &quot;</span> + getId()-&gt;toString(pretty);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    str += <span class="stringliteral">&quot;[&quot;</span> + getSize()-&gt;toString(pretty) + <span class="stringliteral">&quot;];&quot;</span>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    str += endl;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#acc71dbce09e07537b5cc0cf18b48e803">  265</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#acc71dbce09e07537b5cc0cf18b48e803">efd::NDRegDecl::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_REG_DECL;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;}</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af9be5b386325a1d50ff7e2e2bfe1c8d3">  269</a></span>&#160;<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a90db74b3714926986c2df6e293db536b">efd::NDRegDecl::uRef</a> <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af9be5b386325a1d50ff7e2e2bfe1c8d3">efd::NDRegDecl::Create</a>(<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a63ca8edd1abc565c351eda6a55920ae5">Type</a> t, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDInt::uRef</a> sizeNode) {</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml">NDRegDecl</a>(t, std::move(idNode), std::move(sizeNode)));</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;}</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af206910448d281670d3afe89f3ff4677">  273</a></span>&#160;<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a90db74b3714926986c2df6e293db536b">efd::NDRegDecl::uRef</a> <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af206910448d281670d3afe89f3ff4677">efd::NDRegDecl::CreateQ</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDInt::uRef</a> sizeNode) {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keywordflow">return</span> Create(QUANTUM, std::move(idNode), std::move(sizeNode));</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;}</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#ae0bf0448b6920b60c0d74ff12c905a19">  277</a></span>&#160;<a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a90db74b3714926986c2df6e293db536b">efd::NDRegDecl::uRef</a> <a class="code" href="../../da/d97/classefd_1_1NDRegDecl.xhtml#ae0bf0448b6920b60c0d74ff12c905a19">efd::NDRegDecl::CreateC</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDInt::uRef</a> sizeNode) {</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keywordflow">return</span> Create(CONCRETE, std::move(idNode), std::move(sizeNode));</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;}</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">// -------------- ID reference Operation -----------------</span></div><div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a18d042bd5764dee3b3e15c79017f78ba">  282</a></span>&#160;<a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a18d042bd5764dee3b3e15c79017f78ba">efd::NDIdRef::NDIdRef</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDInt::uRef</a> nNode) : <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>(K_ID_REF) {</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(idNode));</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(nNode));</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;}</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a8e990dd9f4ca40817cdd7ac06b43a738">  287</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a8e990dd9f4ca40817cdd7ac06b43a738">efd::NDIdRef::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keyword">auto</span> <span class="keywordtype">id</span> = uniqueCastForward&lt;NDId&gt;(getId()-&gt;clone());</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keyword">auto</span> n = uniqueCastForward&lt;NDInt&gt;(getN()-&gt;clone());</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a9407354bbb835d0daffbeb30cafc1076">NDIdRef::Create</a>(std::move(<span class="keywordtype">id</span>), std::move(n));</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;}</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#aee4047da725c610abf28c2558ff5012f">  293</a></span>&#160;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">efd::NDId::Ref</a> <a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#aee4047da725c610abf28c2558ff5012f">efd::NDIdRef::getId</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDId&gt;(mChild[I_ID].get());</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno"><a class="line" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a625801c9b0cbf00600ab3522dbaf285d">  297</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a625801c9b0cbf00600ab3522dbaf285d">efd::NDIdRef::setId</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> ref) {</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    setChild(I_ID, std::move(ref));</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;}</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno"><a class="line" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#ab2b468c0bd46cbfdcc01ceea43f5f49d">  301</a></span>&#160;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">efd::NDInt::Ref</a> <a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#ab2b468c0bd46cbfdcc01ceea43f5f49d">efd::NDIdRef::getN</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDInt&gt;(mChild[I_N].get());</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;}</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno"><a class="line" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#afcff046701bf4f86ad2b0c6b18754169">  305</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#afcff046701bf4f86ad2b0c6b18754169">efd::NDIdRef::setN</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDInt::uRef</a> ref) {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    setChild(I_N, std::move(ref));</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;}</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a417441353b993319d710d81a11140d16">  309</a></span>&#160;uint32_t <a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a417441353b993319d710d81a11140d16">efd::NDIdRef::getChildNumber</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">return</span> 2;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;}</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a164cecac1a571671b2af438a8356800c">  313</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a164cecac1a571671b2af438a8356800c">efd::NDIdRef::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;}</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno"><a class="line" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#abc2ac87fb927b18493d57f536b96bdde">  317</a></span>&#160;std::string <a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#abc2ac87fb927b18493d57f536b96bdde">efd::NDIdRef::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    std::string str;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    str += getId()-&gt;toString(pretty);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    str += <span class="stringliteral">&quot;[&quot;</span> + getN()-&gt;toString(pretty) + <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;}</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a9c4e4a77c49420497084d03a0f54a68b">  326</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a9c4e4a77c49420497084d03a0f54a68b">efd::NDIdRef::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_ID_REF;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;}</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a9407354bbb835d0daffbeb30cafc1076">  330</a></span>&#160;<a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a943c6299e258417e70a0d406b2aeff7a">efd::NDIdRef::uRef</a> <a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a9407354bbb835d0daffbeb30cafc1076">efd::NDIdRef::Create</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDInt::uRef</a> nNode) {</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keywordflow">return</span> std::unique_ptr&lt;NDIdRef&gt;(<span class="keyword">new</span> <a class="code" href="../../d8/dd2/classefd_1_1NDIdRef.xhtml">NDIdRef</a>(std::move(idNode), std::move(nNode)));</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;}</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">// -------------- Node List -----------------</span></div><div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#a2642c91fda9d33512d1aa1aa7851b6bd">  335</a></span>&#160;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a2642c91fda9d33512d1aa1aa7851b6bd">efd::NDList::NDList</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a4a15c30d88c8421e7298f1152fba337e">Kind</a> k) : <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>(k, true) {</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;}</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#a1b34233ca3738b39d85ece7519a35dde">  338</a></span>&#160;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a1b34233ca3738b39d85ece7519a35dde">efd::NDList::~NDList</a>() {</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;}</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#aed2ba2ed453bc5ec3f84b45b836f041e">  341</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#aed2ba2ed453bc5ec3f84b45b836f041e">efd::NDList::cloneChildrem</a>(<span class="keyword">const</span> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>* list) {</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; child : *list)</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        addChild(child-&gt;clone());</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;}</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#a1ba2fe4261e0359be8a0a51d4823fd9c">  346</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a1ba2fe4261e0359be8a0a51d4823fd9c">efd::NDList::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keyword">auto</span> list = <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a5e3e2ab6234caa816599eb51766210b7">NDList::Create</a>(mK);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    list-&gt;cloneChildrem(<span class="keyword">this</span>);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(list.release());</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;}</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">  352</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d6a0c6f7ea7ef0d994c79fc96aba31d">efd::Node::Iterator</a> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">efd::NDList::addChild</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> child) {</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    child-&gt;setParent(<span class="keyword">this</span>);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    mChild.push_back(std::move(child));</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7812ac3c01971aab590f06348c9548ac">Node::mIsEmpty</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keywordflow">return</span> mChild.begin() + (mChild.size() - 1);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;}</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#a17c02efea7eb3da603eda4526337d317">  359</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d6a0c6f7ea7ef0d994c79fc96aba31d">efd::Node::Iterator</a> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">efd::NDList::addChild</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d6a0c6f7ea7ef0d994c79fc96aba31d">Iterator</a> it, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> child) {</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    child-&gt;setParent(<span class="keyword">this</span>);</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    it = mChild.insert(it, std::move(child));</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7812ac3c01971aab590f06348c9548ac">Node::mIsEmpty</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keywordflow">return</span> it;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;}</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#a0b5d1d9d07f3435df1317ac493ac00ce">  366</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d6a0c6f7ea7ef0d994c79fc96aba31d">efd::Node::Iterator</a> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0b5d1d9d07f3435df1317ac493ac00ce">efd::NDList::addChildren</a>(std::vector&lt;Node::uRef&gt; children) {</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keyword">auto</span> it = addChildren(mChild.end(), std::move(children));</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keywordflow">return</span> it;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;}</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d6a0c6f7ea7ef0d994c79fc96aba31d">efd::Node::Iterator</a> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0b5d1d9d07f3435df1317ac493ac00ce">efd::NDList::addChildren</a></div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#aa407fd205c6c9841cf866fa023337ece">  372</a></span>&#160;(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d6a0c6f7ea7ef0d994c79fc96aba31d">Iterator</a> it, std::vector&lt;Node::uRef&gt; children) {</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keywordflow">if</span> (children.empty()) <span class="keywordflow">return</span> mChild.end();</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; child : children)</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        child-&gt;setParent(<span class="keyword">this</span>);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    it = mChild.insert(it,</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            std::make_move_iterator(children.begin()),</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            std::make_move_iterator(children.end()));</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7812ac3c01971aab590f06348c9548ac">Node::mIsEmpty</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keywordflow">return</span> it;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;}</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#ae7c4d5c8dcb0a7439b62e3f662cbb85f">  386</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d6a0c6f7ea7ef0d994c79fc96aba31d">efd::Node::Iterator</a> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#ae7c4d5c8dcb0a7439b62e3f662cbb85f">efd::NDList::removeChild</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a2d6a0c6f7ea7ef0d994c79fc96aba31d">Iterator</a> it) {</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    it = mChild.erase(it);</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="keywordflow">if</span> (mChild.empty())</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7812ac3c01971aab590f06348c9548ac">Node::mIsEmpty</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="keywordflow">return</span> it;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;}</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#a6d57f95bd61a3796252fa542e2c0b129">  393</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a6d57f95bd61a3796252fa542e2c0b129">efd::NDList::clear</a>() {</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    mChild.clear();</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;}</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#a587dbbed75fb968423f58ce57acd489d">  397</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#ae7c4d5c8dcb0a7439b62e3f662cbb85f">efd::NDList::removeChild</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> ref) {</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keyword">auto</span> it = findChild(ref);</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keywordflow">if</span> (it == end()) {</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">efd::ERR</a> &lt;&lt; <span class="stringliteral">&quot;Can&#39;t remove inexistent child.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">efd::ExitCode::EXIT_unreachable</a>);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    }</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    removeChild(it);</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keywordflow">if</span> (mChild.empty())</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a7812ac3c01971aab590f06348c9548ac">Node::mIsEmpty</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;}</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">  410</a></span>&#160;uint32_t <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">efd::NDList::getChildNumber</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keywordflow">return</span> mChild.size();</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;}</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">  414</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">efd::NDList::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;}</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#acfa25f299fc8d811fcada96273aa8550">  418</a></span>&#160;std::string <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#acfa25f299fc8d811fcada96273aa8550">efd::NDList::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    std::string str;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keywordflow">if</span> (!mChild.empty()) {</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        str += getChild(0)-&gt;toString(pretty);</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = mChild.begin() + 1, end = mChild.end(); it != end; ++it)</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            str += <span class="stringliteral">&quot;, &quot;</span> + (*it)-&gt;toString(pretty);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    }</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;}</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#ac7fe28ead545ea9200c58b914c872906">  431</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#ac7fe28ead545ea9200c58b914c872906">efd::NDList::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_LIST ||</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_STMT_LIST ||</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_GOP_LIST;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;}</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#a63e0eab4abb59c1c0783f90afe0bb3bb">  437</a></span>&#160;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">efd::NDList::uRef</a> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a5e3e2ab6234caa816599eb51766210b7">efd::NDList::Create</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a4a15c30d88c8421e7298f1152fba337e">Kind</a> k) {</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <span class="keyword">auto</span> list = <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>(k));</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="keywordflow">return</span> list;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;}</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno"><a class="line" href="../../da/ddd/classefd_1_1NDList.xhtml#a5e3e2ab6234caa816599eb51766210b7">  442</a></span>&#160;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">efd::NDList::uRef</a> <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a5e3e2ab6234caa816599eb51766210b7">efd::NDList::Create</a>() {</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="keywordflow">return</span> Create(K_LIST);</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;}</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">// -------------- StmtList -----------------</span></div><div class="line"><a name="l00447"></a><span class="lineno"><a class="line" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a7d05021fdea4c254514856a9f126ce7a">  447</a></span>&#160;<a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a7d05021fdea4c254514856a9f126ce7a">efd::NDStmtList::NDStmtList</a>() : <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>(K_STMT_LIST) {</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;}</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno"><a class="line" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a84bc7f6f7ae63e392704bccc5cf0fb30">  450</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a84bc7f6f7ae63e392704bccc5cf0fb30">efd::NDStmtList::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keyword">auto</span> list = <a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a015cefabf53b2666c442b01b86c2b7cd">NDStmtList::Create</a>();</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    list-&gt;cloneChildrem(<span class="keyword">this</span>);</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(list.release());</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;}</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno"><a class="line" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a5e5f1b0f2a5395ff5c4183f6b7f9292c">  456</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a5e5f1b0f2a5395ff5c4183f6b7f9292c">efd::NDStmtList::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;}</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno"><a class="line" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#ae7b4ee3d6f2f0c533a0a9b552b595586">  460</a></span>&#160;std::string <a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#ae7b4ee3d6f2f0c533a0a9b552b595586">efd::NDStmtList::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    std::string str;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;child : *<span class="keyword">this</span>)</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        str += child-&gt;toString(pretty);</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;}</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno"><a class="line" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#aacd4ae915b1f9cc1df3e9b473061c458">  469</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#aacd4ae915b1f9cc1df3e9b473061c458">efd::NDStmtList::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_STMT_LIST; </div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;}</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno"><a class="line" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a015cefabf53b2666c442b01b86c2b7cd">  473</a></span>&#160;<a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a2df8f92006f4bb82498101b1aa6e6a3f">efd::NDStmtList::uRef</a> <a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a015cefabf53b2666c442b01b86c2b7cd">efd::NDStmtList::Create</a>() {</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml">NDStmtList</a>());</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;}</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment">// -------------- GOpList -----------------</span></div><div class="line"><a name="l00478"></a><span class="lineno"><a class="line" href="../../da/d14/classefd_1_1NDGOpList.xhtml#aa2ec8dc00392f74e5d4bd261fb1a43c5">  478</a></span>&#160;<a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml#aa2ec8dc00392f74e5d4bd261fb1a43c5">efd::NDGOpList::NDGOpList</a>() : <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>(K_GOP_LIST) {</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;}</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno"><a class="line" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a11fb7a5d47134c27c93be5902e8247a4">  481</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a11fb7a5d47134c27c93be5902e8247a4">efd::NDGOpList::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="keyword">auto</span> list = <a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml#ad763f42c1ceddbf4aab2808682bc1e1b">NDGOpList::Create</a>();</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    list-&gt;cloneChildrem(<span class="keyword">this</span>);</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(list.release());</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;}</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno"><a class="line" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a25a3546c4aa7a06c53f564929205732e">  487</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a25a3546c4aa7a06c53f564929205732e">efd::NDGOpList::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;}</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno"><a class="line" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a45248b86ddde28c6bf046716b292e41f">  491</a></span>&#160;std::string <a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a45248b86ddde28c6bf046716b292e41f">efd::NDGOpList::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    std::string str;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    std::string endl = (pretty) ? <span class="stringliteral">&quot;\n&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    std::string tab = (pretty) ? <span class="stringliteral">&quot;\t&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;child : *<span class="keyword">this</span>)</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        <span class="keywordflow">if</span> (!child-&gt;isEmpty())</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            str += tab + child-&gt;toString(pretty);</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;}</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno"><a class="line" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a4474b2938ed3cbdbd6611978a5e410c7">  504</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a4474b2938ed3cbdbd6611978a5e410c7">efd::NDGOpList::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_GOP_LIST; </div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;}</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno"><a class="line" href="../../da/d14/classefd_1_1NDGOpList.xhtml#ad763f42c1ceddbf4aab2808682bc1e1b">  508</a></span>&#160;<a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a18ad837befc49362047fe2ebee02574f">efd::NDGOpList::uRef</a> <a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml#ad763f42c1ceddbf4aab2808682bc1e1b">efd::NDGOpList::Create</a>() {</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml">NDGOpList</a>());</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;}</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="comment">// -------------- If Statement -----------------</span></div><div class="line"><a name="l00513"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ab3189e49254cadc7f06b27a001c444e6">  513</a></span>&#160;<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ab3189e49254cadc7f06b27a001c444e6">efd::NDIfStmt::NDIfStmt</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> cidNode, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDInt::uRef</a> nNode, <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a> qopNode)</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                      : <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>(K_IF_STMT) {</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(cidNode));</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(nNode));</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(qopNode));</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;}</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#aadf4248c04a97ec87a34f879e42e8324">  520</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#aadf4248c04a97ec87a34f879e42e8324">efd::NDIfStmt::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    <span class="keyword">auto</span> cid = uniqueCastForward&lt;NDId&gt;(getCondId()-&gt;clone());</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    <span class="keyword">auto</span> cn = uniqueCastForward&lt;NDInt&gt;(getCondN()-&gt;clone());</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keyword">auto</span> qop = uniqueCastForward&lt;NDQOp&gt;(getQOp()-&gt;clone());</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ac9549080de280c8c2181c64a7179a33b">NDIfStmt::Create</a>(std::move(cid), std::move(cn), std::move(qop));</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;}</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a5ec6f243aee6d4fe8988885ea9c449de">  527</a></span>&#160;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">efd::NDId::Ref</a> <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a5ec6f243aee6d4fe8988885ea9c449de">efd::NDIfStmt::getCondId</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDId&gt;(mChild[I_COND_ID].get());</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;}</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a45299c2d04710b9066059d50757ee9f4">  531</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a45299c2d04710b9066059d50757ee9f4">efd::NDIfStmt::setCondId</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> ref) {</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    setChild(I_COND_ID, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(ref.release()));</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;}</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a051a5c3f07d0d9d6177def933a4d71e6">  535</a></span>&#160;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">efd::NDInt::Ref</a> <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a051a5c3f07d0d9d6177def933a4d71e6">efd::NDIfStmt::getCondN</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDInt&gt;(mChild[I_COND_N].get());</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;}</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ab50b3a7ceeeae1685e2a17f9d6da3443">  539</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ab50b3a7ceeeae1685e2a17f9d6da3443">efd::NDIfStmt::setCondN</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDInt::uRef</a> ref) {</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    setChild(I_COND_N, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(ref.release()));</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;}</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">  543</a></span>&#160;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">efd::NDQOp::Ref</a> <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">efd::NDIfStmt::getQOp</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDQOp&gt;(mChild[I_QOP].get());</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;}</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#acf7a372c40a8d67d3d642d2bdffb9472">  547</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#acf7a372c40a8d67d3d642d2bdffb9472">efd::NDIfStmt::setQOp</a>(<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a> ref) {</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    setChild(I_QOP, std::move(ref));</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;}</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00551"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a8f00f66051d3d4242e01fc3d51645bda">  551</a></span>&#160;uint32_t <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a8f00f66051d3d4242e01fc3d51645bda">efd::NDIfStmt::getChildNumber</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <span class="keywordflow">return</span> 3;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;}</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a9dd8ce072cc70aefd9b9349b76c912fc">  555</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a9dd8ce072cc70aefd9b9349b76c912fc">efd::NDIfStmt::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;}</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a4515e2ef9d1e3c284604f8033b9f8787">  559</a></span>&#160;std::string <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a4515e2ef9d1e3c284604f8033b9f8787">efd::NDIfStmt::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    std::string str;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    std::string endl = (pretty) ? <span class="stringliteral">&quot;\n&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    str += getOperation() + <span class="stringliteral">&quot; &quot;</span>;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    str += <span class="stringliteral">&quot;(&quot;</span>;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    str += getCondId()-&gt;toString(pretty);</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    str += <span class="stringliteral">&quot; == &quot;</span>;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    str += getCondN()-&gt;toString(pretty);</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    str += <span class="stringliteral">&quot;)&quot;</span>;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    str += <span class="stringliteral">&quot; &quot;</span> + getQOp()-&gt;toString(pretty);</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;}</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div><div class="line"><a name="l00576"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#addff40c34428c793195bdd6bbc7e8679">  576</a></span>&#160;std::string <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#addff40c34428c793195bdd6bbc7e8679">efd::NDIfStmt::getOperation</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;if&quot;</span>;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;}</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a69d10bbd9d17475d61d30d878f294363">  580</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a69d10bbd9d17475d61d30d878f294363">efd::NDIfStmt::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_IF_STMT; </div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;}</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno"><a class="line" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ac9549080de280c8c2181c64a7179a33b">  584</a></span>&#160;<a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a8abc03a6e503e57cc36bcb4ce29e271c">efd::NDIfStmt::uRef</a> <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ac9549080de280c8c2181c64a7179a33b">efd::NDIfStmt::Create</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> cidNode, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDInt::uRef</a> nNode,</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">NDQOp::uRef</a> qopNode) {</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">NDIfStmt</a>(std::move(cidNode), std::move(nNode), std::move(qopNode)));</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;}</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment">// -------------- QasmVersion -----------------</span></div><div class="line"><a name="l00590"></a><span class="lineno"><a class="line" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#aaff201c726ac39af5cda849e3e0d27c1">  590</a></span>&#160;<a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#aaff201c726ac39af5cda849e3e0d27c1">efd::NDQasmVersion::NDQasmVersion</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDReal::uRef</a> vNode, <a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a2df8f92006f4bb82498101b1aa6e6a3f">NDStmtList::uRef</a> stmtsNode) :</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>(K_QASM_VERSION) {</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(vNode));</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(stmtsNode));</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;}</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno"><a class="line" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#acd0ef9eb198bd9a5736c8be96cbb5506">  596</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#acd0ef9eb198bd9a5736c8be96cbb5506">efd::NDQasmVersion::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <span class="keyword">auto</span> v = uniqueCastForward&lt;NDReal&gt;(getVersion()-&gt;clone());</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    <span class="keyword">auto</span> stmt = uniqueCastForward&lt;NDStmtList&gt;(getStatements()-&gt;clone());</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a797ca00ee47d3e341eea1be65f0c8615">NDQasmVersion::Create</a>(std::move(v), std::move(stmt));</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;}</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno"><a class="line" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#ae1e5b466eb6ffcf37fea383e5f49c4bf">  602</a></span>&#160;std::string <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#ae1e5b466eb6ffcf37fea383e5f49c4bf">efd::NDQasmVersion::getOperation</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;OPENQASM&quot;</span>;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;}</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno"><a class="line" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a36db510b4916456fd0616f4265bad484">  606</a></span>&#160;uint32_t <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a36db510b4916456fd0616f4265bad484">efd::NDQasmVersion::getChildNumber</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keywordflow">return</span> 2;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;}</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div><div class="line"><a name="l00610"></a><span class="lineno"><a class="line" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a332ca86b1250b92e1bfc6f0a9e2e47bc">  610</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a332ca86b1250b92e1bfc6f0a9e2e47bc">efd::NDQasmVersion::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;}</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div><div class="line"><a name="l00614"></a><span class="lineno"><a class="line" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#adb0f8cedefb3c43a5e8346f31feaa9c0">  614</a></span>&#160;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">efd::NDReal::Ref</a> <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#adb0f8cedefb3c43a5e8346f31feaa9c0">efd::NDQasmVersion::getVersion</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDReal&gt;(mChild[I_VERSION].get());</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;}</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno"><a class="line" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a5a3a5c0ff32f813fecc0560231368b75">  618</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a5a3a5c0ff32f813fecc0560231368b75">efd::NDQasmVersion::setVersion</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDReal::uRef</a> ref) {</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    setChild(I_VERSION, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(ref.release()));</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;}</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno"><a class="line" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a8a8428b4ee1b54ab5009981511133ecf">  622</a></span>&#160;<a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml">efd::NDStmtList::Ref</a> <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a8a8428b4ee1b54ab5009981511133ecf">efd::NDQasmVersion::getStatements</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDStmtList&gt;(mChild[I_STMTS].get());</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;}</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;</div><div class="line"><a name="l00626"></a><span class="lineno"><a class="line" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a7275e667d6fa3d3c1ade8d9a2e3ca5ba">  626</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a7275e667d6fa3d3c1ade8d9a2e3ca5ba">efd::NDQasmVersion::setStatements</a>(<a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a2df8f92006f4bb82498101b1aa6e6a3f">NDStmtList::uRef</a> ref) {</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    setChild(I_STMTS, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(ref.release()));</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;}</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno"><a class="line" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#aa569f393e93eb260839f5885f145ee47">  630</a></span>&#160;std::string <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#aa569f393e93eb260839f5885f145ee47">efd::NDQasmVersion::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    std::string str;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    std::string endl = (pretty) ? <span class="stringliteral">&quot;\n&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    str += getOperation();</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    str += <span class="stringliteral">&quot; &quot;</span> + getVersion()-&gt;toString(pretty) + <span class="stringliteral">&quot;;&quot;</span>;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    str += endl;</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    str += getStatements()-&gt;toString(pretty);</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;}</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno"><a class="line" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a0b3d6631a2f8b92a950ac6ef60c2d7ce">  643</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a0b3d6631a2f8b92a950ac6ef60c2d7ce">efd::NDQasmVersion::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_QASM_VERSION;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;}</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;</div><div class="line"><a name="l00647"></a><span class="lineno"><a class="line" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a797ca00ee47d3e341eea1be65f0c8615">  647</a></span>&#160;<a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a3b286b9fdbd38569c9006182ce595e0d">efd::NDQasmVersion::uRef</a> <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a797ca00ee47d3e341eea1be65f0c8615">efd::NDQasmVersion::Create</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDReal::uRef</a> vNode, <a class="code" href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a2df8f92006f4bb82498101b1aa6e6a3f">NDStmtList::uRef</a> stmtsNode) {</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml">NDQasmVersion</a>(std::move(vNode), std::move(stmtsNode)));</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;}</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="comment">// -------------- Include -----------------</span></div><div class="line"><a name="l00652"></a><span class="lineno"><a class="line" href="../../d3/d29/classefd_1_1NDInclude.xhtml#aeadcf3e4d57fbd7ffb56dab4b8c34e5b">  652</a></span>&#160;<a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#aeadcf3e4d57fbd7ffb56dab4b8c34e5b">efd::NDInclude::NDInclude</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> fNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> astNode) :</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>(K_INCLUDE) {</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(fNode));</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(astNode));</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;}</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno"><a class="line" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a895930e560748f6b21e71bd6814f0825">  658</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a895930e560748f6b21e71bd6814f0825">efd::NDInclude::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    <span class="keyword">auto</span> f = uniqueCastForward&lt;NDString&gt;(getFilename()-&gt;clone());</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a81d54827a61c546040dad4f57e34c318">NDInclude::Create</a>(std::move(f), getInnerAST()-&gt;clone());</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;}</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div><div class="line"><a name="l00663"></a><span class="lineno"><a class="line" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a5f3cf747332884d41b1bd84f15d91cd4">  663</a></span>&#160;std::string <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a5f3cf747332884d41b1bd84f15d91cd4">efd::NDInclude::getOperation</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;include&quot;</span>;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;}</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;</div><div class="line"><a name="l00667"></a><span class="lineno"><a class="line" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a57251832cfbf3b1f1f664b0968ff5874">  667</a></span>&#160;uint32_t <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a57251832cfbf3b1f1f664b0968ff5874">efd::NDInclude::getChildNumber</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    <span class="keywordflow">return</span> 2;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;}</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno"><a class="line" href="../../d3/d29/classefd_1_1NDInclude.xhtml#afa0e025feffceae58b6484eebb5a7754">  671</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#afa0e025feffceae58b6484eebb5a7754">efd::NDInclude::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;}</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;</div><div class="line"><a name="l00675"></a><span class="lineno"><a class="line" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a08ec207974cdeaf086c7978dc23b9a30">  675</a></span>&#160;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">efd::NDString::Ref</a> <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a08ec207974cdeaf086c7978dc23b9a30">efd::NDInclude::getFilename</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDString&gt;(mChild[I_FILE].get());</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;}</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00679"></a><span class="lineno"><a class="line" href="../../d3/d29/classefd_1_1NDInclude.xhtml#ae67458b770c2f1a9d574b73fd7cf0f0a">  679</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#ae67458b770c2f1a9d574b73fd7cf0f0a">efd::NDInclude::setFilename</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDString::uRef</a> ref) {</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    setChild(I_FILE, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(ref.release()));</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;}</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno"><a class="line" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a1bcb5f6f80760f5395d65b3c41a3c96f">  683</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a1bcb5f6f80760f5395d65b3c41a3c96f">efd::NDInclude::getInnerAST</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDStmtList&gt;(mChild[I_INNER_AST].get());</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;}</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div><div class="line"><a name="l00687"></a><span class="lineno"><a class="line" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a49653b28678f7f411adcc1273c4b136b">  687</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a49653b28678f7f411adcc1273c4b136b">efd::NDInclude::setInnerAST</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> ref) {</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    setChild(I_INNER_AST, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(ref.release()));</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;}</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;</div><div class="line"><a name="l00691"></a><span class="lineno"><a class="line" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a9efdb70f8a37e017bbce53679ce3a0ec">  691</a></span>&#160;std::string <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a9efdb70f8a37e017bbce53679ce3a0ec">efd::NDInclude::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    std::string str;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    std::string endl = (pretty) ? <span class="stringliteral">&quot;\n&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    str += getOperation();</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    str += <span class="stringliteral">&quot; \&quot;&quot;</span> + getFilename()-&gt;toString(pretty) + <span class="stringliteral">&quot;\&quot;;&quot;</span>;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    str += endl;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;}</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div><div class="line"><a name="l00702"></a><span class="lineno"><a class="line" href="../../d3/d29/classefd_1_1NDInclude.xhtml#ac0b863ad00e259a15b06431b60f02764">  702</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#ac0b863ad00e259a15b06431b60f02764">efd::NDInclude::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_INCLUDE;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;}</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;</div><div class="line"><a name="l00706"></a><span class="lineno"><a class="line" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a81d54827a61c546040dad4f57e34c318">  706</a></span>&#160;<a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a5055bd5025b24ea091f482ce0941e1ef">efd::NDInclude::uRef</a> <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml#a81d54827a61c546040dad4f57e34c318">efd::NDInclude::Create</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> fNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> astNode) {</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d3/d29/classefd_1_1NDInclude.xhtml">NDInclude</a>(std::move(fNode), std::move(astNode)));</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;}</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="comment">// -------------- Opaque -----------------</span></div><div class="line"><a name="l00711"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a07f33e853f4198482dc66fb1b8910664">  711</a></span>&#160;<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a30d0384e29c48466eb96710dc008cc97">efd::NDGateSign::NDGateSign</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a4a15c30d88c8421e7298f1152fba337e">Kind</a> k, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> aNode, </div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;                            <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> qaNode) : <a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml">NDDecl</a>(k, <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(idNode)) {</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(aNode));</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(qaNode));</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;}</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;</div><div class="line"><a name="l00717"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a30d0384e29c48466eb96710dc008cc97">  717</a></span>&#160;<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a30d0384e29c48466eb96710dc008cc97">efd::NDGateSign::NDGateSign</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> aNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> qaNode) :</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    <a class="code" href="../../d0/d9e/classefd_1_1NDDecl.xhtml">NDDecl</a>(K_GATE_OPAQUE, <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(idNode)) {</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(aNode));</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(qaNode));</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;}</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;</div><div class="line"><a name="l00723"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#ac0f41d3a80cca36d590d3f7bcc1b7dc2">  723</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#ac0f41d3a80cca36d590d3f7bcc1b7dc2">efd::NDGateSign::isOpaque</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    <span class="keywordflow">return</span> getKind() == K_GATE_OPAQUE;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;}</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div><div class="line"><a name="l00727"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a2454c8d9982a7c3cc5f8b987a5498adf">  727</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a2454c8d9982a7c3cc5f8b987a5498adf">efd::NDGateSign::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    <span class="keyword">auto</span> <span class="keywordtype">id</span> = uniqueCastForward&lt;NDId&gt;(getId()-&gt;clone());</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    <span class="keyword">auto</span> args = uniqueCastForward&lt;NDList&gt;(getArgs()-&gt;clone());</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    <span class="keyword">auto</span> qargs = uniqueCastForward&lt;NDList&gt;(getQArgs()-&gt;clone());</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a968d272d94c9e4eca11c86a7e157932d">NDGateSign::Create</a>(std::move(<span class="keywordtype">id</span>), std::move(args), std::move(qargs));</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;}</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;</div><div class="line"><a name="l00734"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a0be5984f118128bc3e2bf64a8a390071">  734</a></span>&#160;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">efd::NDList::Ref</a> <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a0be5984f118128bc3e2bf64a8a390071">efd::NDGateSign::getArgs</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDList&gt;(mChild[I_ARGS].get());</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;}</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div><div class="line"><a name="l00738"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a8b3b718c13aeaa441809b0602320928a">  738</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a8b3b718c13aeaa441809b0602320928a">efd::NDGateSign::setArgs</a>(<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> ref) {</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    setChild(I_ARGS, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(ref.release()));</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;}</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;</div><div class="line"><a name="l00742"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a081605b4c294930734e9d93b34ef85d0">  742</a></span>&#160;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">efd::NDList::Ref</a> <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a081605b4c294930734e9d93b34ef85d0">efd::NDGateSign::getQArgs</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDList&gt;(mChild[I_QARGS].get());</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;}</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div><div class="line"><a name="l00746"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a5e7c803f280d890b680a4157cbdaf104">  746</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a5e7c803f280d890b680a4157cbdaf104">efd::NDGateSign::setQArgs</a>(<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> ref) {</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    setChild(I_QARGS, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(ref.release()));</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;}</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div><div class="line"><a name="l00750"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#aeed807d0af0556f34747b69cc1bc4d00">  750</a></span>&#160;std::string <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#aeed807d0af0556f34747b69cc1bc4d00">efd::NDGateSign::getOperation</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;opaque&quot;</span>;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;}</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;</div><div class="line"><a name="l00754"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a056f1e35a72b685798c0025722181357">  754</a></span>&#160;uint32_t <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a056f1e35a72b685798c0025722181357">efd::NDGateSign::getChildNumber</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    <span class="keywordflow">return</span> 3;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;}</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;</div><div class="line"><a name="l00758"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a9de83ab086f1b4414589d97196c602ff">  758</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a9de83ab086f1b4414589d97196c602ff">efd::NDGateSign::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;}</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a6f90ad90fc61c1ed70d2a1c2da6a3d0a">  762</a></span>&#160;std::string <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a6f90ad90fc61c1ed70d2a1c2da6a3d0a">efd::NDGateSign::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    std::string str;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    std::string endl = (pretty) ? <span class="stringliteral">&quot;\n&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    str += getOperation();</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    str += <span class="stringliteral">&quot; &quot;</span> + getId()-&gt;toString(pretty);</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> refArgs = getArgs();</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    <span class="keywordflow">if</span> (!refArgs-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a3f8e26eafae005e4befadedeab9b6df4">isEmpty</a>())</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;        str += <span class="stringliteral">&quot;(&quot;</span> + refArgs-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>(pretty) + <span class="stringliteral">&quot;)&quot;</span>;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    str += <span class="stringliteral">&quot; &quot;</span> + getQArgs()-&gt;toString(pretty) + <span class="stringliteral">&quot;;&quot;</span>;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    str += endl;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;}</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;</div><div class="line"><a name="l00779"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#afe6c9fa33e225fc08b07f50be8270919">  779</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#afe6c9fa33e225fc08b07f50be8270919">efd::NDGateSign::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_GATE_OPAQUE ||</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;        node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_GATE_DECL;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;}</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;</div><div class="line"><a name="l00784"></a><span class="lineno"><a class="line" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a968d272d94c9e4eca11c86a7e157932d">  784</a></span>&#160;<a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a2c3fab44d60678aba91904ff92f5084c">efd::NDGateSign::uRef</a> <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a968d272d94c9e4eca11c86a7e157932d">efd::NDGateSign::Create</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> aNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> qaNode) {</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml">NDGateSign</a>(std::move(idNode), std::move(aNode), std::move(qaNode)));</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;}</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="comment">// -------------- GateDecl -----------------</span></div><div class="line"><a name="l00789"></a><span class="lineno"><a class="line" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a03dc5a5c5c62ace6c468f2932fd368ea">  789</a></span>&#160;<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a03dc5a5c5c62ace6c468f2932fd368ea">efd::NDGateDecl::NDGateDecl</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> aNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> qaNode,</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;        <a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a18ad837befc49362047fe2ebee02574f">NDGOpList::uRef</a> gopNode) : <a class="code" href="../../db/d1f/classefd_1_1NDGateSign.xhtml">NDGateSign</a>(K_GATE_DECL, <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(idNode), </div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;            <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(aNode), <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(qaNode)) {</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(gopNode));</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;}</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno"><a class="line" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a30755a89298003a0e4c2496ac9b8fa4d">  795</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a30755a89298003a0e4c2496ac9b8fa4d">efd::NDGateDecl::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    <span class="keyword">auto</span> <span class="keywordtype">id</span> = uniqueCastForward&lt;NDId&gt;(getId()-&gt;clone());</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    <span class="keyword">auto</span> args = uniqueCastForward&lt;NDList&gt;(getArgs()-&gt;clone());</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;    <span class="keyword">auto</span> qargs = uniqueCastForward&lt;NDList&gt;(getQArgs()-&gt;clone());</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    <span class="keyword">auto</span> gop = uniqueCastForward&lt;NDGOpList&gt;(getGOpList()-&gt;clone());</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a7a7d18846b03a9ddd85b0d876a867c17">NDGateDecl::Create</a>(std::move(<span class="keywordtype">id</span>), std::move(args),</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;                std::move(qargs), std::move(gop));</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;}</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;</div><div class="line"><a name="l00804"></a><span class="lineno"><a class="line" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#aa45195dbaf1b921fcece3cac5caaceac">  804</a></span>&#160;<a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml">efd::NDGOpList::Ref</a> <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#aa45195dbaf1b921fcece3cac5caaceac">efd::NDGateDecl::getGOpList</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDGOpList&gt;(mChild[I_GOPLIST].get());</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;}</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;</div><div class="line"><a name="l00808"></a><span class="lineno"><a class="line" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#ac56b2015a8f20a0884ec0a0429c79ed9">  808</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#ac56b2015a8f20a0884ec0a0429c79ed9">efd::NDGateDecl::setGOpList</a>(<a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a18ad837befc49362047fe2ebee02574f">NDGOpList::uRef</a> ref) {</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    setChild(I_GOPLIST, std::move(ref));</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;}</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div><div class="line"><a name="l00812"></a><span class="lineno"><a class="line" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a59b4636704c298788d3535799a09cf77">  812</a></span>&#160;std::string <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a59b4636704c298788d3535799a09cf77">efd::NDGateDecl::getOperation</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;gate&quot;</span>;</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;}</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;</div><div class="line"><a name="l00816"></a><span class="lineno"><a class="line" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a853f2f0c185dc03ccf2ee16c59aac539">  816</a></span>&#160;uint32_t <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a853f2f0c185dc03ccf2ee16c59aac539">efd::NDGateDecl::getChildNumber</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;    <span class="keywordflow">return</span> 4;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;}</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;</div><div class="line"><a name="l00820"></a><span class="lineno"><a class="line" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#ad188f50eb45f23df2cffc6b66622d517">  820</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#ad188f50eb45f23df2cffc6b66622d517">efd::NDGateDecl::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;}</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div><div class="line"><a name="l00824"></a><span class="lineno"><a class="line" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#ad761f101eb49fb0fd4c8031b687bf886">  824</a></span>&#160;std::string <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#ad761f101eb49fb0fd4c8031b687bf886">efd::NDGateDecl::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;    std::string str;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    std::string endl = (pretty) ? <span class="stringliteral">&quot;\n&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    str += getOperation();</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    str += <span class="stringliteral">&quot; &quot;</span> + getId()-&gt;toString(pretty);</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> refArgs = getArgs();</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <span class="keywordflow">if</span> (!refArgs-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a3f8e26eafae005e4befadedeab9b6df4">isEmpty</a>())</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;        str += <span class="stringliteral">&quot;(&quot;</span> + refArgs-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>(pretty) + <span class="stringliteral">&quot;)&quot;</span>;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;    str += <span class="stringliteral">&quot; &quot;</span> + getQArgs()-&gt;toString(pretty) + <span class="stringliteral">&quot; {&quot;</span>;</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    str += endl;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> refGOpList = getGOpList();</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    <span class="keywordflow">if</span> (!refGOpList-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a3f8e26eafae005e4befadedeab9b6df4">isEmpty</a>())</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;        str += refGOpList-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>(pretty);</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    str += <span class="stringliteral">&quot;}&quot;</span>;</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;    str += endl;</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;}</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;</div><div class="line"><a name="l00847"></a><span class="lineno"><a class="line" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#adf7951281cac48e19f1f126edd0c0ef0">  847</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#adf7951281cac48e19f1f126edd0c0ef0">efd::NDGateDecl::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_GATE_DECL;</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;}</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;</div><div class="line"><a name="l00851"></a><span class="lineno"><a class="line" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a7a7d18846b03a9ddd85b0d876a867c17">  851</a></span>&#160;<a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a2d8925dec2b81ba1a9ecc8f566fb0d1b">efd::NDGateDecl::uRef</a> <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a7a7d18846b03a9ddd85b0d876a867c17">efd::NDGateDecl::Create</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> aNode,</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;        <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> qaNode, <a class="code" href="../../da/d14/classefd_1_1NDGOpList.xhtml#a18ad837befc49362047fe2ebee02574f">NDGOpList::uRef</a> gopNode) {</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">NDGateDecl</a>(</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;                std::move(idNode), std::move(aNode),</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;                std::move(qaNode), std::move(gopNode)));</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;}</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="comment">// -------------- Qubit Operation -----------------</span></div><div class="line"><a name="l00859"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#ab5f18eaba71bcb53806525fd5dc61403">  859</a></span>&#160;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#ab5f18eaba71bcb53806525fd5dc61403">efd::NDQOp::NDQOp</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a4a15c30d88c8421e7298f1152fba337e">Kind</a> k, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> aNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> qaNode)</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;                : <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>(k) {</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(idNode));</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(aNode));</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(qaNode));</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;}</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;</div><div class="line"><a name="l00866"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#ab1b63089e538796663f19dd5dca01225">  866</a></span>&#160;<a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#ab1b63089e538796663f19dd5dca01225">efd::NDQOp::~NDQOp</a>() {</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;}</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;</div><div class="line"><a name="l00869"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a3a8d5a36821b42dda768a3aeb8d84fb2">  869</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a3a8d5a36821b42dda768a3aeb8d84fb2">efd::NDQOp::isReset</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;    <span class="keywordflow">return</span> getKind() == K_QOP_RESET;</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;}</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;</div><div class="line"><a name="l00873"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#acb465864e0efe9a5f400fbd18812c569">  873</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#acb465864e0efe9a5f400fbd18812c569">efd::NDQOp::isBarrier</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    <span class="keywordflow">return</span> getKind() == K_QOP_BARRIER;</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;}</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;</div><div class="line"><a name="l00877"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#ae90ab2baec2fadb3ef5d690470d470ab">  877</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#ae90ab2baec2fadb3ef5d690470d470ab">efd::NDQOp::isMeasure</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;    <span class="keywordflow">return</span> getKind() == K_QOP_MEASURE;</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;}</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;</div><div class="line"><a name="l00881"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a4ec4c7fa3e399cf6e52a4001d9fe232e">  881</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a4ec4c7fa3e399cf6e52a4001d9fe232e">efd::NDQOp::isU</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    <span class="keywordflow">return</span> getKind() == K_QOP_U;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;}</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;</div><div class="line"><a name="l00885"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#adea3b99c313189bd7c83ead21baecaf5">  885</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#adea3b99c313189bd7c83ead21baecaf5">efd::NDQOp::isCX</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;    <span class="keywordflow">return</span> getKind() == K_QOP_CX;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;}</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;</div><div class="line"><a name="l00889"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a8700a0eb5ff3cee0e3b52c56f3cc2b3c">  889</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a8700a0eb5ff3cee0e3b52c56f3cc2b3c">efd::NDQOp::isGeneric</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;    <span class="keywordflow">return</span> getKind() == K_QOP_GEN;</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;}</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;</div><div class="line"><a name="l00893"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">  893</a></span>&#160;<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">efd::NDId::Ref</a> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">efd::NDQOp::getId</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDId&gt;(mChild[I_ID].get());</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;}</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;</div><div class="line"><a name="l00897"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a0c2f943e00609e1174586956ce6e1e5b">  897</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a0c2f943e00609e1174586956ce6e1e5b">efd::NDQOp::setId</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> ref) {</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;    setChild(I_ID, std::move(ref));</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;}</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;</div><div class="line"><a name="l00901"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a38dbbb3a5ca8faaeb9973512f04c6f64">  901</a></span>&#160;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">efd::NDList::Ref</a> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a38dbbb3a5ca8faaeb9973512f04c6f64">efd::NDQOp::getArgs</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDList&gt;(mChild[I_ARGS].get());</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;}</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;</div><div class="line"><a name="l00905"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#abc039e7a0f8e2e21d680e27c0bddbb2a">  905</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#abc039e7a0f8e2e21d680e27c0bddbb2a">efd::NDQOp::setArgs</a>(<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> ref) {</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;    setChild(I_ARGS, std::move(ref));</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;}</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;</div><div class="line"><a name="l00909"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">  909</a></span>&#160;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">efd::NDList::Ref</a> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">efd::NDQOp::getQArgs</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;    <span class="keywordflow">return</span> dynCast&lt;NDList&gt;(mChild[I_QARGS].get());</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;}</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;</div><div class="line"><a name="l00913"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af66ad886623f70ee24c756d424694dae">  913</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af66ad886623f70ee24c756d424694dae">efd::NDQOp::setQArgs</a>(<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> ref) {</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;    setChild(I_QARGS, std::move(ref));</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;}</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;</div><div class="line"><a name="l00917"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a7b6a0fcfa45267ae4a005d44e6e52102">  917</a></span>&#160;std::string <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a7b6a0fcfa45267ae4a005d44e6e52102">efd::NDQOp::getOperation</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;    <span class="keywordflow">return</span> getId()-&gt;toString();</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;}</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;</div><div class="line"><a name="l00921"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a3f5f48b2826d1d6fff50f6127fcd065e">  921</a></span>&#160;uint32_t <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a3f5f48b2826d1d6fff50f6127fcd065e">efd::NDQOp::getChildNumber</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;    <span class="keywordflow">return</span> 3;</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;}</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;</div><div class="line"><a name="l00925"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#ad05708f36f7c1c126e9f0fbba80a4b0f">  925</a></span>&#160;std::string <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#ad05708f36f7c1c126e9f0fbba80a4b0f">efd::NDQOp::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;    std::string str;</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;    std::string endl = (pretty) ? <span class="stringliteral">&quot;\n&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;    str += getOperation();</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> refArgs = getArgs();</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;    <span class="keywordflow">if</span> (!refArgs-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a3f8e26eafae005e4befadedeab9b6df4">isEmpty</a>())</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;        str += <span class="stringliteral">&quot;(&quot;</span> + refArgs-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>(pretty) + <span class="stringliteral">&quot;)&quot;</span>;</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;    str += <span class="stringliteral">&quot; &quot;</span> + getQArgs()-&gt;toString(pretty) + <span class="stringliteral">&quot;;&quot;</span>;</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;    str += endl;</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;}</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;</div><div class="line"><a name="l00941"></a><span class="lineno"><a class="line" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a6099dbd7e83b3f3f3a7ddc21b0577a49">  941</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#a6099dbd7e83b3f3f3a7ddc21b0577a49">efd::NDQOp::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;    <span class="keyword">auto</span> kind = node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>();</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;    <span class="keywordflow">return</span></div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;        kind == K_QOP_GEN     ||</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;        kind == K_QOP_U       ||</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;        kind == K_QOP_CX      ||</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;        kind == K_QOP_RESET   ||</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;        kind == K_QOP_BARRIER ||</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;        kind == K_QOP_MEASURE;</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;}</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;<span class="comment">// -------------- Qubit Operation: Reset -----------------</span></div><div class="line"><a name="l00953"></a><span class="lineno"><a class="line" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#ae4a7e0da47e306c1c5d3878c6c61da9e">  953</a></span>&#160;<a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#ae4a7e0da47e306c1c5d3878c6c61da9e">efd::NDQOpReset::NDQOpReset</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> qaNode) : <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a>(K_QOP_RESET,</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;        <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDId</a>::Create(<span class="stringliteral">&quot;reset&quot;</span>),</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;        <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::Create(),</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;        <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::Create()) {</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;    <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>()-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">addChild</a>(std::move(qaNode));</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;}</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;</div><div class="line"><a name="l00960"></a><span class="lineno"><a class="line" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a48d635fc9db4958d55ea6fc2433b87eb">  960</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a48d635fc9db4958d55ea6fc2433b87eb">efd::NDQOpReset::getQArg</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;    <span class="keywordflow">return</span> mChild[I_QARGS]-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a>(I_ONLY);</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;}</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;</div><div class="line"><a name="l00964"></a><span class="lineno"><a class="line" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a0521bf5e0db35601cf780c72c852e263">  964</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a0521bf5e0db35601cf780c72c852e263">efd::NDQOpReset::setQArg</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> ref) {</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;    mChild[I_QARGS]-&gt;setChild(I_ONLY, std::move(ref));</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;}</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;</div><div class="line"><a name="l00968"></a><span class="lineno"><a class="line" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a04175033957718248b2fc868bb731893">  968</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a04175033957718248b2fc868bb731893">efd::NDQOpReset::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;}</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;</div><div class="line"><a name="l00972"></a><span class="lineno"><a class="line" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#aed3113fffea27fd6ff4bbae7cf47094f">  972</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#aed3113fffea27fd6ff4bbae7cf47094f">efd::NDQOpReset::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a64fd1348e51632b21afc694b1fff455b">NDQOpReset::Create</a>(getQArg()-&gt;clone());</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;}</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;</div><div class="line"><a name="l00976"></a><span class="lineno"><a class="line" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a4df71e364f30f675a92f96e45cd2b3e7">  976</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a4df71e364f30f675a92f96e45cd2b3e7">efd::NDQOpReset::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_QOP_RESET;</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;}</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;</div><div class="line"><a name="l00980"></a><span class="lineno"><a class="line" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a64fd1348e51632b21afc694b1fff455b">  980</a></span>&#160;<a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a3ba02e6b91ebddb852e875b846654292">efd::NDQOpReset::uRef</a> <a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a64fd1348e51632b21afc694b1fff455b">efd::NDQOpReset::Create</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> qaNode) {</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml">NDQOpReset</a>(std::move(qaNode)));</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;}</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<span class="comment">// -------------- Qubit Operation: Barrier -----------------</span></div><div class="line"><a name="l00985"></a><span class="lineno"><a class="line" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a0fe1f99d9b17cc922220a2a9810b5c42">  985</a></span>&#160;<a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a0fe1f99d9b17cc922220a2a9810b5c42">efd::NDQOpBarrier::NDQOpBarrier</a>(<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> qaNode) : <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a>(K_QOP_BARRIER,</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;        <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDId</a>::Create(<span class="stringliteral">&quot;barrier&quot;</span>), <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::Create(), <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(qaNode)) {</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;}</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;</div><div class="line"><a name="l00989"></a><span class="lineno"><a class="line" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a1a79a69f3a5d678a3d100b97f7d1e5c8">  989</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a1a79a69f3a5d678a3d100b97f7d1e5c8">efd::NDQOpBarrier::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;}</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;</div><div class="line"><a name="l00993"></a><span class="lineno"><a class="line" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a24dfe81706661429364d68c2f8433c5d">  993</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a24dfe81706661429364d68c2f8433c5d">efd::NDQOpBarrier::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;    <span class="keyword">auto</span> qargs = uniqueCastForward&lt;NDList&gt;(getQArgs()-&gt;clone());</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a5cc87c3a1cbbddc361110e7d6a975c9f">NDQOpBarrier::Create</a>(std::move(qargs));</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;}</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;</div><div class="line"><a name="l00998"></a><span class="lineno"><a class="line" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a4eab3d416a236eaea5636e8a75d5daaa">  998</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a4eab3d416a236eaea5636e8a75d5daaa">efd::NDQOpBarrier::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_QOP_BARRIER;</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;}</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;</div><div class="line"><a name="l01002"></a><span class="lineno"><a class="line" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a5cc87c3a1cbbddc361110e7d6a975c9f"> 1002</a></span>&#160;<a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a2f5870d97534b90a232ed110c21d67e7">efd::NDQOpBarrier::uRef</a> <a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a5cc87c3a1cbbddc361110e7d6a975c9f">efd::NDQOpBarrier::Create</a>(<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> qaNode) {</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">NDQOpBarrier</a>(std::move(qaNode)));</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;}</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;<span class="comment">// -------------- Qubit Operation: Measure -----------------</span></div><div class="line"><a name="l01007"></a><span class="lineno"><a class="line" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a86ebc66bcdc566301ba4e5bf1abef777"> 1007</a></span>&#160;<a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a86ebc66bcdc566301ba4e5bf1abef777">efd::NDQOpMeasure::NDQOpMeasure</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> qNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> cNode) :</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;    <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a>(K_QOP_MEASURE, <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDId</a>::Create(<span class="stringliteral">&quot;measure&quot;</span>), <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::Create(), <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::Create()) {</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(cNode));</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>()-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">addChild</a>(std::move(qNode));</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;}</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;</div><div class="line"><a name="l01013"></a><span class="lineno"><a class="line" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#aab6f10cef0b3a29bf065b3c62eedfbe0"> 1013</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#aab6f10cef0b3a29bf065b3c62eedfbe0">efd::NDQOpMeasure::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#ab696e3c3f4463ad2a126a1b335e5baca">NDQOpMeasure::Create</a>(getQBit()-&gt;clone(), getCBit()-&gt;clone());</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;}</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;</div><div class="line"><a name="l01017"></a><span class="lineno"><a class="line" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a96d21c24df543013ac4e88f537d40c9b"> 1017</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a96d21c24df543013ac4e88f537d40c9b">efd::NDQOpMeasure::getQBit</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;    <span class="keywordflow">return</span> mChild[I_QARGS]-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a>(I_QBIT);</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;}</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;</div><div class="line"><a name="l01021"></a><span class="lineno"><a class="line" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a59604a78cc748d47e9d3437dac0b2733"> 1021</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a59604a78cc748d47e9d3437dac0b2733">efd::NDQOpMeasure::setQBit</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> ref) {</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    mChild[I_QARGS]-&gt;setChild(I_QBIT, std::move(ref));</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;}</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;</div><div class="line"><a name="l01025"></a><span class="lineno"><a class="line" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#addcc5fd8d95d5790f75b643e88e76c7e"> 1025</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#addcc5fd8d95d5790f75b643e88e76c7e">efd::NDQOpMeasure::getCBit</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;    <span class="keywordflow">return</span> mChild[I_CBIT].get();</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;}</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;</div><div class="line"><a name="l01029"></a><span class="lineno"><a class="line" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a1fcda5f52e0186433fa0050dec6ff8d8"> 1029</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a1fcda5f52e0186433fa0050dec6ff8d8">efd::NDQOpMeasure::setCBit</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> ref) {</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;    setChild(I_CBIT, std::move(ref));</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;}</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;</div><div class="line"><a name="l01033"></a><span class="lineno"><a class="line" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a93a71ad0ee26929fa88cb366f3d5a212"> 1033</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a93a71ad0ee26929fa88cb366f3d5a212">efd::NDQOpMeasure::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;}</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;</div><div class="line"><a name="l01037"></a><span class="lineno"><a class="line" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#ae8000a4f62358d54ce0bf754200f8457"> 1037</a></span>&#160;uint32_t <a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#ae8000a4f62358d54ce0bf754200f8457">efd::NDQOpMeasure::getChildNumber</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;    <span class="keywordflow">return</span> 4;</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;}</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;</div><div class="line"><a name="l01041"></a><span class="lineno"><a class="line" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a4633ae31398d63e5f44247819052f334"> 1041</a></span>&#160;std::string <a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a4633ae31398d63e5f44247819052f334">efd::NDQOpMeasure::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;    std::string str;</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;    std::string endl = (pretty) ? <span class="stringliteral">&quot;\n&quot;</span> : <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;    str += getOperation();</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;    str += <span class="stringliteral">&quot; &quot;</span> + getQBit()-&gt;toString(pretty);</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;    str += <span class="stringliteral">&quot; -&gt;&quot;</span>;</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;    str += <span class="stringliteral">&quot; &quot;</span> + getCBit()-&gt;toString(pretty) + <span class="stringliteral">&quot;;&quot;</span>;</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;    str += endl;</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;}</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;</div><div class="line"><a name="l01056"></a><span class="lineno"><a class="line" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a8c50459305260cca277a82e45d68dba9"> 1056</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a8c50459305260cca277a82e45d68dba9">efd::NDQOpMeasure::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_QOP_MEASURE;</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;}</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;</div><div class="line"><a name="l01060"></a><span class="lineno"><a class="line" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#ab696e3c3f4463ad2a126a1b335e5baca"> 1060</a></span>&#160;<a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a957b80b216bde882185bf3990e60669f">efd::NDQOpMeasure::uRef</a> <a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#ab696e3c3f4463ad2a126a1b335e5baca">efd::NDQOpMeasure::Create</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> qNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> cNode) {</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">NDQOpMeasure</a>(std::move(qNode), std::move(cNode)));</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;}</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;<span class="comment">// -------------- Qubit Operation: U -----------------</span></div><div class="line"><a name="l01065"></a><span class="lineno"><a class="line" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a21cd5b24ccc7dcadf57c80b619544ede"> 1065</a></span>&#160;<a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a21cd5b24ccc7dcadf57c80b619544ede">efd::NDQOpU::NDQOpU</a>(<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> aNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> qaNode) : <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a>(K_QOP_U,</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;        <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDId</a>::Create(<span class="stringliteral">&quot;U&quot;</span>), <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(aNode), <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::Create()) {</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;    <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>()-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">addChild</a>(std::move(qaNode));</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;}</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;</div><div class="line"><a name="l01070"></a><span class="lineno"><a class="line" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#ae838a9f802b7225b1a0909fb205779a4"> 1070</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#ae838a9f802b7225b1a0909fb205779a4">efd::NDQOpU::getQArg</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;    <span class="keywordflow">return</span> mChild[I_QARGS]-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a>(I_ONLY);</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;}</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;</div><div class="line"><a name="l01074"></a><span class="lineno"><a class="line" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a300b862eb501b2cf6a8311377136bf72"> 1074</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a300b862eb501b2cf6a8311377136bf72">efd::NDQOpU::setQArg</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> ref) {</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;    mChild[I_QARGS]-&gt;setChild(I_ONLY, std::move(ref));</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;}</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;</div><div class="line"><a name="l01078"></a><span class="lineno"><a class="line" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#ac3c6ffbc8336e63ad5bf9565f432a262"> 1078</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#ac3c6ffbc8336e63ad5bf9565f432a262">efd::NDQOpU::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;}</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;</div><div class="line"><a name="l01082"></a><span class="lineno"><a class="line" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a2b028b7cc329c76706aca9093fae669f"> 1082</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a2b028b7cc329c76706aca9093fae669f">efd::NDQOpU::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;    <span class="keyword">auto</span> args = uniqueCastForward&lt;NDList&gt;(getArgs()-&gt;clone());</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a57d2d0780b75ad6459a9852dfc5d1e8e">NDQOpU::Create</a>(std::move(args), getQArg()-&gt;clone());</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;}</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;</div><div class="line"><a name="l01087"></a><span class="lineno"><a class="line" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#aae903f67fc7e13b33875e14df41328ff"> 1087</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#aae903f67fc7e13b33875e14df41328ff">efd::NDQOpU::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_QOP_U;</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;}</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;</div><div class="line"><a name="l01091"></a><span class="lineno"><a class="line" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a57d2d0780b75ad6459a9852dfc5d1e8e"> 1091</a></span>&#160;<a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a496b70278a8dc630d9d9be39c676f5b6">efd::NDQOpU::uRef</a> <a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a57d2d0780b75ad6459a9852dfc5d1e8e">efd::NDQOpU::Create</a>(<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> aNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> qaNode) {</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">NDQOpU</a>(std::move(aNode), std::move(qaNode)));</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;}</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;<span class="comment">// -------------- Qubit Operation: CX -----------------</span></div><div class="line"><a name="l01096"></a><span class="lineno"><a class="line" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a08e8820de72b06cef7853bcf2118a2c7"> 1096</a></span>&#160;<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a08e8820de72b06cef7853bcf2118a2c7">efd::NDQOpCX::NDQOpCX</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhsNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhsNode) : <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a>(K_QOP_CX,</div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;        <a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml">NDId</a>::Create(<span class="stringliteral">&quot;CX&quot;</span>), <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::Create(), <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml">NDList</a>::Create()) {</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;    <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>()-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">addChild</a>(std::move(lhsNode));</div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;    <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">getQArgs</a>()-&gt;<a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">addChild</a>(std::move(rhsNode));</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;}</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;</div><div class="line"><a name="l01102"></a><span class="lineno"><a class="line" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#aebb2d70f1197065d1b127c2925dd33e6"> 1102</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#aebb2d70f1197065d1b127c2925dd33e6">efd::NDQOpCX::getLhs</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;    <span class="keywordflow">return</span> mChild[I_QARGS]-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a>(I_LHS);</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;}</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;</div><div class="line"><a name="l01106"></a><span class="lineno"><a class="line" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a78a4447b7eebbca4ce27c1a3d34fb402"> 1106</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a78a4447b7eebbca4ce27c1a3d34fb402">efd::NDQOpCX::setLhs</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> ref) {</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;    mChild[I_QARGS]-&gt;setChild(I_LHS, std::move(ref));</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;}</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;</div><div class="line"><a name="l01110"></a><span class="lineno"><a class="line" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a7b526a26be080f963c70e7001b7e9ff5"> 1110</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a7b526a26be080f963c70e7001b7e9ff5">efd::NDQOpCX::getRhs</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;    <span class="keywordflow">return</span> mChild[I_QARGS]-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">getChild</a>(I_RHS);</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;}</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;</div><div class="line"><a name="l01114"></a><span class="lineno"><a class="line" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#ad3e6eee14fad4c750688c2d8d81d8d48"> 1114</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#ad3e6eee14fad4c750688c2d8d81d8d48">efd::NDQOpCX::setRhs</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> ref) {</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;    mChild[I_QARGS]-&gt;setChild(I_RHS, std::move(ref));</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;}</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;</div><div class="line"><a name="l01118"></a><span class="lineno"><a class="line" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a9daad9622a9627e6264cc5f0fa079f0f"> 1118</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a9daad9622a9627e6264cc5f0fa079f0f">efd::NDQOpCX::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;}</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;</div><div class="line"><a name="l01122"></a><span class="lineno"><a class="line" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a3c1603045c035cfc0cf00800689fd5b4"> 1122</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a3c1603045c035cfc0cf00800689fd5b4">efd::NDQOpCX::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a212123bd45372604e87dd73fb9969e03">NDQOpCX::Create</a>(getLhs()-&gt;clone(), getRhs()-&gt;clone());</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;}</div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;</div><div class="line"><a name="l01126"></a><span class="lineno"><a class="line" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a65aa7f7e6b3c1f6f04c7d0593a7f9f05"> 1126</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a65aa7f7e6b3c1f6f04c7d0593a7f9f05">efd::NDQOpCX::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_QOP_CX;</div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;}</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;</div><div class="line"><a name="l01130"></a><span class="lineno"><a class="line" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a212123bd45372604e87dd73fb9969e03"> 1130</a></span>&#160;<a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a5648f9a753dd9447321c0d357f2c6bf7">efd::NDQOpCX::uRef</a> <a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a212123bd45372604e87dd73fb9969e03">efd::NDQOpCX::Create</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhsNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhsNode) {</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">NDQOpCX</a>(std::move(lhsNode), std::move(rhsNode)));</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;}</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;<span class="comment">// -------------- Qubit Operation: Generic -----------------</span></div><div class="line"><a name="l01135"></a><span class="lineno"><a class="line" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a14c6ee12f965af69fa948af221146d1f"> 1135</a></span>&#160;<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a14c6ee12f965af69fa948af221146d1f">efd::NDQOpGen::NDQOpGen</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> aNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> qaNode) :</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;    <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a>(K_QOP_GEN, <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(idNode), <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(aNode), <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(qaNode)),</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;    mIK(static_cast&lt;<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">IntrinsicKind</a>&gt;(0)), mIsIntrinsic(false) {}</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;</div><div class="line"><a name="l01139"></a><span class="lineno"><a class="line" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a2334f46b3e6d6b273409f5b9a7181e0b"> 1139</a></span>&#160;<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a14c6ee12f965af69fa948af221146d1f">efd::NDQOpGen::NDQOpGen</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> aNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> qaNode,</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;        <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">IntrinsicKind</a> ik) :</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;    <a class="code" href="../../dd/d94/classefd_1_1NDQOp.xhtml">NDQOp</a>(K_QOP_GEN, <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(idNode), <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(aNode), <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::move(qaNode)),</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;    mIK(ik), mIsIntrinsic(true) {}</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;</div><div class="line"><a name="l01144"></a><span class="lineno"><a class="line" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a7a5a05b65b0a861b0ef9cc07a61452fc"> 1144</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a7a5a05b65b0a861b0ef9cc07a61452fc">efd::NDQOpGen::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;}</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;</div><div class="line"><a name="l01148"></a><span class="lineno"><a class="line" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#abbd4435ec926c38719e8af49bb89af6d"> 1148</a></span>&#160;<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">efd::NDQOpGen::IntrinsicKind</a> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#abbd4435ec926c38719e8af49bb89af6d">efd::NDQOpGen::getIntrinsicKind</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;    <span class="keywordflow">if</span> (!mIsIntrinsic) {</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">efd::ERR</a> &lt;&lt; <span class="stringliteral">&quot;Trying to get IntrinsicKind of non-intrinsic node.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">efd::ExitCode::EXIT_unreachable</a>);</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;    }</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;    <span class="keywordflow">return</span> mIK;</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;}</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;</div><div class="line"><a name="l01157"></a><span class="lineno"><a class="line" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a00f1b64c13766964893ec0cdb42bafdf"> 1157</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a00f1b64c13766964893ec0cdb42bafdf">efd::NDQOpGen::isIntrinsic</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;    <span class="keywordflow">return</span> mIsIntrinsic;</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;}</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;</div><div class="line"><a name="l01161"></a><span class="lineno"><a class="line" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a78b895bd673cec64f142938ad2d0940d"> 1161</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a78b895bd673cec64f142938ad2d0940d">efd::NDQOpGen::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;    <span class="keyword">auto</span> <span class="keywordtype">id</span> = uniqueCastForward&lt;NDId&gt;(getId()-&gt;clone());</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;    <span class="keyword">auto</span> args = uniqueCastForward&lt;NDList&gt;(getArgs()-&gt;clone());</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;    <span class="keyword">auto</span> qargs = uniqueCastForward&lt;NDList&gt;(getQArgs()-&gt;clone());</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;    <span class="keyword">auto</span> cloned = <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">NDQOpGen::Create</a>(std::move(<span class="keywordtype">id</span>), std::move(args), std::move(qargs));</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;    cloned-&gt;mIsIntrinsic = mIsIntrinsic;</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;    cloned-&gt;mIK = mIK;</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a>(cloned.release());</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;}</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;</div><div class="line"><a name="l01173"></a><span class="lineno"><a class="line" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#aa78b124a77ff782c2c6b926b0c389b7b"> 1173</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#aa78b124a77ff782c2c6b926b0c389b7b">efd::NDQOpGen::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_QOP_GEN;</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;}</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;</div><div class="line"><a name="l01177"></a><span class="lineno"><a class="line" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435"> 1177</a></span>&#160;<a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#aa0024416b2fe7237d8b344e8e77236da">efd::NDQOpGen::uRef</a> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">efd::NDQOpGen::Create</a>(<a class="code" href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">NDId::uRef</a> idNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> aNode, <a class="code" href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">NDList::uRef</a> qaNode) {</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">NDQOpGen</a>(std::move(idNode), std::move(aNode), std::move(qaNode)));</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;}</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;<span class="comment">// -------------- Binary Operation -----------------</span></div><div class="line"><a name="l01182"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a2e104ba9e32eba8e0cff96c9241a0b61"> 1182</a></span>&#160;<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a2e104ba9e32eba8e0cff96c9241a0b61">efd::NDBinOp::NDBinOp</a>(<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ad1e9a2c7503a34349435cadc44269efc">OpType</a> t, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhsNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhsNode) :</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>(K_BINOP), mT(t) {</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(lhsNode));</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(rhsNode));</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;}</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;</div><div class="line"><a name="l01188"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a342aa44dbb2cd53f78bf046931896baf"> 1188</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a342aa44dbb2cd53f78bf046931896baf">efd::NDBinOp::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ab7b3e5153777a8cbd64b201c8c9488e0">NDBinOp::Create</a>(mT, getLhs()-&gt;clone(), getRhs()-&gt;clone());</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;}</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;</div><div class="line"><a name="l01192"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aedf48dcf74c1dca8921de77810fbaf6f"> 1192</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aedf48dcf74c1dca8921de77810fbaf6f">efd::NDBinOp::getLhs</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;    <span class="keywordflow">return</span> mChild[I_LHS].get();</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;}</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;</div><div class="line"><a name="l01196"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ae263dbaa2c41c342fbd3bcdc78a4b2e5"> 1196</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ae263dbaa2c41c342fbd3bcdc78a4b2e5">efd::NDBinOp::setLhs</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> ref) {</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;    setChild(I_LHS, std::move(ref));</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;}</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;</div><div class="line"><a name="l01200"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#af9332258a8ee96b82352e2a04d2e3af1"> 1200</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#af9332258a8ee96b82352e2a04d2e3af1">efd::NDBinOp::getRhs</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;    <span class="keywordflow">return</span> mChild[I_RHS].get();</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;}</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;</div><div class="line"><a name="l01204"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a0a3f2e7e3582b6d4e1880ea26caeb248"> 1204</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a0a3f2e7e3582b6d4e1880ea26caeb248">efd::NDBinOp::setRhs</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> ref) {</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;    setChild(I_RHS, std::move(ref));</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;}</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;</div><div class="line"><a name="l01208"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a318c6647873cd2a5eb0dc400322fd34a"> 1208</a></span>&#160;<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ad1e9a2c7503a34349435cadc44269efc">efd::NDBinOp::OpType</a> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a318c6647873cd2a5eb0dc400322fd34a">efd::NDBinOp::getOpType</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;    <span class="keywordflow">return</span> mT;</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;}</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;</div><div class="line"><a name="l01212"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aea7bbf91c09d7683ae00baf647db6fb9"> 1212</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aea7bbf91c09d7683ae00baf647db6fb9">efd::NDBinOp::isAdd</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;    <span class="keywordflow">return</span> mT == OP_ADD;</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;}</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;</div><div class="line"><a name="l01216"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a2c9159d9bb0c60ea9031455fdb4b4d1c"> 1216</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a2c9159d9bb0c60ea9031455fdb4b4d1c">efd::NDBinOp::isSub</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;    <span class="keywordflow">return</span> mT == OP_SUB;</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;}</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;</div><div class="line"><a name="l01220"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ad64e954d4f1c1b86a973e90828dbf80a"> 1220</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ad64e954d4f1c1b86a973e90828dbf80a">efd::NDBinOp::isMul</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;    <span class="keywordflow">return</span> mT == OP_MUL;</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;}</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;</div><div class="line"><a name="l01224"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a1ef3dcf23e3d8a378f5da8d56290abfe"> 1224</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a1ef3dcf23e3d8a378f5da8d56290abfe">efd::NDBinOp::isDiv</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;    <span class="keywordflow">return</span> mT == OP_DIV;</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;}</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;</div><div class="line"><a name="l01228"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a203683f7dce3a7876008fc124762c4ac"> 1228</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a203683f7dce3a7876008fc124762c4ac">efd::NDBinOp::isPow</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;    <span class="keywordflow">return</span> mT == OP_POW;</div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;}</div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;</div><div class="line"><a name="l01232"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a99a5487db42f591be4f61af3f28b7a47"> 1232</a></span>&#160;std::string <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a99a5487db42f591be4f61af3f28b7a47">efd::NDBinOp::getOperation</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;    <span class="keywordflow">switch</span> (mT) {</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;        <span class="keywordflow">case</span> OP_ADD: <span class="keywordflow">return</span> <span class="stringliteral">&quot;+&quot;</span>;</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;        <span class="keywordflow">case</span> OP_SUB: <span class="keywordflow">return</span> <span class="stringliteral">&quot;-&quot;</span>;</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;        <span class="keywordflow">case</span> OP_MUL: <span class="keywordflow">return</span> <span class="stringliteral">&quot;*&quot;</span>;</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;        <span class="keywordflow">case</span> OP_DIV: <span class="keywordflow">return</span> <span class="stringliteral">&quot;/&quot;</span>;</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;        <span class="keywordflow">case</span> OP_POW: <span class="keywordflow">return</span> <span class="stringliteral">&quot;^&quot;</span>;</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;                     <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">efd::ERR</a> &lt;&lt; <span class="stringliteral">&quot;Unknown binary operation.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;                     <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">efd::ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;    }</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;}</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;</div><div class="line"><a name="l01245"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ae5905627dcd4e9e0e1d3b4cc83d00fb5"> 1245</a></span>&#160;uint32_t <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ae5905627dcd4e9e0e1d3b4cc83d00fb5">efd::NDBinOp::getChildNumber</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;    <span class="keywordflow">return</span> 2;</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;}</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;</div><div class="line"><a name="l01249"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a7892ad23ac0e087ce29e5ac2492d9d1f"> 1249</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a7892ad23ac0e087ce29e5ac2492d9d1f">efd::NDBinOp::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;}</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;</div><div class="line"><a name="l01253"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a181e64951cf190bee4296ef1c4933b5f"> 1253</a></span>&#160;std::string <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a181e64951cf190bee4296ef1c4933b5f">efd::NDBinOp::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;    std::string str;</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;    str += <span class="stringliteral">&quot;(&quot;</span>;</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;    str += getLhs()-&gt;toString(pretty);</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;    str += <span class="stringliteral">&quot; &quot;</span> + getOperation() + <span class="stringliteral">&quot; &quot;</span>;</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;    str += getRhs()-&gt;toString(pretty);</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;    str += <span class="stringliteral">&quot;)&quot;</span>;</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;}</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;</div><div class="line"><a name="l01265"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a1e53690d306232c495e7ef02b6c70b8d"> 1265</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a1e53690d306232c495e7ef02b6c70b8d">efd::NDBinOp::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_BINOP;</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;}</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;</div><div class="line"><a name="l01269"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ab7b3e5153777a8cbd64b201c8c9488e0"> 1269</a></span>&#160;<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a7d909c7f0548ad3ed4f3f182aebf7fd5">efd::NDBinOp::uRef</a> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ab7b3e5153777a8cbd64b201c8c9488e0">efd::NDBinOp::Create</a>(<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ad1e9a2c7503a34349435cadc44269efc">OpType</a> t, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhsNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhsNode) {</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml">NDBinOp</a>(t, std::move(lhsNode), std::move(rhsNode)));</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;}</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;</div><div class="line"><a name="l01273"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aa91e672a6d6aa653e33949fbaf59df8f"> 1273</a></span>&#160;<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a7d909c7f0548ad3ed4f3f182aebf7fd5">efd::NDBinOp::uRef</a> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aa91e672a6d6aa653e33949fbaf59df8f">efd::NDBinOp::CreateAdd</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhsNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhsNode) {</div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;    <span class="keywordflow">return</span> Create(OP_ADD, std::move(lhsNode), std::move(rhsNode));</div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;}</div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;</div><div class="line"><a name="l01277"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a3809795c7a8478c1dfc8311d5c639d70"> 1277</a></span>&#160;<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a7d909c7f0548ad3ed4f3f182aebf7fd5">efd::NDBinOp::uRef</a> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a3809795c7a8478c1dfc8311d5c639d70">efd::NDBinOp::CreateSub</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhsNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhsNode) {</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;    <span class="keywordflow">return</span> Create(OP_SUB, std::move(lhsNode), std::move(rhsNode));</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;}</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;</div><div class="line"><a name="l01281"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a565faf594a937079abeb8b4405714e37"> 1281</a></span>&#160;<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a7d909c7f0548ad3ed4f3f182aebf7fd5">efd::NDBinOp::uRef</a> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a565faf594a937079abeb8b4405714e37">efd::NDBinOp::CreateMul</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhsNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhsNode) {</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;    <span class="keywordflow">return</span> Create(OP_MUL, std::move(lhsNode), std::move(rhsNode));</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;}</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;</div><div class="line"><a name="l01285"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a005c9240c3716542d09847e51ad1d40b"> 1285</a></span>&#160;<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a7d909c7f0548ad3ed4f3f182aebf7fd5">efd::NDBinOp::uRef</a> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a005c9240c3716542d09847e51ad1d40b">efd::NDBinOp::CreateDiv</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhsNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhsNode) {</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;    <span class="keywordflow">return</span> Create(OP_DIV, std::move(lhsNode), std::move(rhsNode));</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;}</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;</div><div class="line"><a name="l01289"></a><span class="lineno"><a class="line" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aa0576bf2656b3dc64f299ca7ad20fdfa"> 1289</a></span>&#160;<a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a7d909c7f0548ad3ed4f3f182aebf7fd5">efd::NDBinOp::uRef</a> <a class="code" href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aa0576bf2656b3dc64f299ca7ad20fdfa">efd::NDBinOp::CreatePow</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> lhsNode, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> rhsNode) {</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;    <span class="keywordflow">return</span> Create(OP_POW, std::move(lhsNode), std::move(rhsNode));</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;}</div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;<span class="comment">// -------------- Unary Operation -----------------</span></div><div class="line"><a name="l01294"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a535ceee9c756aaf0b2695979b54e5c6f"> 1294</a></span>&#160;<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a535ceee9c756aaf0b2695979b54e5c6f">efd::NDUnaryOp::NDUnaryOp</a>(<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a9c340d503089a923921b083846841502">UOpType</a> t, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> oNode) : <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>(K_UNARYOP), mT(t) {</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">innerAddChild</a>(std::move(oNode));</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;}</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;</div><div class="line"><a name="l01298"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a7956650a64a0fa320241abe08e38de6b"> 1298</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a7956650a64a0fa320241abe08e38de6b">efd::NDUnaryOp::cloneImpl</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a9c638d16bea31baeb3c4b303f3b76591">NDUnaryOp::Create</a>(mT, getOperand()-&gt;clone());</div><div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;}</div><div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;</div><div class="line"><a name="l01302"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a49458be3821071e4a2b9b06f360269d7"> 1302</a></span>&#160;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node::Ref</a> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a49458be3821071e4a2b9b06f360269d7">efd::NDUnaryOp::getOperand</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;    <span class="keywordflow">return</span> mChild[I_ONLY].get();</div><div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;}</div><div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;</div><div class="line"><a name="l01306"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a298b237ca7bafa0b289a2758921199f2"> 1306</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a298b237ca7bafa0b289a2758921199f2">efd::NDUnaryOp::setOperand</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> ref) {</div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;    setChild(I_ONLY, std::move(ref));</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;}</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;</div><div class="line"><a name="l01310"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a5093adc24b1e37086e2596494df904d7"> 1310</a></span>&#160;<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a9c340d503089a923921b083846841502">efd::NDUnaryOp::UOpType</a> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a5093adc24b1e37086e2596494df904d7">efd::NDUnaryOp::getUOpType</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;    <span class="keywordflow">return</span> mT;</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;}</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;</div><div class="line"><a name="l01314"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#afc4cabda284ad7319a38466d6c80e115"> 1314</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#afc4cabda284ad7319a38466d6c80e115">efd::NDUnaryOp::isSin</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;    <span class="keywordflow">return</span> mT == UOP_SIN;</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;}</div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;</div><div class="line"><a name="l01318"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a89178f510554f507cd76a0c179766668"> 1318</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a89178f510554f507cd76a0c179766668">efd::NDUnaryOp::isCos</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;    <span class="keywordflow">return</span> mT == UOP_COS;</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;}</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;</div><div class="line"><a name="l01322"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a6b20e84bf4ce49728abe924942892f18"> 1322</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a6b20e84bf4ce49728abe924942892f18">efd::NDUnaryOp::isTan</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;    <span class="keywordflow">return</span> mT == UOP_TAN;</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;}</div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;</div><div class="line"><a name="l01326"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ad54fdfb2ed095fa0d15774fbcbe1f56f"> 1326</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ad54fdfb2ed095fa0d15774fbcbe1f56f">efd::NDUnaryOp::isExp</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;    <span class="keywordflow">return</span> mT == UOP_EXP;</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;}</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;</div><div class="line"><a name="l01330"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ab06581fe1876befc86413c64a3e5b093"> 1330</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ab06581fe1876befc86413c64a3e5b093">efd::NDUnaryOp::isLn</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;    <span class="keywordflow">return</span> mT == UOP_LN;</div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;}</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;</div><div class="line"><a name="l01334"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a002ff4bd8e4f9857bc9bce50a73a3ee7"> 1334</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a002ff4bd8e4f9857bc9bce50a73a3ee7">efd::NDUnaryOp::isSqrt</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;    <span class="keywordflow">return</span> mT == UOP_SQRT;</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;}</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;</div><div class="line"><a name="l01338"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a1e32be8e4a32f9fb4c02494cd4011b4b"> 1338</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a1e32be8e4a32f9fb4c02494cd4011b4b">efd::NDUnaryOp::isNeg</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;    <span class="keywordflow">return</span> mT == UOP_NEG;</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;}</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;</div><div class="line"><a name="l01342"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a0f0a6031794efd079f9feabd3158d8ec"> 1342</a></span>&#160;std::string <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a0f0a6031794efd079f9feabd3158d8ec">efd::NDUnaryOp::getOperation</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;    <span class="keywordflow">switch</span> (mT) {</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;        <span class="keywordflow">case</span> UOP_SIN:   <span class="keywordflow">return</span> <span class="stringliteral">&quot;sin&quot;</span>;</div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;        <span class="keywordflow">case</span> UOP_COS:   <span class="keywordflow">return</span> <span class="stringliteral">&quot;cos&quot;</span>;</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;        <span class="keywordflow">case</span> UOP_TAN:   <span class="keywordflow">return</span> <span class="stringliteral">&quot;tan&quot;</span>;</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;        <span class="keywordflow">case</span> UOP_EXP:   <span class="keywordflow">return</span> <span class="stringliteral">&quot;exp&quot;</span>;</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;        <span class="keywordflow">case</span> UOP_LN:    <span class="keywordflow">return</span> <span class="stringliteral">&quot;ln&quot;</span>;</div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;        <span class="keywordflow">case</span> UOP_SQRT:  <span class="keywordflow">return</span> <span class="stringliteral">&quot;sqrt&quot;</span>;</div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;        <span class="keywordflow">case</span> UOP_NEG:   <span class="keywordflow">return</span> <span class="stringliteral">&quot;-&quot;</span>;</div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;                        <a class="code" href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">efd::ERR</a> &lt;&lt; <span class="stringliteral">&quot;Unknown unary operation.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;                        <a class="code" href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">efd::ExitCode::EXIT_unknown_resource</a>);</div><div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;    }</div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;}</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;</div><div class="line"><a name="l01357"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a1d11fded9d8c28fdcb81cb01bbe372bb"> 1357</a></span>&#160;uint32_t <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a1d11fded9d8c28fdcb81cb01bbe372bb">efd::NDUnaryOp::getChildNumber</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;    <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;}</div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;</div><div class="line"><a name="l01361"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ab000b532a5c1dd5476db17cdb10f8992"> 1361</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ab000b532a5c1dd5476db17cdb10f8992">efd::NDUnaryOp::apply</a>(<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">NodeVisitor::Ref</a> visitor) {</div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;    visitor-&gt;<a class="code" href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">visit</a>(<span class="keyword">this</span>);</div><div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;}</div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;</div><div class="line"><a name="l01365"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#aa9eefac83e52493749b566a8ab76ed4d"> 1365</a></span>&#160;std::string <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#aa9eefac83e52493749b566a8ab76ed4d">efd::NDUnaryOp::toString</a>(<span class="keywordtype">bool</span> pretty)<span class="keyword"> const </span>{</div><div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;    std::string str;</div><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;</div><div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;    <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node::Ref</a> refOperand = getOperand();</div><div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;    <span class="keywordflow">if</span> (mT == UOP_NEG) {</div><div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;        str += <span class="stringliteral">&quot;(&quot;</span>;</div><div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;        str += getOperation();</div><div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;        str += refOperand-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>(pretty);</div><div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;        str += <span class="stringliteral">&quot;)&quot;</span>;</div><div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;        str += getOperation();</div><div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;        str += <span class="stringliteral">&quot;(&quot;</span> + refOperand-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">toString</a>(pretty) + <span class="stringliteral">&quot;)&quot;</span>;</div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;    }</div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;</div><div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;    <span class="keywordflow">return</span> str;</div><div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;}</div><div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;</div><div class="line"><a name="l01382"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ab70ffd27405485bedbd9a34e388bf892"> 1382</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ab70ffd27405485bedbd9a34e388bf892">efd::NDUnaryOp::ClassOf</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>* node) {</div><div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;    <span class="keywordflow">return</span> node-&gt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">getKind</a>() == K_UNARYOP;</div><div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;}</div><div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;</div><div class="line"><a name="l01386"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a9c638d16bea31baeb3c4b303f3b76591"> 1386</a></span>&#160;<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a3e110263b52d0e309ac28c93ee0d3c46">efd::NDUnaryOp::uRef</a> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a9c638d16bea31baeb3c4b303f3b76591">efd::NDUnaryOp::Create</a>(<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a9c340d503089a923921b083846841502">UOpType</a> t, <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> oNode) {</div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">NDUnaryOp</a>(t, std::move(oNode)));</div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;}</div><div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;</div><div class="line"><a name="l01390"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a7fc818cbd70235a9a122920c17e086a9"> 1390</a></span>&#160;<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a3e110263b52d0e309ac28c93ee0d3c46">efd::NDUnaryOp::uRef</a> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a7fc818cbd70235a9a122920c17e086a9">efd::NDUnaryOp::CreateNeg</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> oNode) {</div><div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">NDUnaryOp</a>(UOP_NEG, std::move(oNode)));</div><div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;}</div><div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;</div><div class="line"><a name="l01394"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a5cf247e03405e894b54db2cbcee03709"> 1394</a></span>&#160;<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a3e110263b52d0e309ac28c93ee0d3c46">efd::NDUnaryOp::uRef</a> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a5cf247e03405e894b54db2cbcee03709">efd::NDUnaryOp::CreateSin</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> oNode) {</div><div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">NDUnaryOp</a>(UOP_SIN, std::move(oNode)));</div><div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;}</div><div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;</div><div class="line"><a name="l01398"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a01ee4e695f78387b453ebebc4dcf8e07"> 1398</a></span>&#160;<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a3e110263b52d0e309ac28c93ee0d3c46">efd::NDUnaryOp::uRef</a> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a01ee4e695f78387b453ebebc4dcf8e07">efd::NDUnaryOp::CreateCos</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> oNode) {</div><div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">NDUnaryOp</a>(UOP_COS, std::move(oNode)));</div><div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;}</div><div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;</div><div class="line"><a name="l01402"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a223896e8018391ff6474cde133040ba6"> 1402</a></span>&#160;<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a3e110263b52d0e309ac28c93ee0d3c46">efd::NDUnaryOp::uRef</a> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a223896e8018391ff6474cde133040ba6">efd::NDUnaryOp::CreateTan</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> oNode) {</div><div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">NDUnaryOp</a>(UOP_TAN, std::move(oNode)));</div><div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;}</div><div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;</div><div class="line"><a name="l01406"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a9524b79f4d0692977e6eea0b3aa2ec31"> 1406</a></span>&#160;<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a3e110263b52d0e309ac28c93ee0d3c46">efd::NDUnaryOp::uRef</a> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a9524b79f4d0692977e6eea0b3aa2ec31">efd::NDUnaryOp::CreateExp</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> oNode) {</div><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">NDUnaryOp</a>(UOP_EXP, std::move(oNode)));</div><div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;}</div><div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;</div><div class="line"><a name="l01410"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ac17db26c5c73505651c482b03fde13e2"> 1410</a></span>&#160;<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a3e110263b52d0e309ac28c93ee0d3c46">efd::NDUnaryOp::uRef</a> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ac17db26c5c73505651c482b03fde13e2">efd::NDUnaryOp::CreateLn</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> oNode) {</div><div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">NDUnaryOp</a>(UOP_LN, std::move(oNode)));</div><div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;}</div><div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;</div><div class="line"><a name="l01414"></a><span class="lineno"><a class="line" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#affb063b685141e014014e5f32c89cef9"> 1414</a></span>&#160;<a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a3e110263b52d0e309ac28c93ee0d3c46">efd::NDUnaryOp::uRef</a> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#affb063b685141e014014e5f32c89cef9">efd::NDUnaryOp::CreateSqrt</a>(<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">Node::uRef</a> oNode) {</div><div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">NDUnaryOp</a>(UOP_SQRT, std::move(oNode)));</div><div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;}</div><div class="ttc" id="classefd_1_1NDQOpReset_xhtml_a0521bf5e0db35601cf780c72c852e263"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a0521bf5e0db35601cf780c72c852e263">efd::NDQOpReset::setQArg</a></div><div class="ttdeci">void setQArg(Node::uRef ref)</div><div class="ttdoc">Sets the quantum argument. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00964">Nodes.cpp:964</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_aeed807d0af0556f34747b69cc1bc4d00"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#aeed807d0af0556f34747b69cc1bc4d00">efd::NDGateSign::getOperation</a></div><div class="ttdeci">std::string getOperation() const override</div><div class="ttdoc">Returns a std::string representation of the operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00750">Nodes.cpp:750</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml_aa45195dbaf1b921fcece3cac5caaceac"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#aa45195dbaf1b921fcece3cac5caaceac">efd::NDGateDecl::getGOpList</a></div><div class="ttdeci">NDGOpList::Ref getGOpList() const</div><div class="ttdoc">Gets the goplist node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00804">Nodes.cpp:804</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_acc71dbce09e07537b5cc0cf18b48e803"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#acc71dbce09e07537b5cc0cf18b48e803">efd::NDRegDecl::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00265">Nodes.cpp:265</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_aab6f10cef0b3a29bf065b3c62eedfbe0"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#aab6f10cef0b3a29bf065b3c62eedfbe0">efd::NDQOpMeasure::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01013">Nodes.cpp:1013</a></div></div>
<div class="ttc" id="classefd_1_1NodeVisitor_xhtml"><div class="ttname"><a href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml">efd::NodeVisitor</a></div><div class="ttdoc">Interface class to be used as a visitor. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d8d/NodeVisitor_8h_source.xhtml#l00009">NodeVisitor.h:9</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a1b34233ca3738b39d85ece7519a35dde"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a1b34233ca3738b39d85ece7519a35dde">efd::NDList::~NDList</a></div><div class="ttdeci">virtual ~NDList()</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00338">Nodes.cpp:338</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a5cf247e03405e894b54db2cbcee03709"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a5cf247e03405e894b54db2cbcee03709">efd::NDUnaryOp::CreateSin</a></div><div class="ttdeci">static uRef CreateSin(Node::uRef oNode)</div><div class="ttdoc">Creates a sin unary operand node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01394">Nodes.cpp:1394</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a09d052b58e537bb983993baa68ab1cc9"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a09d052b58e537bb983993baa68ab1cc9">efd::Node::equalsImpl</a></div><div class="ttdeci">virtual bool equalsImpl(Node::Ref ref) const</div><div class="ttdoc">Extend the &amp;#39;equals&amp;#39; implementation by implementing this method. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00094">Nodes.cpp:94</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a08ec207974cdeaf086c7978dc23b9a30"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a08ec207974cdeaf086c7978dc23b9a30">efd::NDInclude::getFilename</a></div><div class="ttdeci">NDString::Ref getFilename() const</div><div class="ttdoc">Gets the node that holds the filename. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00675">Nodes.cpp:675</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_afa0e025feffceae58b6484eebb5a7754"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#afa0e025feffceae58b6484eebb5a7754">efd::NDInclude::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00671">Nodes.cpp:671</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a2c3fab44d60678aba91904ff92f5084c"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a2c3fab44d60678aba91904ff92f5084c">efd::NDGateSign::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDGateSign &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00502">Nodes.h:502</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a056f1e35a72b685798c0025722181357"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a056f1e35a72b685798c0025722181357">efd::NDGateSign::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00754">Nodes.cpp:754</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_a8c50459305260cca277a82e45d68dba9"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a8c50459305260cca277a82e45d68dba9">efd::NDQOpMeasure::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01056">Nodes.cpp:1056</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a3809795c7a8478c1dfc8311d5c639d70"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a3809795c7a8478c1dfc8311d5c639d70">efd::NDBinOp::CreateSub</a></div><div class="ttdeci">static uRef CreateSub(Node::uRef lhsNode, Node::uRef rhsNode)</div><div class="ttdoc">Creates a new binary subtraction node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01277">Nodes.cpp:1277</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a081605b4c294930734e9d93b34ef85d0"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a081605b4c294930734e9d93b34ef85d0">efd::NDGateSign::getQArgs</a></div><div class="ttdeci">NDList::Ref getQArgs() const</div><div class="ttdoc">Gets the qargs node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00742">Nodes.cpp:742</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_af9be5b386325a1d50ff7e2e2bfe1c8d3"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af9be5b386325a1d50ff7e2e2bfe1c8d3">efd::NDRegDecl::Create</a></div><div class="ttdeci">static std::unique_ptr&lt; NDRegDecl &gt; Create(Type t, NDId::uRef idNode, NDInt::uRef sizeNode)</div><div class="ttdoc">Creates a new register node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00269">Nodes.cpp:269</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_af3487901a239a99750dc5dcdc3a8c868"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#af3487901a239a99750dc5dcdc3a8c868">efd::ExitWith</a></div><div class="ttdeci">void ExitWith(ExitCode e)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d72/Defs_8cpp_source.xhtml#l00045">Defs.cpp:45</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a63ca8edd1abc565c351eda6a55920ae5"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a63ca8edd1abc565c351eda6a55920ae5">efd::NDRegDecl::Type</a></div><div class="ttdeci">Type</div><div class="ttdoc">The possible types of declaration. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00256">Nodes.h:256</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_ae890d36b0dcb332d82616b3180da1886"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#ae890d36b0dcb332d82616b3180da1886">efd::Node::begin</a></div><div class="ttdeci">Iterator begin()</div><div class="ttdoc">Returns a iterator to the beginning of the vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00038">Nodes.cpp:38</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml_ac56b2015a8f20a0884ec0a0429c79ed9"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#ac56b2015a8f20a0884ec0a0429c79ed9">efd::NDGateDecl::setGOpList</a></div><div class="ttdeci">void setGOpList(NDGOpList::uRef ref)</div><div class="ttdoc">Sets the goplist node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00808">Nodes.cpp:808</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_ab5f18eaba71bcb53806525fd5dc61403"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#ab5f18eaba71bcb53806525fd5dc61403">efd::NDQOp::NDQOp</a></div><div class="ttdeci">NDQOp(Kind k, NDId::uRef idNode, NDList::uRef aNode, NDList::uRef qaNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00859">Nodes.cpp:859</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a7e3f55d770ef1eab141f1c2fe0e7e86b"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a7e3f55d770ef1eab141f1c2fe0e7e86b">efd::Node::ConstIterator</a></div><div class="ttdeci">std::vector&lt; uRef &gt;::const_iterator ConstIterator</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00046">Nodes.h:46</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_ab7b3e5153777a8cbd64b201c8c9488e0"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ab7b3e5153777a8cbd64b201c8c9488e0">efd::NDBinOp::Create</a></div><div class="ttdeci">static uRef Create(OpType t, Node::uRef lhsNode, Node::uRef rhsNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01269">Nodes.cpp:1269</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_a96d21c24df543013ac4e88f537d40c9b"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a96d21c24df543013ac4e88f537d40c9b">efd::NDQOpMeasure::getQBit</a></div><div class="ttdeci">Node::Ref getQBit() const</div><div class="ttdoc">Gets the qbit node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01017">Nodes.cpp:1017</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a5e3e2ab6234caa816599eb51766210b7"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a5e3e2ab6234caa816599eb51766210b7">efd::NDList::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdoc">Creates a new instance of this node with the kind K_LIST. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00442">Nodes.cpp:442</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_a797ca00ee47d3e341eea1be65f0c8615"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a797ca00ee47d3e341eea1be65f0c8615">efd::NDQasmVersion::Create</a></div><div class="ttdeci">static uRef Create(NDReal::uRef vNode, NDStmtList::uRef stmtsNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00647">Nodes.cpp:647</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a2454c8d9982a7c3cc5f8b987a5498adf"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a2454c8d9982a7c3cc5f8b987a5498adf">efd::NDGateSign::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00727">Nodes.cpp:727</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a30d0384e29c48466eb96710dc008cc97"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a30d0384e29c48466eb96710dc008cc97">efd::NDGateSign::NDGateSign</a></div><div class="ttdeci">NDGateSign(NDId::uRef idNode, NDList::uRef aNode, NDList::uRef qaNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00717">Nodes.cpp:717</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_a8e990dd9f4ca40817cdd7ac06b43a738"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a8e990dd9f4ca40817cdd7ac06b43a738">efd::NDIdRef::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00287">Nodes.cpp:287</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml_a7d05021fdea4c254514856a9f126ce7a"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a7d05021fdea4c254514856a9f126ce7a">efd::NDStmtList::NDStmtList</a></div><div class="ttdeci">NDStmtList()</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00447">Nodes.cpp:447</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a0c2f943e00609e1174586956ce6e1e5b"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a0c2f943e00609e1174586956ce6e1e5b">efd::NDQOp::setId</a></div><div class="ttdeci">void setId(NDId::uRef ref)</div><div class="ttdoc">Sets the id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00897">Nodes.cpp:897</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a0f0a6031794efd079f9feabd3158d8ec"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a0f0a6031794efd079f9feabd3158d8ec">efd::NDUnaryOp::getOperation</a></div><div class="ttdeci">std::string getOperation() const override</div><div class="ttdoc">Returns a std::string representation of the operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01342">Nodes.cpp:1342</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_ac0b863ad00e259a15b06431b60f02764"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#ac0b863ad00e259a15b06431b60f02764">efd::NDInclude::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00702">Nodes.cpp:702</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_abc039e7a0f8e2e21d680e27c0bddbb2a"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#abc039e7a0f8e2e21d680e27c0bddbb2a">efd::NDQOp::setArgs</a></div><div class="ttdeci">void setArgs(NDList::uRef ref)</div><div class="ttdoc">Sets the arguments. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00905">Nodes.cpp:905</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a36b76c92793e3ecf3269a6d9c563e918"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a36b76c92793e3ecf3269a6d9c563e918">efd::NDRegDecl::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00245">Nodes.cpp:245</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a3f5f48b2826d1d6fff50f6127fcd065e"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a3f5f48b2826d1d6fff50f6127fcd065e">efd::NDQOp::getChildNumber</a></div><div class="ttdeci">virtual uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00921">Nodes.cpp:921</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a23e33e714f48070d9e8c090cd396d956"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a23e33e714f48070d9e8c090cd396d956">efd::Node::getKind</a></div><div class="ttdeci">Kind getKind() const</div><div class="ttdoc">Returns the kind of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00054">Nodes.cpp:54</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a49653b28678f7f411adcc1273c4b136b"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a49653b28678f7f411adcc1273c4b136b">efd::NDInclude::setInnerAST</a></div><div class="ttdeci">void setInnerAST(Node::uRef ref)</div><div class="ttdoc">Sets the node that holds the statements. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00687">Nodes.cpp:687</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a1ba2fe4261e0359be8a0a51d4823fd9c"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a1ba2fe4261e0359be8a0a51d4823fd9c">efd::NDList::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00346">Nodes.cpp:346</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a6c85c9bd21014b73497de741cc75f706"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a6c85c9bd21014b73497de741cc75f706">efd::Node::clone</a></div><div class="ttdeci">Node::uRef clone() const</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00114">Nodes.cpp:114</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_a9daad9622a9627e6264cc5f0fa079f0f"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a9daad9622a9627e6264cc5f0fa079f0f">efd::NDQOpCX::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01118">Nodes.cpp:1118</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a63e30243eca03b0c85d8c4856e91c79d"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a63e30243eca03b0c85d8c4856e91c79d">efd::Node::getChild</a></div><div class="ttdeci">Ref getChild(uint32_t i) const</div><div class="ttdoc">Gets the i-th child. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00021">Nodes.cpp:21</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml_ad761f101eb49fb0fd4c8031b687bf886"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#ad761f101eb49fb0fd4c8031b687bf886">efd::NDGateDecl::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00824">Nodes.cpp:824</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_a417441353b993319d710d81a11140d16"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a417441353b993319d710d81a11140d16">efd::NDIdRef::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00309">Nodes.cpp:309</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_ab673c26004beaa75e2bb9c3a385af1be"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#ab673c26004beaa75e2bb9c3a385af1be">efd::NDValue::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDValue &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00167">Nodes.h:167</a></div></div>
<div class="ttc" id="Defs_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00046">Defs.h:46</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_a59604a78cc748d47e9d3437dac0b2733"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a59604a78cc748d47e9d3437dac0b2733">efd::NDQOpMeasure::setQBit</a></div><div class="ttdeci">void setQBit(Node::uRef ref)</div><div class="ttdoc">Sets the qbit node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01021">Nodes.cpp:1021</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_ab70ffd27405485bedbd9a34e388bf892"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ab70ffd27405485bedbd9a34e388bf892">efd::NDUnaryOp::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01382">Nodes.cpp:1382</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_a4ac23dab67956439a9af5893e703bca8"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#a4ac23dab67956439a9af5893e703bca8">efd::NDValue::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l01048">Nodes.h:1048</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml">efd::NDQOpGen</a></div><div class="ttdoc">NDQOp specialized for generic gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00930">Nodes.h:930</a></div></div>
<div class="ttc" id="classefd_1_1NDGOpList_xhtml_a25a3546c4aa7a06c53f564929205732e"><div class="ttname"><a href="../../da/d14/classefd_1_1NDGOpList.xhtml#a25a3546c4aa7a06c53f564929205732e">efd::NDGOpList::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00487">Nodes.cpp:487</a></div></div>
<div class="ttc" id="classefd_1_1NDDecl_xhtml_abb55bc564ddfa0df1d56ef1427ed2796"><div class="ttname"><a href="../../d0/d9e/classefd_1_1NDDecl.xhtml#abb55bc564ddfa0df1d56ef1427ed2796">efd::NDDecl::isGate</a></div><div class="ttdeci">bool isGate() const</div><div class="ttdoc">Returns true if this is a gate declaration. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00198">Nodes.cpp:198</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml_a2df8f92006f4bb82498101b1aa6e6a3f"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a2df8f92006f4bb82498101b1aa6e6a3f">efd::NDStmtList::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDStmtList &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00382">Nodes.h:382</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpReset_xhtml_a4df71e364f30f675a92f96e45cd2b3e7"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a4df71e364f30f675a92f96e45cd2b3e7">efd::NDQOpReset::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00976">Nodes.cpp:976</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_a8a8428b4ee1b54ab5009981511133ecf"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a8a8428b4ee1b54ab5009981511133ecf">efd::NDQasmVersion::getStatements</a></div><div class="ttdeci">NDStmtList::Ref getStatements() const</div><div class="ttdoc">Gets the node that holds the statements. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00622">Nodes.cpp:622</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a4a15c30d88c8421e7298f1152fba337e"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a4a15c30d88c8421e7298f1152fba337e">efd::Node::Kind</a></div><div class="ttdeci">Kind</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00048">Nodes.h:48</a></div></div>
<div class="ttc" id="classefd_1_1NodeVisitor_xhtml_ab06816b86084fc851dfc34ca445a58f2"><div class="ttname"><a href="../../d8/d5d/classefd_1_1NodeVisitor.xhtml#ab06816b86084fc851dfc34ca445a58f2">efd::NodeVisitor::visit</a></div><div class="ttdeci">virtual void visit(NDQasmVersion::Ref ref)</div><div class="ttdef"><b>Definition:</b> <a href="../../d7/df0/NodeVisitor_8cpp_source.xhtml#l00003">NodeVisitor.cpp:3</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpReset_xhtml"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml">efd::NDQOpReset</a></div><div class="ttdoc">NDQOp specialized for reset operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00630">Nodes.h:630</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a664c2f4a60746612062d7b112ff9842e"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a664c2f4a60746612062d7b112ff9842e">efd::NDList::addChild</a></div><div class="ttdeci">Iterator addChild(Node::uRef child)</div><div class="ttdoc">Appends a child to the end of the list. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00352">Nodes.cpp:352</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_ad54fdfb2ed095fa0d15774fbcbe1f56f"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ad54fdfb2ed095fa0d15774fbcbe1f56f">efd::NDUnaryOp::isExp</a></div><div class="ttdeci">bool isExp() const</div><div class="ttdoc">Returns whether this is an exp operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01326">Nodes.cpp:1326</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a90db74b3714926986c2df6e293db536b"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a90db74b3714926986c2df6e293db536b">efd::NDRegDecl::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDRegDecl &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00248">Nodes.h:248</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_ad05708f36f7c1c126e9f0fbba80a4b0f"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#ad05708f36f7c1c126e9f0fbba80a4b0f">efd::NDQOp::toString</a></div><div class="ttdeci">virtual std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00925">Nodes.cpp:925</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml">efd::NDBinOp</a></div><div class="ttdoc">Binary operation node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00777">Nodes.h:777</a></div></div>
<div class="ttc" id="classefd_1_1NDGOpList_xhtml_ad763f42c1ceddbf4aab2808682bc1e1b"><div class="ttname"><a href="../../da/d14/classefd_1_1NDGOpList.xhtml#ad763f42c1ceddbf4aab2808682bc1e1b">efd::NDGOpList::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00508">Nodes.cpp:508</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_adea3b99c313189bd7c83ead21baecaf5"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#adea3b99c313189bd7c83ead21baecaf5">efd::NDQOp::isCX</a></div><div class="ttdeci">bool isCX() const</div><div class="ttdoc">Returns true if this is a cx node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00885">Nodes.cpp:885</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_af9332258a8ee96b82352e2a04d2e3af1"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#af9332258a8ee96b82352e2a04d2e3af1">efd::NDBinOp::getRhs</a></div><div class="ttdeci">Node::Ref getRhs() const</div><div class="ttdoc">Gets the right hand side argument. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01200">Nodes.cpp:1200</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a7b6a0fcfa45267ae4a005d44e6e52102"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a7b6a0fcfa45267ae4a005d44e6e52102">efd::NDQOp::getOperation</a></div><div class="ttdeci">std::string getOperation() const override</div><div class="ttdoc">Returns a std::string representation of the operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00917">Nodes.cpp:917</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml_adf7951281cac48e19f1f126edd0c0ef0"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#adf7951281cac48e19f1f126edd0c0ef0">efd::NDGateDecl::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00847">Nodes.cpp:847</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a48e9d49d994b9023b8400316e2782e2b"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a48e9d49d994b9023b8400316e2782e2b">efd::Node::setParent</a></div><div class="ttdeci">void setParent(Ref ref)</div><div class="ttdoc">Sets the parent node of the current node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00090">Nodes.cpp:90</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a335606078a1d727de214982453c9dd1b"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a335606078a1d727de214982453c9dd1b">efd::Node::end</a></div><div class="ttdeci">Iterator end()</div><div class="ttdoc">Returns a iterator to the end of the vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00042">Nodes.cpp:42</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_a332ca86b1250b92e1bfc6f0a9e2e47bc"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a332ca86b1250b92e1bfc6f0a9e2e47bc">efd::NDQasmVersion::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00610">Nodes.cpp:610</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml_ad188f50eb45f23df2cffc6b66622d517"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#ad188f50eb45f23df2cffc6b66622d517">efd::NDGateDecl::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00820">Nodes.cpp:820</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a895930e560748f6b21e71bd6814f0825"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a895930e560748f6b21e71bd6814f0825">efd::NDInclude::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00658">Nodes.cpp:658</a></div></div>
<div class="ttc" id="classefd_1_1NDGOpList_xhtml_aa2ec8dc00392f74e5d4bd261fb1a43c5"><div class="ttname"><a href="../../da/d14/classefd_1_1NDGOpList.xhtml#aa2ec8dc00392f74e5d4bd261fb1a43c5">efd::NDGOpList::NDGOpList</a></div><div class="ttdeci">NDGOpList()</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00478">Nodes.cpp:478</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a7df493996977432aee05df57ae6dc375"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a7df493996977432aee05df57ae6dc375">efd::Node::getParent</a></div><div class="ttdeci">Ref getParent() const</div><div class="ttdoc">Returns the parent node of the current node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00086">Nodes.cpp:86</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a185157dac09992d6138cb80310e3c826"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a185157dac09992d6138cb80310e3c826">efd::NDRegDecl::isQReg</a></div><div class="ttdeci">bool isQReg() const</div><div class="ttdoc">Returns true if it is a quantum register declaration. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00231">Nodes.cpp:231</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml">efd::NDInclude</a></div><div class="ttdoc">Node used to parse another file. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00461">Nodes.h:461</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml_a853f2f0c185dc03ccf2ee16c59aac539"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a853f2f0c185dc03ccf2ee16c59aac539">efd::NDGateDecl::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00816">Nodes.cpp:816</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_a9ded6b0d00e7ea4d748be60c5cc3632b"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#a9ded6b0d00e7ea4d748be60c5cc3632b">efd::NDValue::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l01033">Nodes.h:1033</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_ae1e5b466eb6ffcf37fea383e5f49c4bf"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#ae1e5b466eb6ffcf37fea383e5f49c4bf">efd::NDQasmVersion::getOperation</a></div><div class="ttdeci">std::string getOperation() const override</div><div class="ttdoc">Returns a std::string representation of the operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00602">Nodes.cpp:602</a></div></div>
<div class="ttc" id="Nodes_8h_xhtml"><div class="ttname"><a href="../../d4/daf/Nodes_8h.xhtml">Nodes.h</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_a164cecac1a571671b2af438a8356800c"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a164cecac1a571671b2af438a8356800c">efd::NDIdRef::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00313">Nodes.cpp:313</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a2acfdcaf9096f9882565fd1a07d00870"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a2acfdcaf9096f9882565fd1a07d00870">efd::NDRegDecl::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00249">Nodes.cpp:249</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_ac17db26c5c73505651c482b03fde13e2"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ac17db26c5c73505651c482b03fde13e2">efd::NDUnaryOp::CreateLn</a></div><div class="ttdeci">static uRef CreateLn(Node::uRef oNode)</div><div class="ttdoc">Creates a ln unary operand node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01410">Nodes.cpp:1410</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_aa0cfc2736f15ea67553ea975b3b207f9"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#aa0cfc2736f15ea67553ea975b3b207f9">efd::NDRegDecl::getSize</a></div><div class="ttdeci">NDInt::Ref getSize() const</div><div class="ttdoc">Gets the size node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00219">Nodes.cpp:219</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a192297c494e1aabc57cd4cd72444e2ff"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a192297c494e1aabc57cd4cd72444e2ff">efd::NDRegDecl::isCReg</a></div><div class="ttdeci">bool isCReg() const</div><div class="ttdoc">Returns true if it is a concrete register declaration. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00227">Nodes.cpp:227</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml">efd::NDQasmVersion</a></div><div class="ttdoc">Node that holds the current Qasm version and the rest of the program. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00420">Nodes.h:420</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a99a5487db42f591be4f61af3f28b7a47"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a99a5487db42f591be4f61af3f28b7a47">efd::NDBinOp::getOperation</a></div><div class="ttdeci">std::string getOperation() const override</div><div class="ttdoc">Returns a std::string representation of the operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01232">Nodes.cpp:1232</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a181e64951cf190bee4296ef1c4933b5f"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a181e64951cf190bee4296ef1c4933b5f">efd::NDBinOp::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01253">Nodes.cpp:1253</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a2bc1ab74f5bde4a10ad5c2fd41bc640d"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a2bc1ab74f5bde4a10ad5c2fd41bc640d">efd::Node::wasGenerated</a></div><div class="ttdeci">bool wasGenerated() const</div><div class="ttdoc">Returns whether this node was generated by the compiler. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00070">Nodes.cpp:70</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a9efdb70f8a37e017bbce53679ce3a0ec"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a9efdb70f8a37e017bbce53679ce3a0ec">efd::NDInclude::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00691">Nodes.cpp:691</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpBarrier_xhtml_a4eab3d416a236eaea5636e8a75d5daaa"><div class="ttname"><a href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a4eab3d416a236eaea5636e8a75d5daaa">efd::NDQOpBarrier::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00998">Nodes.cpp:998</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpReset_xhtml_a3ba02e6b91ebddb852e875b846654292"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a3ba02e6b91ebddb852e875b846654292">efd::NDQOpReset::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDQOpReset &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00633">Nodes.h:633</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_a287cbca5c6c5fbf565ac32f435030eac"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a287cbca5c6c5fbf565ac32f435030eac">efd::NDQOpGen::IntrinsicKind</a></div><div class="ttdeci">IntrinsicKind</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00935">Nodes.h:935</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_a9407354bbb835d0daffbeb30cafc1076"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a9407354bbb835d0daffbeb30cafc1076">efd::NDIdRef::Create</a></div><div class="ttdeci">static uRef Create(NDId::uRef idNode, NDInt::uRef nNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00330">Nodes.cpp:330</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_ab9ae2fce1eb28b2074d0919f9820a47d"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#ab9ae2fce1eb28b2074d0919f9820a47d">efd::Node::setInInclude</a></div><div class="ttdeci">void setInInclude()</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00082">Nodes.cpp:82</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_a3b286b9fdbd38569c9006182ce595e0d"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a3b286b9fdbd38569c9006182ce595e0d">efd::NDQasmVersion::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDQasmVersion &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00423">Nodes.h:423</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml_a7a7d18846b03a9ddd85b0d876a867c17"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a7a7d18846b03a9ddd85b0d876a867c17">efd::NDGateDecl::Create</a></div><div class="ttdeci">static uRef Create(NDId::uRef idNode, NDList::uRef aNode, NDList::uRef qaNode, NDGOpList::uRef gopNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00851">Nodes.cpp:851</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_aeadcf3e4d57fbd7ffb56dab4b8c34e5b"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#aeadcf3e4d57fbd7ffb56dab4b8c34e5b">efd::NDInclude::NDInclude</a></div><div class="ttdeci">NDInclude(NDId::uRef fNode, Node::uRef astNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00652">Nodes.cpp:652</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a38dbbb3a5ca8faaeb9973512f04c6f64"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a38dbbb3a5ca8faaeb9973512f04c6f64">efd::NDQOp::getArgs</a></div><div class="ttdeci">NDList::Ref getArgs() const</div><div class="ttdoc">Gets the arguments. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00901">Nodes.cpp:901</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_a5648f9a753dd9447321c0d357f2c6bf7"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a5648f9a753dd9447321c0d357f2c6bf7">efd::NDQOpCX::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDQOpCX &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00747">Nodes.h:747</a></div></div>
<div class="ttc" id="RTTI_8h_xhtml"><div class="ttname"><a href="../../d5/dfc/RTTI_8h.xhtml">RTTI.h</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a5e7c803f280d890b680a4157cbdaf104"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a5e7c803f280d890b680a4157cbdaf104">efd::NDGateSign::setQArgs</a></div><div class="ttdeci">void setQArgs(NDList::uRef ref)</div><div class="ttdoc">Sets the qargs node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00746">Nodes.cpp:746</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a96ca13a5c2b971b68619ce4a34be0f66"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a96ca13a5c2b971b68619ce4a34be0f66">efd::Node::toString</a></div><div class="ttdeci">virtual std::string toString(bool pretty=false) const =0</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_ae80bbf9487f0e43317c29c63a414ff34"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#ae80bbf9487f0e43317c29c63a414ff34">efd::Node::findChild</a></div><div class="ttdeci">Iterator findChild(Node::Ref ref)</div><div class="ttdoc">Returns a iterator pointing to the given child. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00030">Nodes.cpp:30</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpReset_xhtml_ae4a7e0da47e306c1c5d3878c6c61da9e"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#ae4a7e0da47e306c1c5d3878c6c61da9e">efd::NDQOpReset::NDQOpReset</a></div><div class="ttdeci">NDQOpReset(Node::uRef qaNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00953">Nodes.cpp:953</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_acd0ef9eb198bd9a5736c8be96cbb5506"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#acd0ef9eb198bd9a5736c8be96cbb5506">efd::NDQasmVersion::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00596">Nodes.cpp:596</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a7fc818cbd70235a9a122920c17e086a9"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a7fc818cbd70235a9a122920c17e086a9">efd::NDUnaryOp::CreateNeg</a></div><div class="ttdeci">static uRef CreateNeg(Node::uRef oNode)</div><div class="ttdoc">Creates a negative unary operand node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01390">Nodes.cpp:1390</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml_a21cd5b24ccc7dcadf57c80b619544ede"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a21cd5b24ccc7dcadf57c80b619544ede">efd::NDQOpU::NDQOpU</a></div><div class="ttdeci">NDQOpU(NDList::uRef aNode, Node::uRef qaNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01065">Nodes.cpp:1065</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml">efd::NDGateSign</a></div><div class="ttdoc">Node for declaration of opaque quantum gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00499">Nodes.h:499</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_abc2ac87fb927b18493d57f536b96bdde"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#abc2ac87fb927b18493d57f536b96bdde">efd::NDIdRef::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00317">Nodes.cpp:317</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a0c2aac79f80799e7b16fb370f8cf88b8"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a0c2aac79f80799e7b16fb370f8cf88b8">efd::Node::isInInclude</a></div><div class="ttdeci">bool isInInclude() const</div><div class="ttdoc">Returns whether this node is in a include node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00078">Nodes.cpp:78</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_ae0bf0448b6920b60c0d74ff12c905a19"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#ae0bf0448b6920b60c0d74ff12c905a19">efd::NDRegDecl::CreateC</a></div><div class="ttdeci">static std::unique_ptr&lt; NDRegDecl &gt; CreateC(NDId::uRef idNode, NDInt::uRef sizeNode)</div><div class="ttdoc">Creates a new concrete register node of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00277">Nodes.cpp:277</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a7d909c7f0548ad3ed4f3f182aebf7fd5"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a7d909c7f0548ad3ed4f3f182aebf7fd5">efd::NDBinOp::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDBinOp &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00786">Nodes.h:786</a></div></div>
<div class="ttc" id="classefd_1_1NDGOpList_xhtml_a18ad837befc49362047fe2ebee02574f"><div class="ttname"><a href="../../da/d14/classefd_1_1NDGOpList.xhtml#a18ad837befc49362047fe2ebee02574f">efd::NDGOpList::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDGOpList &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00402">Nodes.h:402</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_aa9eefac83e52493749b566a8ab76ed4d"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#aa9eefac83e52493749b566a8ab76ed4d">efd::NDUnaryOp::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01365">Nodes.cpp:1365</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml">efd::NDQOpU</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00716">Nodes.h:716</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml">efd::NDIdRef</a></div><div class="ttdoc">Node for id references (register specific positions). </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00294">Nodes.h:294</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a5093adc24b1e37086e2596494df904d7"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a5093adc24b1e37086e2596494df904d7">efd::NDUnaryOp::getUOpType</a></div><div class="ttdeci">UOpType getUOpType() const</div><div class="ttdoc">Returns the unary operation type. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01310">Nodes.cpp:1310</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_a625801c9b0cbf00600ab3522dbaf285d"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a625801c9b0cbf00600ab3522dbaf285d">efd::NDIdRef::setId</a></div><div class="ttdeci">void setId(NDId::uRef ref)</div><div class="ttdoc">Sets the id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00297">Nodes.cpp:297</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a7d1b691a45689241a8138539a2be8596"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a7d1b691a45689241a8138539a2be8596">efd::NDList::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00410">Nodes.cpp:410</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_a9c4e4a77c49420497084d03a0f54a68b"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a9c4e4a77c49420497084d03a0f54a68b">efd::NDIdRef::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00326">Nodes.cpp:326</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a494a2123de6024d1057cf773acda5f25"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a494a2123de6024d1057cf773acda5f25">efd::Node::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; Node &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00042">Nodes.h:42</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a7892ad23ac0e087ce29e5ac2492d9d1f"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a7892ad23ac0e087ce29e5ac2492d9d1f">efd::NDBinOp::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01249">Nodes.cpp:1249</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_a957b80b216bde882185bf3990e60669f"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a957b80b216bde882185bf3990e60669f">efd::NDQOpMeasure::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDQOpMeasure &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00684">Nodes.h:684</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpReset_xhtml_a48d635fc9db4958d55ea6fc2433b87eb"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a48d635fc9db4958d55ea6fc2433b87eb">efd::NDQOpReset::getQArg</a></div><div class="ttdeci">Node::Ref getQArg() const</div><div class="ttdoc">Gets the quantum argument. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00960">Nodes.cpp:960</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_ab06581fe1876befc86413c64a3e5b093"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ab06581fe1876befc86413c64a3e5b093">efd::NDUnaryOp::isLn</a></div><div class="ttdeci">bool isLn() const</div><div class="ttdoc">Returns whether this is an ln operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01330">Nodes.cpp:1330</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_ae67458b770c2f1a9d574b73fd7cf0f0a"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#ae67458b770c2f1a9d574b73fd7cf0f0a">efd::NDInclude::setFilename</a></div><div class="ttdeci">void setFilename(NDString::uRef ref)</div><div class="ttdoc">Sets the node that holds the filename. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00679">Nodes.cpp:679</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a0d7664d9c483fdeab6c982771eb5eb5e"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a0d7664d9c483fdeab6c982771eb5eb5e">efd::NDRegDecl::NDRegDecl</a></div><div class="ttdeci">NDRegDecl(Type t, NDId::uRef idNode, NDInt::uRef sizeNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00208">Nodes.cpp:208</a></div></div>
<div class="ttc" id="classefd_1_1NDDecl_xhtml_a34957c2122c38cebf80a264d5fa3863f"><div class="ttname"><a href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a34957c2122c38cebf80a264d5fa3863f">efd::NDDecl::getId</a></div><div class="ttdeci">NDId::Ref getId() const</div><div class="ttdoc">Gets the id node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00186">Nodes.cpp:186</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_acf7a372c40a8d67d3d642d2bdffb9472"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#acf7a372c40a8d67d3d642d2bdffb9472">efd::NDIfStmt::setQOp</a></div><div class="ttdeci">void setQOp(NDQOp::uRef ref)</div><div class="ttdoc">Sets the qop. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00547">Nodes.cpp:547</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a5ef5ed743ddb6e586602c5242f2f36cc"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a5ef5ed743ddb6e586602c5242f2f36cc">efd::NDQOp::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDQOp &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00580">Nodes.h:580</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a6d57f95bd61a3796252fa542e2c0b129"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a6d57f95bd61a3796252fa542e2c0b129">efd::NDList::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdoc">Clears all the childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00393">Nodes.cpp:393</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_a8abc03a6e503e57cc36bcb4ce29e271c"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a8abc03a6e503e57cc36bcb4ce29e271c">efd::NDIfStmt::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDIfStmt &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00971">Nodes.h:971</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d62/EnumString_8h_source.xhtml#l00051">EnumString.h:51</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a9de83ab086f1b4414589d97196c602ff"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a9de83ab086f1b4414589d97196c602ff">efd::NDGateSign::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00758">Nodes.cpp:758</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_ab696e3c3f4463ad2a126a1b335e5baca"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#ab696e3c3f4463ad2a126a1b335e5baca">efd::NDQOpMeasure::Create</a></div><div class="ttdeci">static uRef Create(Node::uRef qNode, Node::uRef cNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01060">Nodes.cpp:1060</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a2c9159d9bb0c60ea9031455fdb4b4d1c"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a2c9159d9bb0c60ea9031455fdb4b4d1c">efd::NDBinOp::isSub</a></div><div class="ttdeci">bool isSub() const</div><div class="ttdoc">Returns whether this is an sub operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01216">Nodes.cpp:1216</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml">efd::NDStmtList</a></div><div class="ttdoc">Node for list of qubit operation sequences. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00379">Nodes.h:379</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node</a></div><div class="ttdoc">Base class for AST nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00039">Nodes.h:39</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_ad1e9a2c7503a34349435cadc44269efc"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ad1e9a2c7503a34349435cadc44269efc">efd::NDBinOp::OpType</a></div><div class="ttdeci">OpType</div><div class="ttdoc">The possible binary operations. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00789">Nodes.h:789</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_a08e8820de72b06cef7853bcf2118a2c7"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a08e8820de72b06cef7853bcf2118a2c7">efd::NDQOpCX::NDQOpCX</a></div><div class="ttdeci">NDQOpCX(Node::uRef lhsNode, Node::uRef rhsNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01096">Nodes.cpp:1096</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml">efd::NDUnaryOp</a></div><div class="ttdoc">Unary operation node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00851">Nodes.h:851</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml">efd::NDQOp</a></div><div class="ttdoc">Generic node for quantum operations. This is also the base node for the other quantum gates...</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00577">Nodes.h:577</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_aa78b124a77ff782c2c6b926b0c389b7b"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#aa78b124a77ff782c2c6b926b0c389b7b">efd::NDQOpGen::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01173">Nodes.cpp:1173</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a57251832cfbf3b1f1f664b0968ff5874"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a57251832cfbf3b1f1f664b0968ff5874">efd::NDInclude::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00667">Nodes.cpp:667</a></div></div>
<div class="ttc" id="classefd_1_1NDDecl_xhtml"><div class="ttname"><a href="../../d0/d9e/classefd_1_1NDDecl.xhtml">efd::NDDecl</a></div><div class="ttdoc">Node for declaration of registers (concrete and quantum). </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00218">Nodes.h:218</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_ae90ab2baec2fadb3ef5d690470d470ab"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#ae90ab2baec2fadb3ef5d690470d470ab">efd::NDQOp::isMeasure</a></div><div class="ttdeci">bool isMeasure() const</div><div class="ttdoc">Returns true if this is a measure node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00877">Nodes.cpp:877</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_aad4510814ff15bd26fe2f95f9d2a2279"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#aad4510814ff15bd26fe2f95f9d2a2279">efd::Node::setChild</a></div><div class="ttdeci">void setChild(uint32_t i, uRef ref)</div><div class="ttdoc">Sets the i-th child. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00025">Nodes.cpp:25</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_a7275e667d6fa3d3c1ade8d9a2e3ca5ba"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a7275e667d6fa3d3c1ade8d9a2e3ca5ba">efd::NDQasmVersion::setStatements</a></div><div class="ttdeci">void setStatements(NDStmtList::uRef ref)</div><div class="ttdoc">Sets the node that holds the statements. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00626">Nodes.cpp:626</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_ad64e954d4f1c1b86a973e90828dbf80a"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ad64e954d4f1c1b86a973e90828dbf80a">efd::NDBinOp::isMul</a></div><div class="ttdeci">bool isMul() const</div><div class="ttdoc">Returns whether this is an mul operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01220">Nodes.cpp:1220</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a81d54827a61c546040dad4f57e34c318"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a81d54827a61c546040dad4f57e34c318">efd::NDInclude::Create</a></div><div class="ttdeci">static uRef Create(NDId::uRef fNode, Node::uRef astNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00706">Nodes.cpp:706</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpBarrier_xhtml"><div class="ttname"><a href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml">efd::NDQOpBarrier</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00658">Nodes.h:658</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_a4515e2ef9d1e3c284604f8033b9f8787"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a4515e2ef9d1e3c284604f8033b9f8787">efd::NDIfStmt::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00559">Nodes.cpp:559</a></div></div>
<div class="ttc" id="classefd_1_1NDDecl_xhtml_a1d2cdd96c460f6968ecd4ae2b4a5181c"><div class="ttname"><a href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a1d2cdd96c460f6968ecd4ae2b4a5181c">efd::NDDecl::NDDecl</a></div><div class="ttdeci">NDDecl(Kind k, NDId::uRef idNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00182">Nodes.cpp:182</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a6f90ad90fc61c1ed70d2a1c2da6a3d0a"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a6f90ad90fc61c1ed70d2a1c2da6a3d0a">efd::NDGateSign::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00762">Nodes.cpp:762</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a2d6a0c6f7ea7ef0d994c79fc96aba31d"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a2d6a0c6f7ea7ef0d994c79fc96aba31d">efd::Node::Iterator</a></div><div class="ttdeci">std::vector&lt; uRef &gt;::iterator Iterator</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00045">Nodes.h:45</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_aadf4248c04a97ec87a34f879e42e8324"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#aadf4248c04a97ec87a34f879e42e8324">efd::NDIfStmt::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00520">Nodes.cpp:520</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_a8f00f66051d3d4242e01fc3d51645bda"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a8f00f66051d3d4242e01fc3d51645bda">efd::NDIfStmt::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00551">Nodes.cpp:551</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml">efd::NDGateDecl</a></div><div class="ttdoc">Node for declaration of quantum gates. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00543">Nodes.h:543</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a3f8e26eafae005e4befadedeab9b6df4"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a3f8e26eafae005e4befadedeab9b6df4">efd::Node::isEmpty</a></div><div class="ttdeci">bool isEmpty() const</div><div class="ttdoc">Returns whether this node has any information. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00066">Nodes.cpp:66</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a3e110263b52d0e309ac28c93ee0d3c46"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a3e110263b52d0e309ac28c93ee0d3c46">efd::NDUnaryOp::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDUnaryOp &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00859">Nodes.h:859</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a342aa44dbb2cd53f78bf046931896baf"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a342aa44dbb2cd53f78bf046931896baf">efd::NDBinOp::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01188">Nodes.cpp:1188</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a6099dbd7e83b3f3f3a7ddc21b0577a49"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a6099dbd7e83b3f3f3a7ddc21b0577a49">efd::NDQOp::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00941">Nodes.cpp:941</a></div></div>
<div class="ttc" id="NodeVisitor_8h_xhtml"><div class="ttname"><a href="../../d0/d8d/NodeVisitor_8h.xhtml">NodeVisitor.h</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_a45299c2d04710b9066059d50757ee9f4"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a45299c2d04710b9066059d50757ee9f4">efd::NDIfStmt::setCondId</a></div><div class="ttdeci">void setCondId(NDId::uRef ref)</div><div class="ttdoc">Sets the id inside the conditional. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00531">Nodes.cpp:531</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpReset_xhtml_a64fd1348e51632b21afc694b1fff455b"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a64fd1348e51632b21afc694b1fff455b">efd::NDQOpReset::Create</a></div><div class="ttdeci">static uRef Create(Node::uRef qaNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00980">Nodes.cpp:980</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_afcff046701bf4f86ad2b0c6b18754169"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#afcff046701bf4f86ad2b0c6b18754169">efd::NDIdRef::setN</a></div><div class="ttdeci">void setN(NDInt::uRef ref)</div><div class="ttdoc">Sets an integer representing the position. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00305">Nodes.cpp:305</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_a1fcda5f52e0186433fa0050dec6ff8d8"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a1fcda5f52e0186433fa0050dec6ff8d8">efd::NDQOpMeasure::setCBit</a></div><div class="ttdeci">void setCBit(Node::uRef ref)</div><div class="ttdoc">Sets the cbit node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01029">Nodes.cpp:1029</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_a9dd8ce072cc70aefd9b9349b76c912fc"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a9dd8ce072cc70aefd9b9349b76c912fc">efd::NDIfStmt::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00555">Nodes.cpp:555</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a298b237ca7bafa0b289a2758921199f2"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a298b237ca7bafa0b289a2758921199f2">efd::NDUnaryOp::setOperand</a></div><div class="ttdeci">void setOperand(Node::uRef ref)</div><div class="ttdoc">Sets the only operand. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01306">Nodes.cpp:1306</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml">efd::NDIfStmt</a></div><div class="ttdoc">Node for conditional statement. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00968">Nodes.h:968</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_a7b526a26be080f963c70e7001b7e9ff5"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a7b526a26be080f963c70e7001b7e9ff5">efd::NDQOpCX::getRhs</a></div><div class="ttdeci">Node::Ref getRhs() const</div><div class="ttdoc">Gets the right hand side of the gate. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01110">Nodes.cpp:1110</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a3a8d5a36821b42dda768a3aeb8d84fb2"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a3a8d5a36821b42dda768a3aeb8d84fb2">efd::NDQOp::isReset</a></div><div class="ttdeci">bool isReset() const</div><div class="ttdoc">Returns true if this is a reset node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00869">Nodes.cpp:869</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_a5ec6f243aee6d4fe8988885ea9c449de"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a5ec6f243aee6d4fe8988885ea9c449de">efd::NDIfStmt::getCondId</a></div><div class="ttdeci">NDId::Ref getCondId() const</div><div class="ttdoc">Gets the id inside the conditional. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00527">Nodes.cpp:527</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_aa0576bf2656b3dc64f299ca7ad20fdfa"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aa0576bf2656b3dc64f299ca7ad20fdfa">efd::NDBinOp::CreatePow</a></div><div class="ttdeci">static uRef CreatePow(Node::uRef lhsNode, Node::uRef rhsNode)</div><div class="ttdoc">Creates a new binary power node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01289">Nodes.cpp:1289</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a8b3b718c13aeaa441809b0602320928a"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a8b3b718c13aeaa441809b0602320928a">efd::NDGateSign::setArgs</a></div><div class="ttdeci">void setArgs(NDList::uRef ref)</div><div class="ttdoc">Sets the args node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00738">Nodes.cpp:738</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a2642c91fda9d33512d1aa1aa7851b6bd"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a2642c91fda9d33512d1aa1aa7851b6bd">efd::NDList::NDList</a></div><div class="ttdeci">NDList(Kind k)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00335">Nodes.cpp:335</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_aeed2f635da7bc63682fab4230059d690"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#aeed2f635da7bc63682fab4230059d690">efd::Node::print</a></div><div class="ttdeci">void print(std::ostream &amp;O=std::cout, bool pretty=false)</div><div class="ttdoc">Prints from this node, recursively to O. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00058">Nodes.cpp:58</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_ac7fe28ead545ea9200c58b914c872906"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#ac7fe28ead545ea9200c58b914c872906">efd::NDList::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00431">Nodes.cpp:431</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a2f2867174765d2d2132a4cc95108d7cd"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a2f2867174765d2d2132a4cc95108d7cd">efd::NDRegDecl::setSize</a></div><div class="ttdeci">void setSize(NDInt::uRef ref)</div><div class="ttdoc">Sets the size node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00223">Nodes.cpp:223</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_ae9f49bc3eeebb8d24af82ecaa8cc3636"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#ae9f49bc3eeebb8d24af82ecaa8cc3636">efd::Node::getOperation</a></div><div class="ttdeci">virtual std::string getOperation() const</div><div class="ttdoc">Returns a std::string representation of the operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00110">Nodes.cpp:110</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a1b8a5fb302732a638fef839b08e8fae5"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a1b8a5fb302732a638fef839b08e8fae5">efd::NDRegDecl::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00213">Nodes.cpp:213</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_ab1b63089e538796663f19dd5dca01225"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#ab1b63089e538796663f19dd5dca01225">efd::NDQOp::~NDQOp</a></div><div class="ttdeci">virtual ~NDQOp()</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00866">Nodes.cpp:866</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_abbd4435ec926c38719e8af49bb89af6d"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#abbd4435ec926c38719e8af49bb89af6d">efd::NDQOpGen::getIntrinsicKind</a></div><div class="ttdeci">IntrinsicKind getIntrinsicKind() const</div><div class="ttdoc">Returns the intrinsic kind of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01148">Nodes.cpp:1148</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml_aae903f67fc7e13b33875e14df41328ff"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#aae903f67fc7e13b33875e14df41328ff">efd::NDQOpU::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01087">Nodes.cpp:1087</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a203683f7dce3a7876008fc124762c4ac"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a203683f7dce3a7876008fc124762c4ac">efd::NDBinOp::isPow</a></div><div class="ttdeci">bool isPow() const</div><div class="ttdoc">Returns whether this is an pow operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01228">Nodes.cpp:1228</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml_a30755a89298003a0e4c2496ac9b8fa4d"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a30755a89298003a0e4c2496ac9b8fa4d">efd::NDGateDecl::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00795">Nodes.cpp:795</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpBarrier_xhtml_a1a79a69f3a5d678a3d100b97f7d1e5c8"><div class="ttname"><a href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a1a79a69f3a5d678a3d100b97f7d1e5c8">efd::NDQOpBarrier::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00989">Nodes.cpp:989</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9a4497f103166f16df2ab65d3a779f56e7">efd::ExitCode::EXIT_unknown_resource</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpBarrier_xhtml_a2f5870d97534b90a232ed110c21d67e7"><div class="ttname"><a href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a2f5870d97534b90a232ed110c21d67e7">efd::NDQOpBarrier::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDQOpBarrier &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00661">Nodes.h:661</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_af66ad886623f70ee24c756d424694dae"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#af66ad886623f70ee24c756d424694dae">efd::NDQOp::setQArgs</a></div><div class="ttdeci">void setQArgs(NDList::uRef ref)</div><div class="ttdoc">Sets the quantum arguments. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00913">Nodes.cpp:913</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_affb063b685141e014014e5f32c89cef9"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#affb063b685141e014014e5f32c89cef9">efd::NDUnaryOp::CreateSqrt</a></div><div class="ttdeci">static uRef CreateSqrt(Node::uRef oNode)</div><div class="ttdoc">Creates a sqrt unary operand node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01414">Nodes.cpp:1414</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_aa91e672a6d6aa653e33949fbaf59df8f"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aa91e672a6d6aa653e33949fbaf59df8f">efd::NDBinOp::CreateAdd</a></div><div class="ttdeci">static uRef CreateAdd(Node::uRef lhsNode, Node::uRef rhsNode)</div><div class="ttdoc">Creates a new binary adition node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01273">Nodes.cpp:1273</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_aaff201c726ac39af5cda849e3e0d27c1"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#aaff201c726ac39af5cda849e3e0d27c1">efd::NDQasmVersion::NDQasmVersion</a></div><div class="ttdeci">NDQasmVersion(NDReal::uRef vNode, NDStmtList::uRef stmtsNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00590">Nodes.cpp:590</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_aedf48dcf74c1dca8921de77810fbaf6f"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aedf48dcf74c1dca8921de77810fbaf6f">efd::NDBinOp::getLhs</a></div><div class="ttdeci">Node::Ref getLhs() const</div><div class="ttdoc">Gets the left hand side argument. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01192">Nodes.cpp:1192</a></div></div>
<div class="ttc" id="classefd_1_1NDGOpList_xhtml_a11fb7a5d47134c27c93be5902e8247a4"><div class="ttname"><a href="../../da/d14/classefd_1_1NDGOpList.xhtml#a11fb7a5d47134c27c93be5902e8247a4">efd::NDGOpList::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00481">Nodes.cpp:481</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a01ee4e695f78387b453ebebc4dcf8e07"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a01ee4e695f78387b453ebebc4dcf8e07">efd::NDUnaryOp::CreateCos</a></div><div class="ttdeci">static uRef CreateCos(Node::uRef oNode)</div><div class="ttdoc">Creates a cos unary operand node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01398">Nodes.cpp:1398</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_aebb2d70f1197065d1b127c2925dd33e6"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#aebb2d70f1197065d1b127c2925dd33e6">efd::NDQOpCX::getLhs</a></div><div class="ttdeci">Node::Ref getLhs() const</div><div class="ttdoc">Gets the left hand side of the gate. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01102">Nodes.cpp:1102</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_a943c6299e258417e70a0d406b2aeff7a"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a943c6299e258417e70a0d406b2aeff7a">efd::NDIdRef::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDIdRef &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00297">Nodes.h:297</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_ab2b468c0bd46cbfdcc01ceea43f5f49d"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#ab2b468c0bd46cbfdcc01ceea43f5f49d">efd::NDIdRef::getN</a></div><div class="ttdeci">NDInt::Ref getN() const</div><div class="ttdoc">Gets an integer representing the position. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00301">Nodes.cpp:301</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_acb465864e0efe9a5f400fbd18812c569"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#acb465864e0efe9a5f400fbd18812c569">efd::NDQOp::isBarrier</a></div><div class="ttdeci">bool isBarrier() const</div><div class="ttdoc">Returns true if this is a barrier node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00873">Nodes.cpp:873</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_a3bf9bff2803d9e5c9a838d47a81c2d20"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#a3bf9bff2803d9e5c9a838d47a81c2d20">efd::NDRegDecl::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00253">Nodes.cpp:253</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_a18d042bd5764dee3b3e15c79017f78ba"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#a18d042bd5764dee3b3e15c79017f78ba">efd::NDIdRef::NDIdRef</a></div><div class="ttdeci">NDIdRef(NDId::uRef idNode, NDInt::uRef nNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00282">Nodes.cpp:282</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a0c627fa9aac8afe1562eae8f64830bff"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a0c627fa9aac8afe1562eae8f64830bff">efd::NDList::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00414">Nodes.cpp:414</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_af206910448d281670d3afe89f3ff4677"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#af206910448d281670d3afe89f3ff4677">efd::NDRegDecl::CreateQ</a></div><div class="ttdeci">static std::unique_ptr&lt; NDRegDecl &gt; CreateQ(NDId::uRef idNode, NDInt::uRef sizeNode)</div><div class="ttdoc">Creates a new quantum register node of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00273">Nodes.cpp:273</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a49458be3821071e4a2b9b06f360269d7"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a49458be3821071e4a2b9b06f360269d7">efd::NDUnaryOp::getOperand</a></div><div class="ttdeci">Node::Ref getOperand() const</div><div class="ttdoc">Gets the only operand. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01302">Nodes.cpp:1302</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a005c9240c3716542d09847e51ad1d40b"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a005c9240c3716542d09847e51ad1d40b">efd::NDBinOp::CreateDiv</a></div><div class="ttdeci">static uRef CreateDiv(Node::uRef lhsNode, Node::uRef rhsNode)</div><div class="ttdoc">Creates a new binary division node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01285">Nodes.cpp:1285</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a565faf594a937079abeb8b4405714e37"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a565faf594a937079abeb8b4405714e37">efd::NDBinOp::CreateMul</a></div><div class="ttdeci">static uRef CreateMul(Node::uRef lhsNode, Node::uRef rhsNode)</div><div class="ttdoc">Creates a new binary multiplication node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01281">Nodes.cpp:1281</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a223896e8018391ff6474cde133040ba6"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a223896e8018391ff6474cde133040ba6">efd::NDUnaryOp::CreateTan</a></div><div class="ttdeci">static uRef CreateTan(Node::uRef oNode)</div><div class="ttdoc">Creates a tan unary operand node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01402">Nodes.cpp:1402</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a9524b79f4d0692977e6eea0b3aa2ec31"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a9524b79f4d0692977e6eea0b3aa2ec31">efd::NDUnaryOp::CreateExp</a></div><div class="ttdeci">static uRef CreateExp(Node::uRef oNode)</div><div class="ttdoc">Creates a exp unary operand node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01406">Nodes.cpp:1406</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a002ff4bd8e4f9857bc9bce50a73a3ee7"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a002ff4bd8e4f9857bc9bce50a73a3ee7">efd::NDUnaryOp::isSqrt</a></div><div class="ttdeci">bool isSqrt() const</div><div class="ttdoc">Returns whether this is an sqrt operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01334">Nodes.cpp:1334</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a9c638d16bea31baeb3c4b303f3b76591"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a9c638d16bea31baeb3c4b303f3b76591">efd::NDUnaryOp::Create</a></div><div class="ttdeci">static uRef Create(UOpType t, Node::uRef oNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01386">Nodes.cpp:1386</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_ae5905627dcd4e9e0e1d3b4cc83d00fb5"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ae5905627dcd4e9e0e1d3b4cc83d00fb5">efd::NDBinOp::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01245">Nodes.cpp:1245</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a7812ac3c01971aab590f06348c9548ac"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a7812ac3c01971aab590f06348c9548ac">efd::Node::mIsEmpty</a></div><div class="ttdeci">bool mIsEmpty</div><div class="ttdoc">Holds whether this node has no information. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00077">Nodes.h:77</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a5f3cf747332884d41b1bd84f15d91cd4"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a5f3cf747332884d41b1bd84f15d91cd4">efd::NDInclude::getOperation</a></div><div class="ttdeci">std::string getOperation() const override</div><div class="ttdoc">Returns a std::string representation of the operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00663">Nodes.cpp:663</a></div></div>
<div class="ttc" id="classefd_1_1NDDecl_xhtml_abaa5d70e3d471b827ead505febf495cb"><div class="ttname"><a href="../../d0/d9e/classefd_1_1NDDecl.xhtml#abaa5d70e3d471b827ead505febf495cb">efd::NDDecl::setId</a></div><div class="ttdeci">void setId(NDId::uRef ref)</div><div class="ttdoc">Sets the id node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00190">Nodes.cpp:190</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_ad3e6eee14fad4c750688c2d8d81d8d48"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#ad3e6eee14fad4c750688c2d8d81d8d48">efd::NDQOpCX::setRhs</a></div><div class="ttdeci">void setRhs(Node::uRef ref)</div><div class="ttdoc">Sets the right hand side of the gate. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01114">Nodes.cpp:1114</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_aa569f393e93eb260839f5885f145ee47"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#aa569f393e93eb260839f5885f145ee47">efd::NDQasmVersion::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00630">Nodes.cpp:630</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a2d9da2030336053b8afd1cbb3d6dd5ea"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a2d9da2030336053b8afd1cbb3d6dd5ea">efd::Node::~Node</a></div><div class="ttdeci">virtual ~Node()</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00018">Nodes.cpp:18</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_acfa25f299fc8d811fcada96273aa8550"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#acfa25f299fc8d811fcada96273aa8550">efd::NDList::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00418">Nodes.cpp:418</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml_ac3c6ffbc8336e63ad5bf9565f432a262"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#ac3c6ffbc8336e63ad5bf9565f432a262">efd::NDQOpU::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01078">Nodes.cpp:1078</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_aa0024416b2fe7237d8b344e8e77236da"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#aa0024416b2fe7237d8b344e8e77236da">efd::NDQOpGen::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDQOpGen &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00933">Nodes.h:933</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a0a3f2e7e3582b6d4e1880ea26caeb248"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a0a3f2e7e3582b6d4e1880ea26caeb248">efd::NDBinOp::setRhs</a></div><div class="ttdeci">void setRhs(Node::uRef ref)</div><div class="ttdoc">Sets the right hand side argument. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01204">Nodes.cpp:1204</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a5055bd5025b24ea091f482ce0941e1ef"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a5055bd5025b24ea091f482ce0941e1ef">efd::NDInclude::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDInclude &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00464">Nodes.h:464</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpReset_xhtml_aed3113fffea27fd6ff4bbae7cf47094f"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#aed3113fffea27fd6ff4bbae7cf47094f">efd::NDQOpReset::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00972">Nodes.cpp:972</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_addcc5fd8d95d5790f75b643e88e76c7e"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#addcc5fd8d95d5790f75b643e88e76c7e">efd::NDQOpMeasure::getCBit</a></div><div class="ttdeci">Node::Ref getCBit() const</div><div class="ttdoc">Gets the cbit node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01025">Nodes.cpp:1025</a></div></div>
<div class="ttc" id="classefd_1_1NDInclude_xhtml_a1bcb5f6f80760f5395d65b3c41a3c96f"><div class="ttname"><a href="../../d3/d29/classefd_1_1NDInclude.xhtml#a1bcb5f6f80760f5395d65b3c41a3c96f">efd::NDInclude::getInnerAST</a></div><div class="ttdeci">Node::Ref getInnerAST() const</div><div class="ttdoc">Gets the node that holds the statements. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00683">Nodes.cpp:683</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml_a300b862eb501b2cf6a8311377136bf72"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a300b862eb501b2cf6a8311377136bf72">efd::NDQOpU::setQArg</a></div><div class="ttdeci">void setQArg(Node::uRef ref)</div><div class="ttdoc">Sets the quantum argument. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01074">Nodes.cpp:1074</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml_a84bc7f6f7ae63e392704bccc5cf0fb30"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a84bc7f6f7ae63e392704bccc5cf0fb30">efd::NDStmtList::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00450">Nodes.cpp:450</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_af7ef43289355c5bb047a46419177c8ed"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#af7ef43289355c5bb047a46419177c8ed">efd::NDQOp::getQArgs</a></div><div class="ttdeci">NDList::Ref getQArgs() const</div><div class="ttdoc">Gets the quantum arguments. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00909">Nodes.cpp:909</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml">efd::NDValue</a></div><div class="ttdoc">Node for literal types. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00164">Nodes.h:164</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a09ac8cdf7898a3d17293d92ae956eece"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a09ac8cdf7898a3d17293d92ae956eece">efd::Node::Node</a></div><div class="ttdeci">Node(Kind k, bool empty=false)</div><div class="ttdoc">Constructs the node, initially empty (with no information). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00009">Nodes.cpp:9</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a9c340d503089a923921b083846841502"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a9c340d503089a923921b083846841502">efd::NDUnaryOp::UOpType</a></div><div class="ttdeci">UOpType</div><div class="ttdoc">Unary operations available. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00862">Nodes.h:862</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml_a015cefabf53b2666c442b01b86c2b7cd"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a015cefabf53b2666c442b01b86c2b7cd">efd::NDStmtList::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00473">Nodes.cpp:473</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_afe6c9fa33e225fc08b07f50be8270919"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#afe6c9fa33e225fc08b07f50be8270919">efd::NDGateSign::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00779">Nodes.cpp:779</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_a93a71ad0ee26929fa88cb366f3d5a212"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a93a71ad0ee26929fa88cb366f3d5a212">efd::NDQOpMeasure::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01033">Nodes.cpp:1033</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a968d272d94c9e4eca11c86a7e157932d"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a968d272d94c9e4eca11c86a7e157932d">efd::NDGateSign::Create</a></div><div class="ttdeci">static uRef Create(NDId::uRef idNode, NDList::uRef aNode, NDList::uRef qaNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00784">Nodes.cpp:784</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_ae5c408d49862e644f1d299ab5b2f121d"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ae5c408d49862e644f1d299ab5b2f121d">efd::NDIfStmt::getQOp</a></div><div class="ttdeci">NDQOp::Ref getQOp() const</div><div class="ttdoc">Gets the qop. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00543">Nodes.cpp:543</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a4ec4c7fa3e399cf6e52a4001d9fe232e"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a4ec4c7fa3e399cf6e52a4001d9fe232e">efd::NDQOp::isU</a></div><div class="ttdeci">bool isU() const</div><div class="ttdoc">Returns true if this is a u node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00881">Nodes.cpp:881</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_a7a5a05b65b0a861b0ef9cc07a61452fc"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a7a5a05b65b0a861b0ef9cc07a61452fc">efd::NDQOpGen::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01144">Nodes.cpp:1144</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpBarrier_xhtml_a24dfe81706661429364d68c2f8433c5d"><div class="ttname"><a href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a24dfe81706661429364d68c2f8433c5d">efd::NDQOpBarrier::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00993">Nodes.cpp:993</a></div></div>
<div class="ttc" id="classefd_1_1NDDecl_xhtml_abaecb01dd85f5fe959aa93b7744f9006"><div class="ttname"><a href="../../d0/d9e/classefd_1_1NDDecl.xhtml#abaecb01dd85f5fe959aa93b7744f9006">efd::NDDecl::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00202">Nodes.cpp:202</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_a65aa7f7e6b3c1f6f04c7d0593a7f9f05"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a65aa7f7e6b3c1f6f04c7d0593a7f9f05">efd::NDQOpCX::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01126">Nodes.cpp:1126</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a0b5d1d9d07f3435df1317ac493ac00ce"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a0b5d1d9d07f3435df1317ac493ac00ce">efd::NDList::addChildren</a></div><div class="ttdeci">Iterator addChildren(std::vector&lt; Node::uRef &gt; children)</div><div class="ttdoc">Appends children to the end of the list. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00366">Nodes.cpp:366</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a11df06f4d8e590426340024cbb2db23e"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a11df06f4d8e590426340024cbb2db23e">efd::Node::getChildNumber</a></div><div class="ttdeci">virtual uint32_t getChildNumber() const =0</div><div class="ttdoc">Returns the number of childrem of this node. </div></div>
<div class="ttc" id="classefd_1_1NDGOpList_xhtml"><div class="ttname"><a href="../../da/d14/classefd_1_1NDGOpList.xhtml">efd::NDGOpList</a></div><div class="ttdoc">Node for list of qubit operation sequences inside gate declarations. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00399">Nodes.h:399</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_addff40c34428c793195bdd6bbc7e8679"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#addff40c34428c793195bdd6bbc7e8679">efd::NDIfStmt::getOperation</a></div><div class="ttdeci">std::string getOperation() const override</div><div class="ttdoc">Returns a std::string representation of the operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00576">Nodes.cpp:576</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_ae8000a4f62358d54ce0bf754200f8457"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#ae8000a4f62358d54ce0bf754200f8457">efd::NDQOpMeasure::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01037">Nodes.cpp:1037</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_a78b895bd673cec64f142938ad2d0940d"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a78b895bd673cec64f142938ad2d0940d">efd::NDQOpGen::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01161">Nodes.cpp:1161</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_a86ebc66bcdc566301ba4e5bf1abef777"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a86ebc66bcdc566301ba4e5bf1abef777">efd::NDQOpMeasure::NDQOpMeasure</a></div><div class="ttdeci">NDQOpMeasure(Node::uRef qNode, Node::uRef cNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01007">Nodes.cpp:1007</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml_ae7b4ee3d6f2f0c533a0a9b552b595586"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml#ae7b4ee3d6f2f0c533a0a9b552b595586">efd::NDStmtList::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00460">Nodes.cpp:460</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpBarrier_xhtml_a5cc87c3a1cbbddc361110e7d6a975c9f"><div class="ttname"><a href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a5cc87c3a1cbbddc361110e7d6a975c9f">efd::NDQOpBarrier::Create</a></div><div class="ttdeci">static uRef Create(NDList::uRef qaNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01002">Nodes.cpp:1002</a></div></div>
<div class="ttc" id="classefd_1_1NDGOpList_xhtml_a4474b2938ed3cbdbd6611978a5e410c7"><div class="ttname"><a href="../../da/d14/classefd_1_1NDGOpList.xhtml#a4474b2938ed3cbdbd6611978a5e410c7">efd::NDGOpList::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00504">Nodes.cpp:504</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_ab50b3a7ceeeae1685e2a17f9d6da3443"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ab50b3a7ceeeae1685e2a17f9d6da3443">efd::NDIfStmt::setCondN</a></div><div class="ttdeci">void setCondN(NDInt::uRef ref)</div><div class="ttdoc">Sets the int inside the conditional. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00539">Nodes.cpp:539</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_a8700a0eb5ff3cee0e3b52c56f3cc2b3c"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#a8700a0eb5ff3cee0e3b52c56f3cc2b3c">efd::NDQOp::isGeneric</a></div><div class="ttdeci">bool isGeneric() const</div><div class="ttdoc">Returns true if this is a generic node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00889">Nodes.cpp:889</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_ae263dbaa2c41c342fbd3bcdc78a4b2e5"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#ae263dbaa2c41c342fbd3bcdc78a4b2e5">efd::NDBinOp::setLhs</a></div><div class="ttdeci">void setLhs(Node::uRef ref)</div><div class="ttdoc">Sets the left hand side argument. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01196">Nodes.cpp:1196</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a1e53690d306232c495e7ef02b6c70b8d"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a1e53690d306232c495e7ef02b6c70b8d">efd::NDBinOp::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01265">Nodes.cpp:1265</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a89178f510554f507cd76a0c179766668"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a89178f510554f507cd76a0c179766668">efd::NDUnaryOp::isCos</a></div><div class="ttdeci">bool isCos() const</div><div class="ttdoc">Returns whether this is an cos operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01318">Nodes.cpp:1318</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a7956650a64a0fa320241abe08e38de6b"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a7956650a64a0fa320241abe08e38de6b">efd::NDUnaryOp::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01298">Nodes.cpp:1298</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a2e104ba9e32eba8e0cff96c9241a0b61"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a2e104ba9e32eba8e0cff96c9241a0b61">efd::NDBinOp::NDBinOp</a></div><div class="ttdeci">NDBinOp(OpType t, Node::uRef lhsNode, Node::uRef rhsNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01182">Nodes.cpp:1182</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml_a4633ae31398d63e5f44247819052f334"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml#a4633ae31398d63e5f44247819052f334">efd::NDQOpMeasure::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01041">Nodes.cpp:1041</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_adb0f8cedefb3c43a5e8346f31feaa9c0"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#adb0f8cedefb3c43a5e8346f31feaa9c0">efd::NDQasmVersion::getVersion</a></div><div class="ttdeci">NDReal::Ref getVersion() const</div><div class="ttdoc">Gets the node that holds the version. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00614">Nodes.cpp:614</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_a36db510b4916456fd0616f4265bad484"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a36db510b4916456fd0616f4265bad484">efd::NDQasmVersion::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00606">Nodes.cpp:606</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_a0be5984f118128bc3e2bf64a8a390071"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#a0be5984f118128bc3e2bf64a8a390071">efd::NDGateSign::getArgs</a></div><div class="ttdeci">NDList::Ref getArgs() const</div><div class="ttdoc">Gets the args node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00734">Nodes.cpp:734</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a8a024f4a6c321f6af9db9202105fcad2"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a8a024f4a6c321f6af9db9202105fcad2">efd::Node::equals</a></div><div class="ttdeci">bool equals(Node::Ref ref) const</div><div class="ttdoc">Compares recursively the equality between two nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00096">Nodes.cpp:96</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_a69d10bbd9d17475d61d30d878f294363"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a69d10bbd9d17475d61d30d878f294363">efd::NDIfStmt::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00580">Nodes.cpp:580</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a1d11fded9d8c28fdcb81cb01bbe372bb"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a1d11fded9d8c28fdcb81cb01bbe372bb">efd::NDUnaryOp::getChildNumber</a></div><div class="ttdeci">uint32_t getChildNumber() const override</div><div class="ttdoc">Returns the number of childrem of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01357">Nodes.cpp:1357</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml_ae1a4518aa5a5ba67545587381c9e0fa1"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml#ae1a4518aa5a5ba67545587381c9e0fa1">efd::NDRegDecl::getOperation</a></div><div class="ttdeci">std::string getOperation() const override</div><div class="ttdoc">Returns a std::string representation of the operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00235">Nodes.cpp:235</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml">efd::NDList</a></div><div class="ttdoc">Base class for list of nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00331">Nodes.h:331</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml_a2b028b7cc329c76706aca9093fae669f"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a2b028b7cc329c76706aca9093fae669f">efd::NDQOpU::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01082">Nodes.cpp:1082</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a318c6647873cd2a5eb0dc400322fd34a"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a318c6647873cd2a5eb0dc400322fd34a">efd::NDBinOp::getOpType</a></div><div class="ttdeci">OpType getOpType() const</div><div class="ttdoc">Returns the type of the binary operation of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01208">Nodes.cpp:1208</a></div></div>
<div class="ttc" id="classefd_1_1NDGOpList_xhtml_a45248b86ddde28c6bf046716b292e41f"><div class="ttname"><a href="../../da/d14/classefd_1_1NDGOpList.xhtml#a45248b86ddde28c6bf046716b292e41f">efd::NDGOpList::toString</a></div><div class="ttdeci">std::string toString(bool pretty=false) const override</div><div class="ttdoc">Returns a std::string representation of this Node and its childrem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00491">Nodes.cpp:491</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml_a59b4636704c298788d3535799a09cf77"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a59b4636704c298788d3535799a09cf77">efd::NDGateDecl::getOperation</a></div><div class="ttdeci">std::string getOperation() const override</div><div class="ttdoc">Returns a std::string representation of the operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00812">Nodes.cpp:812</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_aed2ba2ed453bc5ec3f84b45b836f041e"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#aed2ba2ed453bc5ec3f84b45b836f041e">efd::NDList::cloneChildrem</a></div><div class="ttdeci">void cloneChildrem(const NDList *list)</div><div class="ttdoc">Deep-copies the childrem of list. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00341">Nodes.cpp:341</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_a78a4447b7eebbca4ce27c1a3d34fb402"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a78a4447b7eebbca4ce27c1a3d34fb402">efd::NDQOpCX::setLhs</a></div><div class="ttdeci">void setLhs(Node::uRef ref)</div><div class="ttdoc">Sets the left hand side of the gate. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01106">Nodes.cpp:1106</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_ac9549080de280c8c2181c64a7179a33b"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ac9549080de280c8c2181c64a7179a33b">efd::NDIfStmt::Create</a></div><div class="ttdeci">static uRef Create(NDId::uRef cidNode, NDInt::uRef nNode, NDQOp::uRef qopNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00584">Nodes.cpp:584</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a1e32be8e4a32f9fb4c02494cd4011b4b"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a1e32be8e4a32f9fb4c02494cd4011b4b">efd::NDUnaryOp::isNeg</a></div><div class="ttdeci">bool isNeg() const</div><div class="ttdoc">Returns whether this is an neg operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01338">Nodes.cpp:1338</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml_aacd4ae915b1f9cc1df3e9b473061c458"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml#aacd4ae915b1f9cc1df3e9b473061c458">efd::NDStmtList::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00469">Nodes.cpp:469</a></div></div>
<div class="ttc" id="classefd_1_1NDStmtList_xhtml_a5e5f1b0f2a5395ff5c4183f6b7f9292c"><div class="ttname"><a href="../../da/d7f/classefd_1_1NDStmtList.xhtml#a5e5f1b0f2a5395ff5c4183f6b7f9292c">efd::NDStmtList::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00456">Nodes.cpp:456</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_aa1729ed919eb6f57251b699be12dd3b2"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#aa1729ed919eb6f57251b699be12dd3b2">efd::NDValue::getOperation</a></div><div class="ttdeci">std::string getOperation() const override</div><div class="ttdoc">Returns a std::string representation of the operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l01028">Nodes.h:1028</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_a5a3a5c0ff32f813fecc0560231368b75"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a5a3a5c0ff32f813fecc0560231368b75">efd::NDQasmVersion::setVersion</a></div><div class="ttdeci">void setVersion(NDReal::uRef ref)</div><div class="ttdoc">Sets the node that holds the version. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00618">Nodes.cpp:618</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml_a57d2d0780b75ad6459a9852dfc5d1e8e"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a57d2d0780b75ad6459a9852dfc5d1e8e">efd::NDQOpU::Create</a></div><div class="ttdeci">static uRef Create(NDList::uRef aNode, Node::uRef qaNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01091">Nodes.cpp:1091</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_a1ef3dcf23e3d8a378f5da8d56290abfe"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#a1ef3dcf23e3d8a378f5da8d56290abfe">efd::NDBinOp::isDiv</a></div><div class="ttdeci">bool isDiv() const</div><div class="ttdoc">Returns whether this is an div operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01224">Nodes.cpp:1224</a></div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_a051a5c3f07d0d9d6177def933a4d71e6"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#a051a5c3f07d0d9d6177def933a4d71e6">efd::NDIfStmt::getCondN</a></div><div class="ttdeci">NDInt::Ref getCondN() const</div><div class="ttdoc">Gets the int inside the conditional. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00535">Nodes.cpp:535</a></div></div>
<div class="ttc" id="classefd_1_1NDQasmVersion_xhtml_a0b3d6631a2f8b92a950ac6ef60c2d7ce"><div class="ttname"><a href="../../d9/dcb/classefd_1_1NDQasmVersion.xhtml#a0b3d6631a2f8b92a950ac6ef60c2d7ce">efd::NDQasmVersion::ClassOf</a></div><div class="ttdeci">static bool ClassOf(const Node *node)</div><div class="ttdoc">Returns whether the node is an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00643">Nodes.cpp:643</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a685e3afd76819bc134a3dfdd44c9e4e9ab39d20266cc0612b52ed96575e06809a">efd::ExitCode::EXIT_unreachable</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_a381f5bae7577d37327a824973f81d494"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#a381f5bae7577d37327a824973f81d494">efd::NDList::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDList &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00334">Nodes.h:334</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_a14c6ee12f965af69fa948af221146d1f"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a14c6ee12f965af69fa948af221146d1f">efd::NDQOpGen::NDQOpGen</a></div><div class="ttdeci">NDQOpGen(NDId::uRef idNode, NDList::uRef aNode, NDList::uRef qaNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01135">Nodes.cpp:1135</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml_a03dc5a5c5c62ace6c468f2932fd368ea"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a03dc5a5c5c62ace6c468f2932fd368ea">efd::NDGateDecl::NDGateDecl</a></div><div class="ttdeci">NDGateDecl(NDId::uRef idNode, NDList::uRef aNode, NDList::uRef qaNode, NDGOpList::uRef gopNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00789">Nodes.cpp:789</a></div></div>
<div class="ttc" id="classefd_1_1NDGateDecl_xhtml_a2d8925dec2b81ba1a9ecc8f566fb0d1b"><div class="ttname"><a href="../../d1/d4b/classefd_1_1NDGateDecl.xhtml#a2d8925dec2b81ba1a9ecc8f566fb0d1b">efd::NDGateDecl::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDGateDecl &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00546">Nodes.h:546</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a666ff4d2eac98f15341daab7f4f1ee08"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a666ff4d2eac98f15341daab7f4f1ee08">efd::Node::setGenerated</a></div><div class="ttdeci">void setGenerated()</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00074">Nodes.cpp:74</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a8ac8c3206c6f6817a8c8e515ac830f61"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a8ac8c3206c6f6817a8c8e515ac830f61">efd::Node::innerAddChild</a></div><div class="ttdeci">void innerAddChild(uRef ref)</div><div class="ttdoc">Adds a child to this node. It should be used only for construction of each derived class...</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00013">Nodes.cpp:13</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_a316704b1e616364e1d8a8589a840d097"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#a316704b1e616364e1d8a8589a840d097">efd::NDValue::NDValue</a></div><div class="ttdeci">NDValue(T val)</div></div>
<div class="ttc" id="classefd_1_1NDIfStmt_xhtml_ab3189e49254cadc7f06b27a001c444e6"><div class="ttname"><a href="../../dc/d9d/classefd_1_1NDIfStmt.xhtml#ab3189e49254cadc7f06b27a001c444e6">efd::NDIfStmt::NDIfStmt</a></div><div class="ttdeci">NDIfStmt(NDId::uRef cidNode, NDInt::uRef nNode, NDQOp::uRef qopNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00513">Nodes.cpp:513</a></div></div>
<div class="ttc" id="structefd_1_1WrapperVal_xhtml"><div class="ttname"><a href="../../d9/d7a/structefd_1_1WrapperVal.xhtml">efd::WrapperVal</a></div><div class="ttdoc">Wrapper for primitive values. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d2e/WrapperVal_8h_source.xhtml#l00013">WrapperVal.h:13</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_a212123bd45372604e87dd73fb9969e03"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a212123bd45372604e87dd73fb9969e03">efd::NDQOpCX::Create</a></div><div class="ttdeci">static uRef Create(Node::uRef lhsNode, Node::uRef rhsNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01130">Nodes.cpp:1130</a></div></div>
<div class="ttc" id="uRefCast_8h_xhtml"><div class="ttname"><a href="../../dc/d09/uRefCast_8h.xhtml">uRefCast.h</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a6b20e84bf4ce49728abe924942892f18"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a6b20e84bf4ce49728abe924942892f18">efd::NDUnaryOp::isTan</a></div><div class="ttdeci">bool isTan() const</div><div class="ttdoc">Returns whether this is an tan operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01322">Nodes.cpp:1322</a></div></div>
<div class="ttc" id="classefd_1_1NDGateSign_xhtml_ac0f41d3a80cca36d590d3f7bcc1b7dc2"><div class="ttname"><a href="../../db/d1f/classefd_1_1NDGateSign.xhtml#ac0f41d3a80cca36d590d3f7bcc1b7dc2">efd::NDGateSign::isOpaque</a></div><div class="ttdeci">bool isOpaque() const</div><div class="ttdoc">Returns true if this is an opaque gate. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00723">Nodes.cpp:723</a></div></div>
<div class="ttc" id="Defs_8h_xhtml"><div class="ttname"><a href="../../d1/d73/Defs_8h.xhtml">Defs.h</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml_a496b70278a8dc630d9d9be39c676f5b6"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#a496b70278a8dc630d9d9be39c676f5b6">efd::NDQOpU::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; NDQOpU &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00719">Nodes.h:719</a></div></div>
<div class="ttc" id="classefd_1_1NDIdRef_xhtml_aee4047da725c610abf28c2558ff5012f"><div class="ttname"><a href="../../d8/dd2/classefd_1_1NDIdRef.xhtml#aee4047da725c610abf28c2558ff5012f">efd::NDIdRef::getId</a></div><div class="ttdeci">NDId::Ref getId() const</div><div class="ttdoc">Gets the id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00293">Nodes.cpp:293</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_afc4cabda284ad7319a38466d6c80e115"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#afc4cabda284ad7319a38466d6c80e115">efd::NDUnaryOp::isSin</a></div><div class="ttdeci">bool isSin() const</div><div class="ttdoc">Returns whether this is an sin operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01314">Nodes.cpp:1314</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_a535ceee9c756aaf0b2695979b54e5c6f"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#a535ceee9c756aaf0b2695979b54e5c6f">efd::NDUnaryOp::NDUnaryOp</a></div><div class="ttdeci">NDUnaryOp(UOpType t, Node::uRef oNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01294">Nodes.cpp:1294</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_acdb5cc3d663ae31fe14464b61e748435"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#acdb5cc3d663ae31fe14464b61e748435">efd::NDQOpGen::Create</a></div><div class="ttdeci">static uRef Create(NDId::uRef idNode, NDList::uRef aNode, NDList::uRef qaNode)</div><div class="ttdoc">Creates a new instance of this node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01177">Nodes.cpp:1177</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml_a3c1603045c035cfc0cf00800689fd5b4"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml#a3c1603045c035cfc0cf00800689fd5b4">efd::NDQOpCX::cloneImpl</a></div><div class="ttdeci">Node::uRef cloneImpl() const override</div><div class="ttdoc">Clones the current node (deep copy). </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01122">Nodes.cpp:1122</a></div></div>
<div class="ttc" id="classefd_1_1NDValue_xhtml_ae160ac5a42d2c3e6a2f35622330e6407"><div class="ttname"><a href="../../df/d1b/classefd_1_1NDValue.xhtml#ae160ac5a42d2c3e6a2f35622330e6407">efd::NDValue::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div></div>
<div class="ttc" id="classefd_1_1NDQOpMeasure_xhtml"><div class="ttname"><a href="../../d4/d64/classefd_1_1NDQOpMeasure.xhtml">efd::NDQOpMeasure</a></div><div class="ttdoc">NDQOp specialized for measure operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00681">Nodes.h:681</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpGen_xhtml_a00f1b64c13766964893ec0cdb42bafdf"><div class="ttname"><a href="../../d2/dff/classefd_1_1NDQOpGen.xhtml#a00f1b64c13766964893ec0cdb42bafdf">efd::NDQOpGen::isIntrinsic</a></div><div class="ttdeci">bool isIntrinsic() const</div><div class="ttdoc">Returns whether this node is in an intrinsic node. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01157">Nodes.cpp:1157</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpCX_xhtml"><div class="ttname"><a href="../../d3/d14/classefd_1_1NDQOpCX.xhtml">efd::NDQOpCX</a></div><div class="ttdoc">NDQOp specialized for barrier operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00744">Nodes.h:744</a></div></div>
<div class="ttc" id="classefd_1_1NDQOp_xhtml_aa9d90f493865fe9cdc3fecd468eaa33b"><div class="ttname"><a href="../../dd/d94/classefd_1_1NDQOp.xhtml#aa9d90f493865fe9cdc3fecd468eaa33b">efd::NDQOp::getId</a></div><div class="ttdeci">NDId::Ref getId() const</div><div class="ttdoc">Gets the id. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00893">Nodes.cpp:893</a></div></div>
<div class="ttc" id="classefd_1_1NDDecl_xhtml_a8e4ecd63efbbb72224dd99fc8a2eb69b"><div class="ttname"><a href="../../d0/d9e/classefd_1_1NDDecl.xhtml#a8e4ecd63efbbb72224dd99fc8a2eb69b">efd::NDDecl::isReg</a></div><div class="ttdeci">bool isReg() const</div><div class="ttdoc">Returns true if this is a register declaration. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00194">Nodes.cpp:194</a></div></div>
<div class="ttc" id="classefd_1_1NDRegDecl_xhtml"><div class="ttname"><a href="../../da/d97/classefd_1_1NDRegDecl.xhtml">efd::NDRegDecl</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00245">Nodes.h:245</a></div></div>
<div class="ttc" id="classefd_1_1NDList_xhtml_ae7c4d5c8dcb0a7439b62e3f662cbb85f"><div class="ttname"><a href="../../da/ddd/classefd_1_1NDList.xhtml#ae7c4d5c8dcb0a7439b62e3f662cbb85f">efd::NDList::removeChild</a></div><div class="ttdeci">Iterator removeChild(Iterator it)</div><div class="ttdoc">Removes the child in the iterator it. The iterator moves to the next element. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00386">Nodes.cpp:386</a></div></div>
<div class="ttc" id="classefd_1_1NDBinOp_xhtml_aea7bbf91c09d7683ae00baf647db6fb9"><div class="ttname"><a href="../../d8/df0/classefd_1_1NDBinOp.xhtml#aea7bbf91c09d7683ae00baf647db6fb9">efd::NDBinOp::isAdd</a></div><div class="ttdeci">bool isAdd() const</div><div class="ttdoc">Returns whether this is an add operation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01212">Nodes.cpp:1212</a></div></div>
<div class="ttc" id="classefd_1_1NDUnaryOp_xhtml_ab000b532a5c1dd5476db17cdb10f8992"><div class="ttname"><a href="../../de/dd3/classefd_1_1NDUnaryOp.xhtml#ab000b532a5c1dd5476db17cdb10f8992">efd::NDUnaryOp::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01361">Nodes.cpp:1361</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpBarrier_xhtml_a0fe1f99d9b17cc922220a2a9810b5c42"><div class="ttname"><a href="../../d2/d2a/classefd_1_1NDQOpBarrier.xhtml#a0fe1f99d9b17cc922220a2a9810b5c42">efd::NDQOpBarrier::NDQOpBarrier</a></div><div class="ttdeci">NDQOpBarrier(NDList::uRef qaNode)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00985">Nodes.cpp:985</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpU_xhtml_ae838a9f802b7225b1a0909fb205779a4"><div class="ttname"><a href="../../d7/dbe/classefd_1_1NDQOpU.xhtml#ae838a9f802b7225b1a0909fb205779a4">efd::NDQOpU::getQArg</a></div><div class="ttdeci">Node::Ref getQArg() const</div><div class="ttdoc">Gets the quantum argument. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l01070">Nodes.cpp:1070</a></div></div>
<div class="ttc" id="classefd_1_1NDQOpReset_xhtml_a04175033957718248b2fc868bb731893"><div class="ttname"><a href="../../d0/dd2/classefd_1_1NDQOpReset.xhtml#a04175033957718248b2fc868bb731893">efd::NDQOpReset::apply</a></div><div class="ttdeci">void apply(NodeVisitor *visitor) override</div><div class="ttdoc">Used by visitor classes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d89/Nodes_8cpp_source.xhtml#l00968">Nodes.cpp:968</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:34 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
