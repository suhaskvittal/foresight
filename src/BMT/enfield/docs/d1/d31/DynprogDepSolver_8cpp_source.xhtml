<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Transform/Allocators/DynprogDepSolver.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_582f290f049f08c25ab9fc887a9170ac.xhtml">Transform</a></li><li class="navelem"><a class="el" href="../../dir_06974191db7fbe66527a95ceac77ccfb.xhtml">Allocators</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">DynprogDepSolver.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d1/d31/DynprogDepSolver_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Transform/Allocators/DynprogDepSolver.h&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Support/BFSPathFinder.h&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Support/CommandLine.h&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;enfield/Support/ExpTSFinder.h&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">unordered_map</span><span class="preprocessor">&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">limits</span><span class="preprocessor">&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">queue</span><span class="preprocessor">&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">iostream</span><span class="preprocessor">&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">algorithm</span><span class="preprocessor">&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d1/d31/DynprogDepSolver_8cpp.xhtml#a0d146162f9e8a865b915f60c5e6d653a">   12</a></span>&#160;<span class="keyword">const</span> uint32_t <a class="code" href="../../d1/d31/DynprogDepSolver_8cpp.xhtml#a0d146162f9e8a865b915f60c5e6d653a">UNREACH</a> = <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::numeric_limits&lt;uint32_t&gt;::max();</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../df/d2f/structVal.xhtml">   14</a></span>&#160;<span class="keyword">struct</span> <a class="code" href="../../df/d2f/structVal.xhtml">Val</a> {</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../df/d2f/structVal.xhtml#a5ffa77ec211d52104a418e69b9d1fcba">   15</a></span>&#160;    uint32_t <a class="code" href="../../df/d2f/structVal.xhtml#a5ffa77ec211d52104a418e69b9d1fcba">pId</a>;</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../df/d2f/structVal.xhtml#a22760f2794c5b45a26a532716edbb231">   16</a></span>&#160;    <a class="code" href="../../df/d2f/structVal.xhtml">Val</a>* <a class="code" href="../../df/d2f/structVal.xhtml#a22760f2794c5b45a26a532716edbb231">parent</a>;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">   17</a></span>&#160;    uint32_t <a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">cost</a>;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;};</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="../../d7/d65/structPermVal.xhtml">   20</a></span>&#160;<span class="keyword">struct</span> <a class="code" href="../../d7/d65/structPermVal.xhtml">PermVal</a> {</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../d7/d65/structPermVal.xhtml#ad52c08a9d92f747c54f0c744c8d59a15">   21</a></span>&#160;    uint32_t <a class="code" href="../../d7/d65/structPermVal.xhtml#ad52c08a9d92f747c54f0c744c8d59a15">idx</a>;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../d7/d65/structPermVal.xhtml#a5468c28e9f01d2c98e9919eea12eaa56">   22</a></span>&#160;    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;uint32_t&gt; <a class="code" href="../../d7/d65/structPermVal.xhtml#a5468c28e9f01d2c98e9919eea12eaa56">perm</a>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;};</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> uint32_t min(uint32_t a, uint32_t b) {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">if</span> (a == <a class="code" href="../../d1/d31/DynprogDepSolver_8cpp.xhtml#a0d146162f9e8a865b915f60c5e6d653a">UNREACH</a> &amp;&amp; b == <a class="code" href="../../d1/d31/DynprogDepSolver_8cpp.xhtml#a0d146162f9e8a865b915f60c5e6d653a">UNREACH</a>)</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d1/d31/DynprogDepSolver_8cpp.xhtml#a0d146162f9e8a865b915f60c5e6d653a">UNREACH</a>;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordflow">if</span> (a == <a class="code" href="../../d1/d31/DynprogDepSolver_8cpp.xhtml#a0d146162f9e8a865b915f60c5e6d653a">UNREACH</a>) <span class="keywordflow">return</span> b;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">if</span> (b == <a class="code" href="../../d1/d31/DynprogDepSolver_8cpp.xhtml#a0d146162f9e8a865b915f60c5e6d653a">UNREACH</a>) <span class="keywordflow">return</span> a;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordflow">return</span> (a &lt; b) ? a : b;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> <a class="code" href="../../df/d2f/structVal.xhtml">Val</a> minVal(<a class="code" href="../../df/d2f/structVal.xhtml">Val</a>&amp; a, <a class="code" href="../../df/d2f/structVal.xhtml">Val</a>&amp; b) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    uint32_t cost = min(a<a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">.</a><a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">cost</a>, b<a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">.</a><a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">cost</a>);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">if</span> (cost == a<a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">.</a><a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">cost</a>) <span class="keywordflow">return</span> a;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">return</span> b;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#a5868e2497ee8e2ebde15c6949b36db6f">   41</a></span>&#160;uint32_t <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml">DynprogDepSolver</a>::<a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#a5868e2497ee8e2ebde15c6949b36db6f">getIntermediateV</a>(uint32_t u, uint32_t v) {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">auto</span>&amp; succ = <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#a64836ad3c96e79e02179787ce3bd42c9">succ</a><a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#a64836ad3c96e79e02179787ce3bd42c9">(</a>u<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#a64836ad3c96e79e02179787ce3bd42c9">)</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; w : succ) {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; z : <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#a64836ad3c96e79e02179787ce3bd42c9">succ</a><a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#a64836ad3c96e79e02179787ce3bd42c9">(</a>w<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#a64836ad3c96e79e02179787ce3bd42c9">)</a>)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordflow">if</span> (z == v) <span class="keywordflow">return</span> w;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; z : <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#ac63b24166d3aa01848e0bd2ad9d46f2e">pred</a><a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#ac63b24166d3aa01848e0bd2ad9d46f2e">(</a>w<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#ac63b24166d3aa01848e0bd2ad9d46f2e">)</a>)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <span class="keywordflow">if</span> (z == v) <span class="keywordflow">return</span> w;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d1/d31/DynprogDepSolver_8cpp.xhtml#a0d146162f9e8a865b915f60c5e6d653a">UNREACH</a>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#afc4e73c904eefb1049eb09e2e1b6fd32">   54</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml">Solution</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml">DynprogDepSolver</a>::<a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#afc4e73c904eefb1049eb09e2e1b6fd32">solve</a>(DepsSet&amp; deps) {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml">ExpTSFinder</a> tsp<a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a9ac33b40a256ccd1201dbc41b7a14152">(</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a><a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a9ac33b40a256ccd1201dbc41b7a14152">)</a>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">auto</span> permutations = tsp<a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#ac0c3335eda8fc8acd94ccd93f66e495a">.</a><a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#ac0c3335eda8fc8acd94ccd93f66e495a">mAssigns</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    uint32_t archQ = <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">size</a><a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">(</a><a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">)</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">const</span> uint32_t SWAP_COST = <a class="code" href="../../d0/d91/QbitAllocator_8cpp.xhtml#a99fd7c5ea250372d9b17e42df7764318">SwapCost</a><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">.</a><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">getVal</a><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">(</a><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">)</a>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">const</span> uint32_t REV_COST = <a class="code" href="../../d0/d91/QbitAllocator_8cpp.xhtml#a36846d9fb7f5b314db3aa16d72efe81f">RevCost</a><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">.</a><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">getVal</a><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">(</a><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">)</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">const</span> uint32_t LCX_COST = <a class="code" href="../../d0/d91/QbitAllocator_8cpp.xhtml#a37e324531f1d9e6e8b4304b6043309a9">LCXCost</a><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">.</a><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">getVal</a><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">(</a><a class="code" href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">)</a>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    uint32_t permN = permutations.size();</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    uint32_t depN = deps.size();</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">auto</span> finder = <a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml">BFSPathFinder</a><a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a795602a2f10b312f8917cf0ed4122834">::</a><a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a795602a2f10b312f8917cf0ed4122834">Create</a><a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a795602a2f10b312f8917cf0ed4122834">(</a><a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a795602a2f10b312f8917cf0ed4122834">)</a>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="comment">// std::vector&lt;std::vector&lt;uint32_t&gt;*&gt; permIdMap(permN, nullptr);</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">// for (auto &amp;pair : PermMap)</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="comment">//     permIdMap[pair.second.idx] = &amp;pair.second.perm;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="comment">// Map with the minimum number of vals at time &#39;i&#39;.</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="../../df/d2f/structVal.xhtml">Val</a> vals[permN][depN + 1];</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0; i &lt; permN; ++i)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        vals[i][0] = { i, <span class="keywordtype">nullptr</span>, 0 };</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0; i &lt; permN; ++i)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">for</span> (uint32_t j = 1; j &lt;= depN; ++j)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            vals[i][j] = { i, <span class="keywordtype">nullptr</span>, <a class="code" href="../../d1/d31/DynprogDepSolver_8cpp.xhtml#a0d146162f9e8a865b915f60c5e6d653a">UNREACH</a> };</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 1; i &lt;= depN; ++i) {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        assert(deps[i-1]<a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a162d900ef6a43cdd8e1097808f1f43c9">.</a><a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a162d900ef6a43cdd8e1097808f1f43c9">getSize</a><a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a162d900ef6a43cdd8e1097808f1f43c9">(</a><a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a162d900ef6a43cdd8e1097808f1f43c9">)</a> == 1 &amp;&amp;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <span class="stringliteral">&quot;Trying to allocate qbits to a gate with more than one dependency.&quot;</span>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml">Dep</a> dep = deps[i-1]<a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a8095a13dbb497fcb3cc56c8bcdb135f9">.</a><a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a8095a13dbb497fcb3cc56c8bcdb135f9">mDeps</a>[0];</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">for</span> (uint32_t tgt = 0; tgt &lt; permN; ++tgt) {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="comment">// Check if target tgtPermutation has the dependency required.</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keyword">auto</span>&amp; tgtPerm = permutations[tgt];</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="comment">// Arch qubit interaction (u, v)</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            uint32_t u = tgtPerm[dep.mFrom], v = tgtPerm[dep.mTo];</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="comment">// We don&#39;t use this configuration if (u, v) is neither a norma edge</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="comment">// nor a reverse edge of the physical graph nor is at a 2-edge distance</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="comment">// (u -&gt; w -&gt; v).</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordtype">bool</span> hasEdge = <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aace719bbdaaef0e8787f8a0032a676d8">hasEdge</a><a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aace719bbdaaef0e8787f8a0032a676d8">(</a>u<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aace719bbdaaef0e8787f8a0032a676d8">,</a> v<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aace719bbdaaef0e8787f8a0032a676d8">)</a>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordtype">bool</span> isReverse = <a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">isReverseEdge</a><a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">(</a>u<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">,</a> v<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">)</a>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordtype">bool</span> is2Dist = finder-&gt;<a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a4a91e28940313cb585654f5214187cac">find</a><a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a4a91e28940313cb585654f5214187cac">(</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>.get()<a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a4a91e28940313cb585654f5214187cac">,</a> u<a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a4a91e28940313cb585654f5214187cac">,</a> v<a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a4a91e28940313cb585654f5214187cac">)</a>.size() == 3;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">if</span> (!hasEdge &amp;&amp; !isReverse &amp;&amp; !is2Dist)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <a class="code" href="../../df/d2f/structVal.xhtml">Val</a> minimum { tgt, <span class="keywordtype">nullptr</span>, <a class="code" href="../../d1/d31/DynprogDepSolver_8cpp.xhtml#a0d146162f9e8a865b915f60c5e6d653a">UNREACH</a> };</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">for</span> (uint32_t src = 0; src &lt; permN; ++src) {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                <a class="code" href="../../df/d2f/structVal.xhtml">Val</a>&amp; srcVal = vals[src][i-1];</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="keywordflow">if</span> (srcVal<a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">.</a><a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">cost</a> == <a class="code" href="../../d1/d31/DynprogDepSolver_8cpp.xhtml#a0d146162f9e8a865b915f60c5e6d653a">UNREACH</a>)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                    <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                uint32_t finalCost = srcVal<a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">.</a><a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">cost</a>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                <span class="keywordflow">if</span> (tgt != src) {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    <span class="keyword">auto</span> srcAssign = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">GenAssignment</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">(</a>archQ<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">,</a> permutations[src]<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">)</a>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                    <span class="keyword">auto</span> tgtAssign = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">GenAssignment</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">(</a>archQ<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">,</a> tgtPerm<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">)</a>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                    finalCost += tsp<a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a35a44b5b9217452b564e5e519f977a30">.</a><a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a35a44b5b9217452b564e5e519f977a30">find</a><a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a35a44b5b9217452b564e5e519f977a30">(</a>srcAssign<a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a35a44b5b9217452b564e5e519f977a30">,</a> tgtAssign<a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a35a44b5b9217452b564e5e519f977a30">)</a>.size() * SWAP_COST;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                <span class="keywordflow">if</span> (!hasEdge) {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                    <span class="comment">// Increase cost if using reverse edge.</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                    <span class="keywordflow">if</span> (isReverse)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                        finalCost += REV_COST;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                    <span class="comment">// Else, increase cost if using long cnot gate.</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (is2Dist)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                        finalCost += LCX_COST;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                }</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <a class="code" href="../../df/d2f/structVal.xhtml">Val</a> thisVal { tgt, &amp;srcVal, finalCost };</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                minimum = minVal(minimum, thisVal);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            vals[tgt][i] = minimum;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="comment">// Get the minimum cost setup.</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="../../df/d2f/structVal.xhtml">Val</a>* val = &amp;vals[0][depN];</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 1; i &lt; permN; ++i) {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        uint32_t minCost = min(val<a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">-&gt;</a><a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">cost</a>, vals[i][depN]<a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">.</a><a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">cost</a>);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        val = (minCost == val<a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">-&gt;</a><a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">cost</a>) ? val : &amp;vals[i][depN];</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml">Solution</a> solution;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    solution<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a95fbd5a3cc1c578ed6082a4b4fead836">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a95fbd5a3cc1c578ed6082a4b4fead836">mCost</a> = val<a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">-&gt;</a><a class="code" href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">cost</a>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    solution<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">mOpSeqs</a>.assign(depN, <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::pair&lt;<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml">Node</a>::<a class="code" href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">Ref</a>, <a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml">Solution</a>::<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#aece8d5b7bc71b4f518d0e32b3ab1ec2c">OpVector</a>&gt;());</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="comment">// Get the target mappings for each dependency (with its id).</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::vector&lt;<a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::pair&lt;uint32_t, Mapping&gt;&gt; mappings(depN);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = depN-1; i &gt;= 0; --i) {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        assert(val<a class="code" href="../../df/d2f/structVal.xhtml#a22760f2794c5b45a26a532716edbb231">-&gt;</a><a class="code" href="../../df/d2f/structVal.xhtml#a22760f2794c5b45a26a532716edbb231">parent</a> != <span class="keywordtype">nullptr</span> &amp;&amp; <span class="stringliteral">&quot;Nullptr reached too soon.&quot;</span>);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        mappings[i] = <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::make_pair(val<a class="code" href="../../df/d2f/structVal.xhtml#a5ffa77ec211d52104a418e69b9d1fcba">-&gt;</a><a class="code" href="../../df/d2f/structVal.xhtml#a5ffa77ec211d52104a418e69b9d1fcba">pId</a>, permutations[val-&gt;pId]);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        val = val<a class="code" href="../../df/d2f/structVal.xhtml#a22760f2794c5b45a26a532716edbb231">-&gt;</a><a class="code" href="../../df/d2f/structVal.xhtml#a22760f2794c5b45a26a532716edbb231">parent</a>;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">if</span> (depN == 0) {</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">for</span> (uint32_t i = 0; i &lt; archQ; ++i)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            solution<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a61fb88a6c3077b7d1abb47887bd01b11">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a61fb88a6c3077b7d1abb47887bd01b11">mInitial</a>.push_back(i);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        solution<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a95fbd5a3cc1c578ed6082a4b4fead836">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a95fbd5a3cc1c578ed6082a4b4fead836">mCost</a> = 0;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        solution<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a61fb88a6c3077b7d1abb47887bd01b11">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#a61fb88a6c3077b7d1abb47887bd01b11">mInitial</a> = mappings[0].second;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        solution<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">mOpSeqs</a>[0].first = deps[0]<a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#abcbc6b75be680c6a35f38a8dbf968edc">.</a><a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#abcbc6b75be680c6a35f38a8dbf968edc">mCallPoint</a>;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">for</span> (uint32_t i = 1; i &lt; depN; ++i) {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            uint32_t srcId = mappings[i-1].first, tgtId = mappings[i].first;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="keyword">auto</span>&amp; ops = solution<a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">.</a><a class="code" href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">mOpSeqs</a>[i];</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keyword">auto</span>&amp; src = mappings[i-1].second;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keyword">auto</span>&amp; tgt = mappings[i].second;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">if</span> (srcId != tgtId) {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                <span class="keyword">auto</span> srcAssign = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">GenAssignment</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">(</a>archQ<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">,</a> src<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">)</a>;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                <span class="keyword">auto</span> tgtAssign = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">GenAssignment</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">(</a>archQ<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">,</a> tgt<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">)</a>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="keyword">auto</span> swaps = tsp<a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a35a44b5b9217452b564e5e519f977a30">.</a><a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a35a44b5b9217452b564e5e519f977a30">find</a><a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a35a44b5b9217452b564e5e519f977a30">(</a>srcAssign<a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a35a44b5b9217452b564e5e519f977a30">,</a> tgtAssign<a class="code" href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a35a44b5b9217452b564e5e519f977a30">)</a>;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                <span class="keywordflow">for</span> (<span class="keyword">auto</span> swp : swaps) {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                    uint32_t u = swp<a class="code" href="../../d8/d62/structefd_1_1Swap.xhtml#add0ebbf6822b65844ab5c34a852b62fe">.</a><a class="code" href="../../d8/d62/structefd_1_1Swap.xhtml#add0ebbf6822b65844ab5c34a852b62fe">u</a>, v = swp<a class="code" href="../../d8/d62/structefd_1_1Swap.xhtml#a85a25f0711e9e1f00ef9513bf9cab192">.</a><a class="code" href="../../d8/d62/structefd_1_1Swap.xhtml#a85a25f0711e9e1f00ef9513bf9cab192">v</a>;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                    <span class="keywordflow">if</span> (<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">isReverseEdge</a><a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">(</a>u<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">,</a> v<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">)</a>)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                        <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::swap(u, v);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    ops.second.push_back({ <a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml">Operation</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a46bb7ba2b32ce435a8ffafb2bab56671">::</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a46bb7ba2b32ce435a8ffafb2bab56671">K_OP_SWAP</a>, srcAssign[u], srcAssign[v] });</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                    <a class="code" href="../../d8/dcc/namespacestd.xhtml">std</a>::swap(srcAssign[u], srcAssign[v]);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                }</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            }</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keyword">auto</span> dep = deps[i]<a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a44ff7c580f8709701e476adb60daa220">[</a>0<a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#a44ff7c580f8709701e476adb60daa220">]</a>;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            uint32_t a = dep<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml#a79841bfc527c14f4c1faeb37e2c4c1ee">.</a><a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml#a79841bfc527c14f4c1faeb37e2c4c1ee">mFrom</a>, b = dep<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml#a87771188e9aacbd64ccd94e9b9524135">.</a><a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml#a87771188e9aacbd64ccd94e9b9524135">mTo</a>;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            uint32_t u = tgt[a], v = tgt[b];</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keyword">auto</span> assign = <a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">GenAssignment</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">(</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">size</a><a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">(</a><a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">)</a><a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">,</a> tgt<a class="code" href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">)</a>;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml">Operation</a> operation;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aace719bbdaaef0e8787f8a0032a676d8">hasEdge</a><a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aace719bbdaaef0e8787f8a0032a676d8">(</a>u<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aace719bbdaaef0e8787f8a0032a676d8">,</a> v<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aace719bbdaaef0e8787f8a0032a676d8">)</a>)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                operation = { <a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml">Operation</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adfad524e27630088f14e4334a0ed385c">::</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adfad524e27630088f14e4334a0ed385c">K_OP_CNOT</a>, a, b };</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>-&gt;<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">isReverseEdge</a><a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">(</a>u<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">,</a> v<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">)</a>)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                operation = { <a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml">Operation</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adf6090959dc5eaaa4fe429aa4c4bfe06">::</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adf6090959dc5eaaa4fe429aa4c4bfe06">K_OP_REV</a>, a, b };</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">else</span> {</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="keyword">auto</span> path = finder-&gt;<a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a4a91e28940313cb585654f5214187cac">find</a><a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a4a91e28940313cb585654f5214187cac">(</a><a class="code" href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">mArchGraph</a>.get()<a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a4a91e28940313cb585654f5214187cac">,</a> u<a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a4a91e28940313cb585654f5214187cac">,</a> v<a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a4a91e28940313cb585654f5214187cac">)</a>;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                assert(path.size() == 3 &amp;&amp; <span class="stringliteral">&quot;Can&#39;t apply a long cnot.&quot;</span>);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                operation = { <a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml">Operation</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a20b669183f13598bd8a76a795be32afb">::</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a20b669183f13598bd8a76a795be32afb">K_OP_LCNOT</a>, a, b };</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                operation<a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#aff4df6a10452e9b85408315c79d14136">.</a><a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#aff4df6a10452e9b85408315c79d14136">mW</a> = assign[path[1]];</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            }</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            ops.first = deps[i]<a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#abcbc6b75be680c6a35f38a8dbf968edc">.</a><a class="code" href="../../d1/dca/structefd_1_1Dependencies.xhtml#abcbc6b75be680c6a35f38a8dbf968edc">mCallPoint</a>;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            ops.second.push_back(operation);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    }</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordflow">return</span> solution;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;}</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#ad5f8cdf48a8efcfac642ff5ac83feba9">  210</a></span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml">DynprogDepSolver</a>::<a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#ad5f8cdf48a8efcfac642ff5ac83feba9">DynprogDepSolver</a>(<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml">ArchGraph</a>::<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">sRef</a> pGraph)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    : <a class="code" href="../../da/d6e/classefd_1_1DepSolverQAllocator.xhtml">DepSolverQAllocator</a><a class="code" href="../../da/d6e/classefd_1_1DepSolverQAllocator.xhtml#a4ab0f7fa706eec4610c520607831092f">(</a>pGraph<a class="code" href="../../da/d6e/classefd_1_1DepSolverQAllocator.xhtml#a4ab0f7fa706eec4610c520607831092f">)</a> {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;}</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml">DynprogDepSolver</a>::<a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#a0b9d0dc606ac78c1c25703311a9b1d76">uRef</a> <a class="code" href="../../d4/deb/namespaceefd.xhtml">efd</a>::<a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml">DynprogDepSolver</a>::<a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#a38f1223315fbca38be54da6bce7eeacb">Create</a></div><div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#a38f1223315fbca38be54da6bce7eeacb">  215</a></span>&#160;(<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml">ArchGraph</a>::<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">sRef</a> archGraph) {</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#a0b9d0dc606ac78c1c25703311a9b1d76">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml">DynprogDepSolver</a><a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#ad5f8cdf48a8efcfac642ff5ac83feba9">(</a>archGraph<a class="code" href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#ad5f8cdf48a8efcfac642ff5ac83feba9">)</a>);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div><div class="ttc" id="classefd_1_1BFSPathFinder_xhtml_a795602a2f10b312f8917cf0ed4122834"><div class="ttname"><a href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a795602a2f10b312f8917cf0ed4122834">efd::BFSPathFinder::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdoc">Creates one instance of this finder. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d3a/BFSPathFinder_8cpp_source.xhtml#l00060">BFSPathFinder.cpp:60</a></div></div>
<div class="ttc" id="classefd_1_1DepSolverQAllocator_xhtml"><div class="ttname"><a href="../../da/d6e/classefd_1_1DepSolverQAllocator.xhtml">efd::DepSolverQAllocator</a></div><div class="ttdoc">Wrapper for making it easier to implement algorithms for Qubit Allocation. </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/db1/DepSolverQAllocator_8h_source.xhtml#l00011">DepSolverQAllocator.h:11</a></div></div>
<div class="ttc" id="DynprogDepSolver_8cpp_xhtml_a0d146162f9e8a865b915f60c5e6d653a"><div class="ttname"><a href="../../d1/d31/DynprogDepSolver_8cpp.xhtml#a0d146162f9e8a865b915f60c5e6d653a">UNREACH</a></div><div class="ttdeci">const uint32_t UNREACH</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00012">DynprogDepSolver.cpp:12</a></div></div>
<div class="ttc" id="structefd_1_1Dep_xhtml"><div class="ttname"><a href="../../d9/d38/structefd_1_1Dep.xhtml">efd::Dep</a></div><div class="ttdoc">Structure for abstracting dependencies. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00017">DependencyBuilderPass.h:17</a></div></div>
<div class="ttc" id="structPermVal_xhtml_ad52c08a9d92f747c54f0c744c8d59a15"><div class="ttname"><a href="../../d7/d65/structPermVal.xhtml#ad52c08a9d92f747c54f0c744c8d59a15">PermVal::idx</a></div><div class="ttdeci">uint32_t idx</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00021">DynprogDepSolver.cpp:21</a></div></div>
<div class="ttc" id="classefd_1_1Graph_xhtml_a64836ad3c96e79e02179787ce3bd42c9"><div class="ttname"><a href="../../db/db3/classefd_1_1Graph.xhtml#a64836ad3c96e79e02179787ce3bd42c9">efd::Graph::succ</a></div><div class="ttdeci">std::set&lt; uint32_t &gt; &amp; succ(uint32_t i)</div><div class="ttdoc">Return the set of succesors of some vertex i. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/dea/Graph_8cpp_source.xhtml#l00040">Graph.cpp:40</a></div></div>
<div class="ttc" id="QbitAllocator_8cpp_xhtml_a37e324531f1d9e6e8b4304b6043309a9"><div class="ttname"><a href="../../d0/d91/QbitAllocator_8cpp.xhtml#a37e324531f1d9e6e8b4304b6043309a9">LCXCost</a></div><div class="ttdeci">efd::Opt&lt; uint32_t &gt; LCXCost(&quot;-lcx-cost&quot;, &quot;Cost of using long cnot gate.&quot;, 10, false)</div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_a010c1fff81b57b9b0ed92619855ce7e3adf6090959dc5eaaa4fe429aa4c4bfe06"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adf6090959dc5eaaa4fe429aa4c4bfe06">efd::Operation::K_OP_REV</a></div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00019">QbitAllocator.h:19</a></div></div>
<div class="ttc" id="structVal_xhtml"><div class="ttname"><a href="../../df/d2f/structVal.xhtml">Val</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00014">DynprogDepSolver.cpp:14</a></div></div>
<div class="ttc" id="classefd_1_1DepSolverQAllocator_xhtml_a4ab0f7fa706eec4610c520607831092f"><div class="ttname"><a href="../../da/d6e/classefd_1_1DepSolverQAllocator.xhtml#a4ab0f7fa706eec4610c520607831092f">efd::DepSolverQAllocator::DepSolverQAllocator</a></div><div class="ttdeci">DepSolverQAllocator(ArchGraph::sRef archGraph)</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d91/DepSolverQAllocator_8cpp_source.xhtml#l00006">DepSolverQAllocator.cpp:6</a></div></div>
<div class="ttc" id="structVal_xhtml_a22760f2794c5b45a26a532716edbb231"><div class="ttname"><a href="../../df/d2f/structVal.xhtml#a22760f2794c5b45a26a532716edbb231">Val::parent</a></div><div class="ttdeci">Val * parent</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00016">DynprogDepSolver.cpp:16</a></div></div>
<div class="ttc" id="structefd_1_1Swap_xhtml_a85a25f0711e9e1f00ef9513bf9cab192"><div class="ttname"><a href="../../d8/d62/structefd_1_1Swap.xhtml#a85a25f0711e9e1f00ef9513bf9cab192">efd::Swap::v</a></div><div class="ttdeci">uint32_t v</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00020">Defs.h:20</a></div></div>
<div class="ttc" id="classefd_1_1DynprogDepSolver_xhtml_afc4e73c904eefb1049eb09e2e1b6fd32"><div class="ttname"><a href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#afc4e73c904eefb1049eb09e2e1b6fd32">efd::DynprogDepSolver::solve</a></div><div class="ttdeci">Solution solve(DepsSet &amp;deps) override</div><div class="ttdoc">Solves the allocation problem, returning a solution. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00054">DynprogDepSolver.cpp:54</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_a8095a13dbb497fcb3cc56c8bcdb135f9"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#a8095a13dbb497fcb3cc56c8bcdb135f9">efd::Dependencies::mDeps</a></div><div class="ttdeci">std::vector&lt; Dep &gt; mDeps</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00028">DependencyBuilderPass.h:28</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a10786b155e3d2d397b9d94227080155a"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">efd::ArchGraph::isReverseEdge</a></div><div class="ttdeci">bool isReverseEdge(uint32_t i, uint32_t j)</div><div class="ttdoc">Returns true if the edge (i, j) is a reverse edge. i.e.: if (i, j) is not in the graph, but (j, i) is. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00073">ArchGraph.cpp:73</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a5b9a652c9403e0dbe7115d9d7f5e7d62"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a5b9a652c9403e0dbe7115d9d7f5e7d62">efd::GenAssignment</a></div><div class="ttdeci">Assign GenAssignment(uint32_t archQ, Mapping mapping, bool fill=true)</div><div class="ttdoc">Generates an assignment mapping (maps the architecture&amp;#39;s qubits to the logical ones) of size archQ...</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00335">QbitAllocator.cpp:335</a></div></div>
<div class="ttc" id="classefd_1_1DynprogDepSolver_xhtml_a38f1223315fbca38be54da6bce7eeacb"><div class="ttname"><a href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#a38f1223315fbca38be54da6bce7eeacb">efd::DynprogDepSolver::Create</a></div><div class="ttdeci">static uRef Create(ArchGraph::sRef archGraph)</div><div class="ttdoc">Create a new instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00215">DynprogDepSolver.cpp:215</a></div></div>
<div class="ttc" id="classefd_1_1QbitAllocator_xhtml_a4d7d13dd12213a9f247d1304472badbd"><div class="ttname"><a href="../../de/d5a/classefd_1_1QbitAllocator.xhtml#a4d7d13dd12213a9f247d1304472badbd">efd::QbitAllocator::mArchGraph</a></div><div class="ttdeci">ArchGraph::sRef mArchGraph</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00069">QbitAllocator.h:69</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml">efd::ArchGraph</a></div><div class="ttdoc">This is the base class for the architectures that this project will be supporting. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d9d/ArchGraph_8h_source.xhtml#l00010">ArchGraph.h:10</a></div></div>
<div class="ttc" id="classefd_1_1DynprogDepSolver_xhtml_ad5f8cdf48a8efcfac642ff5ac83feba9"><div class="ttname"><a href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#ad5f8cdf48a8efcfac642ff5ac83feba9">efd::DynprogDepSolver::DynprogDepSolver</a></div><div class="ttdeci">DynprogDepSolver(ArchGraph::sRef archGraph)</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00210">DynprogDepSolver.cpp:210</a></div></div>
<div class="ttc" id="classefd_1_1ExpTSFinder_xhtml"><div class="ttname"><a href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml">efd::ExpTSFinder</a></div><div class="ttdef"><b>Definition:</b> <a href="../../de/d31/ExpTSFinder_8h_source.xhtml#l00008">ExpTSFinder.h:8</a></div></div>
<div class="ttc" id="classefd_1_1Graph_xhtml_aa85ea20ad74d6a7df7a52c13a9fabe2d"><div class="ttname"><a href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">efd::Graph::size</a></div><div class="ttdeci">uint32_t size() const</div><div class="ttdoc">Return the number of vertices. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/dea/Graph_8cpp_source.xhtml#l00036">Graph.cpp:36</a></div></div>
<div class="ttc" id="classefd_1_1ExpTSFinder_xhtml_ac0c3335eda8fc8acd94ccd93f66e495a"><div class="ttname"><a href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#ac0c3335eda8fc8acd94ccd93f66e495a">efd::ExpTSFinder::mAssigns</a></div><div class="ttdeci">std::vector&lt; Assign &gt; mAssigns</div><div class="ttdef"><b>Definition:</b> <a href="../../de/d31/ExpTSFinder_8h_source.xhtml#l00021">ExpTSFinder.h:21</a></div></div>
<div class="ttc" id="structefd_1_1Dep_xhtml_a87771188e9aacbd64ccd94e9b9524135"><div class="ttname"><a href="../../d9/d38/structefd_1_1Dep.xhtml#a87771188e9aacbd64ccd94e9b9524135">efd::Dep::mTo</a></div><div class="ttdeci">uint32_t mTo</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00019">DependencyBuilderPass.h:19</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml">efd::Operation</a></div><div class="ttdoc">Struct used to describe the operation chosen for each solving each dependency. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00015">QbitAllocator.h:15</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_a162d900ef6a43cdd8e1097808f1f43c9"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#a162d900ef6a43cdd8e1097808f1f43c9">efd::Dependencies::getSize</a></div><div class="ttdeci">uint32_t getSize() const</div><div class="ttdoc">Forwards to the mDeps attribute. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00014">DependencyBuilderPass.cpp:14</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_a010c1fff81b57b9b0ed92619855ce7e3a20b669183f13598bd8a76a795be32afb"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a20b669183f13598bd8a76a795be32afb">efd::Operation::K_OP_LCNOT</a></div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00020">QbitAllocator.h:20</a></div></div>
<div class="ttc" id="namespaceefd_xhtml"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml">efd</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00012">Nodes.h:12</a></div></div>
<div class="ttc" id="structVal_xhtml_a71d45d5e04854745eadd25c28449e045"><div class="ttname"><a href="../../df/d2f/structVal.xhtml#a71d45d5e04854745eadd25c28449e045">Val::cost</a></div><div class="ttdeci">uint32_t cost</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00017">DynprogDepSolver.cpp:17</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_a44ff7c580f8709701e476adb60daa220"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#a44ff7c580f8709701e476adb60daa220">efd::Dependencies::operator[]</a></div><div class="ttdeci">Dep &amp; operator[](uint32_t i)</div><div class="ttdoc">Forwards to the mDeps attribute. </div><div class="ttdef"><b>Definition:</b> <a href="../../da/dcd/DependencyBuilderPass_8cpp_source.xhtml#l00022">DependencyBuilderPass.cpp:22</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml_a64f9421919034b63bbf5b014c2de4130"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml#a64f9421919034b63bbf5b014c2de4130">efd::Node::Ref</a></div><div class="ttdeci">Node * Ref</div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00041">Nodes.h:41</a></div></div>
<div class="ttc" id="classefd_1_1DynprogDepSolver_xhtml"><div class="ttname"><a href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml">efd::DynprogDepSolver</a></div><div class="ttdoc">Implementation of DepSolverQAllocator that uses dynamic programming to obtain an optimal solution...</div><div class="ttdef"><b>Definition:</b> <a href="../../d7/db4/DynprogDepSolver_8h_source.xhtml#l00014">DynprogDepSolver.h:14</a></div></div>
<div class="ttc" id="structPermVal_xhtml_a5468c28e9f01d2c98e9919eea12eaa56"><div class="ttname"><a href="../../d7/d65/structPermVal.xhtml#a5468c28e9f01d2c98e9919eea12eaa56">PermVal::perm</a></div><div class="ttdeci">std::vector&lt; uint32_t &gt; perm</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00022">DynprogDepSolver.cpp:22</a></div></div>
<div class="ttc" id="classefd_1_1ExpTSFinder_xhtml_a35a44b5b9217452b564e5e519f977a30"><div class="ttname"><a href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a35a44b5b9217452b564e5e519f977a30">efd::ExpTSFinder::find</a></div><div class="ttdeci">SwapSeq find(Assign from, Assign to) override</div><div class="ttdoc">Finds a swap sequence to reach to from from. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d47/ExpTSFinder_8cpp_source.xhtml#l00097">ExpTSFinder.cpp:97</a></div></div>
<div class="ttc" id="classefd_1_1Graph_xhtml_aace719bbdaaef0e8787f8a0032a676d8"><div class="ttname"><a href="../../db/db3/classefd_1_1Graph.xhtml#aace719bbdaaef0e8787f8a0032a676d8">efd::Graph::hasEdge</a></div><div class="ttdeci">bool hasEdge(uint32_t i, uint32_t j)</div><div class="ttdoc">Returns true whether it has an edge (i, j). </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/dea/Graph_8cpp_source.xhtml#l00059">Graph.cpp:59</a></div></div>
<div class="ttc" id="classefd_1_1DynprogDepSolver_xhtml_a0b9d0dc606ac78c1c25703311a9b1d76"><div class="ttname"><a href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#a0b9d0dc606ac78c1c25703311a9b1d76">efd::DynprogDepSolver::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; DynprogDepSolver &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d7/db4/DynprogDepSolver_8h_source.xhtml#l00017">DynprogDepSolver.h:17</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a8c9131ca43a772179c24fa4dc9701bb2"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a8c9131ca43a772179c24fa4dc9701bb2">efd::ArchGraph::sRef</a></div><div class="ttdeci">std::shared_ptr&lt; ArchGraph &gt; sRef</div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d9d/ArchGraph_8h_source.xhtml#l00014">ArchGraph.h:14</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="../../d8/dcc/namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d2e/WrapperVal_8h_source.xhtml#l00048">WrapperVal.h:48</a></div></div>
<div class="ttc" id="classefd_1_1Opt_xhtml_af670a67c3fd6e0c5cbea732b3749fb14"><div class="ttname"><a href="../../de/d50/classefd_1_1Opt.xhtml#af670a67c3fd6e0c5cbea732b3749fb14">efd::Opt::getVal</a></div><div class="ttdeci">const T &amp; getVal() const</div><div class="ttdoc">Gets a const reference to the value of this command line option. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d41/CommandLine_8h_source.xhtml#l00158">CommandLine.h:158</a></div></div>
<div class="ttc" id="classefd_1_1Node_xhtml"><div class="ttname"><a href="../../d6/d6a/classefd_1_1Node.xhtml">efd::Node</a></div><div class="ttdoc">Base class for AST nodes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/daf/Nodes_8h_source.xhtml#l00039">Nodes.h:39</a></div></div>
<div class="ttc" id="classefd_1_1Graph_xhtml_ac63b24166d3aa01848e0bd2ad9d46f2e"><div class="ttname"><a href="../../db/db3/classefd_1_1Graph.xhtml#ac63b24166d3aa01848e0bd2ad9d46f2e">efd::Graph::pred</a></div><div class="ttdeci">std::set&lt; uint32_t &gt; &amp; pred(uint32_t i)</div><div class="ttdoc">Return the set of predecessors of some vertex i. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/dea/Graph_8cpp_source.xhtml#l00044">Graph.cpp:44</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_a010c1fff81b57b9b0ed92619855ce7e3a46bb7ba2b32ce435a8ffafb2bab56671"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a46bb7ba2b32ce435a8ffafb2bab56671">efd::Operation::K_OP_SWAP</a></div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00021">QbitAllocator.h:21</a></div></div>
<div class="ttc" id="classefd_1_1ExpTSFinder_xhtml_a9ac33b40a256ccd1201dbc41b7a14152"><div class="ttname"><a href="../../d1/d42/classefd_1_1ExpTSFinder.xhtml#a9ac33b40a256ccd1201dbc41b7a14152">efd::ExpTSFinder::ExpTSFinder</a></div><div class="ttdeci">ExpTSFinder(Graph::sRef graph)</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d47/ExpTSFinder_8cpp_source.xhtml#l00093">ExpTSFinder.cpp:93</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_a010c1fff81b57b9b0ed92619855ce7e3adfad524e27630088f14e4334a0ed385c"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adfad524e27630088f14e4334a0ed385c">efd::Operation::K_OP_CNOT</a></div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00018">QbitAllocator.h:18</a></div></div>
<div class="ttc" id="structefd_1_1Solution_xhtml_a61fb88a6c3077b7d1abb47887bd01b11"><div class="ttname"><a href="../../d3/d2a/structefd_1_1Solution.xhtml#a61fb88a6c3077b7d1abb47887bd01b11">efd::Solution::mInitial</a></div><div class="ttdeci">Mapping mInitial</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00039">QbitAllocator.h:39</a></div></div>
<div class="ttc" id="structefd_1_1Dep_xhtml_a79841bfc527c14f4c1faeb37e2c4c1ee"><div class="ttname"><a href="../../d9/d38/structefd_1_1Dep.xhtml#a79841bfc527c14f4c1faeb37e2c4c1ee">efd::Dep::mFrom</a></div><div class="ttdeci">uint32_t mFrom</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00018">DependencyBuilderPass.h:18</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_aff4df6a10452e9b85408315c79d14136"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#aff4df6a10452e9b85408315c79d14136">efd::Operation::mW</a></div><div class="ttdeci">uint32_t mW</div><div class="ttdoc">The intermediate vertex for using the long cnot. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00027">QbitAllocator.h:27</a></div></div>
<div class="ttc" id="structVal_xhtml_a5ffa77ec211d52104a418e69b9d1fcba"><div class="ttname"><a href="../../df/d2f/structVal.xhtml#a5ffa77ec211d52104a418e69b9d1fcba">Val::pId</a></div><div class="ttdeci">uint32_t pId</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00015">DynprogDepSolver.cpp:15</a></div></div>
<div class="ttc" id="structefd_1_1Solution_xhtml_a95fbd5a3cc1c578ed6082a4b4fead836"><div class="ttname"><a href="../../d3/d2a/structefd_1_1Solution.xhtml#a95fbd5a3cc1c578ed6082a4b4fead836">efd::Solution::mCost</a></div><div class="ttdeci">uint32_t mCost</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00041">QbitAllocator.h:41</a></div></div>
<div class="ttc" id="structefd_1_1Swap_xhtml_add0ebbf6822b65844ab5c34a852b62fe"><div class="ttname"><a href="../../d8/d62/structefd_1_1Swap.xhtml#add0ebbf6822b65844ab5c34a852b62fe">efd::Swap::u</a></div><div class="ttdeci">uint32_t u</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00019">Defs.h:19</a></div></div>
<div class="ttc" id="structefd_1_1Solution_xhtml"><div class="ttname"><a href="../../d3/d2a/structefd_1_1Solution.xhtml">efd::Solution</a></div><div class="ttdoc">The solution for the allocation problem. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00034">QbitAllocator.h:34</a></div></div>
<div class="ttc" id="structefd_1_1Solution_xhtml_ab9f13ffebeaa6a3fd9825c5780eeac02"><div class="ttname"><a href="../../d3/d2a/structefd_1_1Solution.xhtml#ab9f13ffebeaa6a3fd9825c5780eeac02">efd::Solution::mOpSeqs</a></div><div class="ttdeci">OpSequences mOpSeqs</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00040">QbitAllocator.h:40</a></div></div>
<div class="ttc" id="QbitAllocator_8cpp_xhtml_a36846d9fb7f5b314db3aa16d72efe81f"><div class="ttname"><a href="../../d0/d91/QbitAllocator_8cpp.xhtml#a36846d9fb7f5b314db3aa16d72efe81f">RevCost</a></div><div class="ttdeci">efd::Opt&lt; uint32_t &gt; RevCost(&quot;-rev-cost&quot;, &quot;Cost of using a reverse edge.&quot;, 4, false)</div></div>
<div class="ttc" id="classefd_1_1BFSPathFinder_xhtml_a4a91e28940313cb585654f5214187cac"><div class="ttname"><a href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a4a91e28940313cb585654f5214187cac">efd::BFSPathFinder::find</a></div><div class="ttdeci">std::vector&lt; uint32_t &gt; find(Graph::Ref g, uint32_t u, uint32_t v) override</div><div class="ttdoc">Searches for a path from u to v in the graph g. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d3a/BFSPathFinder_8cpp_source.xhtml#l00012">BFSPathFinder.cpp:12</a></div></div>
<div class="ttc" id="QbitAllocator_8cpp_xhtml_a99fd7c5ea250372d9b17e42df7764318"><div class="ttname"><a href="../../d0/d91/QbitAllocator_8cpp.xhtml#a99fd7c5ea250372d9b17e42df7764318">SwapCost</a></div><div class="ttdeci">efd::Opt&lt; uint32_t &gt; SwapCost(&quot;-swap-cost&quot;, &quot;Cost of using a swap function.&quot;, 7, false)</div></div>
<div class="ttc" id="structPermVal_xhtml"><div class="ttname"><a href="../../d7/d65/structPermVal.xhtml">PermVal</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00020">DynprogDepSolver.cpp:20</a></div></div>
<div class="ttc" id="classefd_1_1BFSPathFinder_xhtml"><div class="ttname"><a href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml">efd::BFSPathFinder</a></div><div class="ttdoc">Finds swaps for one restriction only. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d2d/BFSPathFinder_8h_source.xhtml#l00008">BFSPathFinder.h:8</a></div></div>
<div class="ttc" id="classefd_1_1DynprogDepSolver_xhtml_a5868e2497ee8e2ebde15c6949b36db6f"><div class="ttname"><a href="../../df/d73/classefd_1_1DynprogDepSolver.xhtml#a5868e2497ee8e2ebde15c6949b36db6f">efd::DynprogDepSolver::getIntermediateV</a></div><div class="ttdeci">uint32_t getIntermediateV(uint32_t u, uint32_t v)</div><div class="ttdoc">Gets the intermediate vertex between &amp;#39;u&amp;#39; and &amp;#39;v&amp;#39;, if there exists one. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d31/DynprogDepSolver_8cpp_source.xhtml#l00041">DynprogDepSolver.cpp:41</a></div></div>
<div class="ttc" id="structefd_1_1Solution_xhtml_aece8d5b7bc71b4f518d0e32b3ab1ec2c"><div class="ttname"><a href="../../d3/d2a/structefd_1_1Solution.xhtml#aece8d5b7bc71b4f518d0e32b3ab1ec2c">efd::Solution::OpVector</a></div><div class="ttdeci">std::vector&lt; Operation &gt; OpVector</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d3b/QbitAllocator_8h_source.xhtml#l00035">QbitAllocator.h:35</a></div></div>
<div class="ttc" id="structefd_1_1Dependencies_xhtml_abcbc6b75be680c6a35f38a8dbf968edc"><div class="ttname"><a href="../../d1/dca/structefd_1_1Dependencies.xhtml#abcbc6b75be680c6a35f38a8dbf968edc">efd::Dependencies::mCallPoint</a></div><div class="ttdeci">Node::Ref mCallPoint</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00029">DependencyBuilderPass.h:29</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue May 1 2018 23:33:45 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
