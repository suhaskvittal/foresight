<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Enfield: lib/Transform/Allocators/Simple/PathGuidedSolBuilder.cpp Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Enfield
   </div>
   <div id="projectbrief">An OpenQASM source-to-source compiler for optimization.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_97aefd0d527b934f1d99a682da8fe6a9.xhtml">lib</a></li><li class="navelem"><a class="el" href="../../dir_582f290f049f08c25ab9fc887a9170ac.xhtml">Transform</a></li><li class="navelem"><a class="el" href="../../dir_06974191db7fbe66527a95ceac77ccfb.xhtml">Allocators</a></li><li class="navelem"><a class="el" href="../../dir_62d2817bb4374ce68e48b9845afe5d8e.xhtml">Simple</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">PathGuidedSolBuilder.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d3/d84/PathGuidedSolBuilder_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dd/de8/PathGuidedSolBuilder_8h.xhtml">enfield/Transform/Allocators/Simple/PathGuidedSolBuilder.h</a>&quot;</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../d7/d2d/BFSPathFinder_8h.xhtml">enfield/Support/BFSPathFinder.h</a>&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="../../dc/d09/Stats_8h.xhtml">enfield/Support/Stats.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">static</span> <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">efd::Stat&lt;uint32_t&gt;</a> TotalSwapCost</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;(<span class="stringliteral">&quot;TotalSwapCost&quot;</span>, <span class="stringliteral">&quot;The total cost yielded by swaps.&quot;</span>);</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">static</span> <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">efd::Stat&lt;double&gt;</a> MeanSwapsSize</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;(<span class="stringliteral">&quot;MeanSwapsSize&quot;</span>, <span class="stringliteral">&quot;The mean of swap sequence size.&quot;</span>);</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">static</span> <a class="code" href="../../d6/d1d/classefd_1_1Stat.xhtml">efd::Stat&lt;uint32_t&gt;</a> SerialSwapsCount</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;(<span class="stringliteral">&quot;SerialSwapsCount&quot;</span>, <span class="stringliteral">&quot;The mean of swap sequence size.&quot;</span>);</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../d7/d38/structDepComp.xhtml">   14</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/d38/structDepComp.xhtml">DepComp</a> {</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../d7/d38/structDepComp.xhtml#aaee5ded6ee1eea4d0ee01f5fec5a9182">   15</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d7/d38/structDepComp.xhtml#aaee5ded6ee1eea4d0ee01f5fec5a9182">operator()</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml">efd::Dep</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml">efd::Dep</a>&amp; rhs)<span class="keyword"> const </span>{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;        <span class="keywordflow">if</span> (lhs.<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml#a79841bfc527c14f4c1faeb37e2c4c1ee">mFrom</a> != rhs.<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml#a79841bfc527c14f4c1faeb37e2c4c1ee">mFrom</a>)</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;            <span class="keywordflow">return</span> lhs.<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml#a79841bfc527c14f4c1faeb37e2c4c1ee">mFrom</a> &lt; rhs.<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml#a79841bfc527c14f4c1faeb37e2c4c1ee">mFrom</a>;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        <span class="keywordflow">return</span> lhs.<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml#a87771188e9aacbd64ccd94e9b9524135">mTo</a> &lt; rhs.<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml#a87771188e9aacbd64ccd94e9b9524135">mTo</a>;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    }</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;};</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a7b01a420ffc06c3a8763d9c80e89a58e">   22</a></span>&#160;<a class="code" href="../../db/d36/structefd_1_1StdSolution.xhtml">efd::StdSolution</a> <a class="code" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a7b01a420ffc06c3a8763d9c80e89a58e">efd::PathGuidedSolBuilder::build</a>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> initial,</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                                               <a class="code" href="../../d7/d30/classefd_1_1SolutionBuilder.xhtml#a9efd344d1f90a92a4c03a96615423097">DepsVector</a>&amp; deps,</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                                               <a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml">ArchGraph::Ref</a> g) {</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a376b6ff79b095f02fa0e2fdd5a593d67">mPathFinder</a>.get() == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <a class="code" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a376b6ff79b095f02fa0e2fdd5a593d67">mPathFinder</a> = <a class="code" href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a795602a2f10b312f8917cf0ed4122834">BFSPathFinder::Create</a>();</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordtype">bool</span> keepStats = <span class="keyword">get</span>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a86abfbd43b436abb77f79e057546835ca30dedc873b8a976ce386642a5b4dc262">SolutionBuilderOptions::KeepStats</a>);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordtype">bool</span> improveInitialMapping = <span class="keyword">get</span>(<a class="code" href="../../d4/deb/namespaceefd.xhtml#a86abfbd43b436abb77f79e057546835ca87b05ab204327971d60c5f4ca3af152f">SolutionBuilderOptions::ImproveInitial</a>);</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <a class="code" href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">Mapping</a> match = initial;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <a class="code" href="../../db/d36/structefd_1_1StdSolution.xhtml">StdSolution</a> solution { initial, <a class="code" href="../../db/d36/structefd_1_1StdSolution.xhtml#a93e644d8ca0ea8e13989dd0e8dae5e57">StdSolution::OpSequences</a>(deps.size()), 0 };</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    std::map&lt;Dep, uint32_t, DepComp&gt; freq;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0, e = deps.size(); i &lt; e; ++i) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml">Dep</a> d = deps[i][0];</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordflow">if</span> (freq.find(d) == freq.end())</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            freq[d] = 0;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        ++freq[d];</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    }</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    std::vector&lt;bool&gt; frozen(g-&gt;<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">size</a>(), <span class="keyword">false</span>);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0, e = deps.size(); i &lt; e; ++i) {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordtype">bool</span> changeInitialMapping = improveInitialMapping;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml">Dep</a> d = deps[i][0];</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keyword">auto</span>&amp; ops = solution.mOpSeqs[i];</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        ops.first = deps[i].mCallPoint;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="comment">// Program qubits (a, b)</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        uint32_t a = d.<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml#a79841bfc527c14f4c1faeb37e2c4c1ee">mFrom</a>, b = d.<a class="code" href="../../d9/d38/structefd_1_1Dep.xhtml#a87771188e9aacbd64ccd94e9b9524135">mTo</a>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="comment">// Physical qubits (u, v)</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        uint32_t u = match[a], v = match[b];</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keyword">auto</span> inv = <a class="code" href="../../d4/deb/namespaceefd.xhtml#adb4ffc373d7273aefb15d2f9dcd4aeb4">InvertMapping</a>(g-&gt;<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">size</a>(), match);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keyword">auto</span> path = <a class="code" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a376b6ff79b095f02fa0e2fdd5a593d67">mPathFinder</a>-&gt;find(g, u, v);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">if</span> (path.size() &gt; 2) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span> u : path) {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                <span class="comment">// In case qubit &#39;u&#39; has&#39;n been assigned to no one, we just change</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                <span class="comment">// the initial mapping here (we already filled the &#39;inv&#39; in line 57)</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                <span class="keywordflow">if</span> (solution.mInitial[inv[u]] == _undef) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    solution.mInitial[inv[u]] = u;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                }</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                <span class="keywordflow">if</span> (frozen[u]) changeInitialMapping = <span class="keyword">false</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                frozen[u] = <span class="keyword">true</span>;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = path.size() - 2; i &gt;= 1; --i) {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                uint32_t u = path[i], v = path[i+1];</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                <span class="keywordflow">if</span> (g-&gt;<a class="code" href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">isReverseEdge</a>(u, v))</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    std::swap(u, v);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    </div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                uint32_t a = inv[u], b = inv[v];</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                ops.second.push_back({ <a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a46bb7ba2b32ce435a8ffafb2bab56671">Operation::K_OP_SWAP</a>, a, b });</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    </div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">if</span> (changeInitialMapping) {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    std::swap(solution.mInitial[a], solution.mInitial[b]);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                std::swap(match[a], match[b]);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                std::swap(inv[u], inv[v]);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="comment">// If this is the first mapping</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keywordflow">if</span> (changeInitialMapping) {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                ops.second.clear();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                <span class="keywordflow">if</span> (keepStats) {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    <span class="comment">// ------ Stats</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    SerialSwapsCount += 1;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    MeanSwapsSize += ops.second.size();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                    TotalSwapCost += <a class="code" href="../../d0/df5/IntrinsicGateCostPass_8cpp.xhtml#a99fd7c5ea250372d9b17e42df7764318">SwapCost</a>.getVal() * ops.second.size();</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                    <span class="comment">// --------------------</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                solution.mCost += (<a class="code" href="../../d0/df5/IntrinsicGateCostPass_8cpp.xhtml#a99fd7c5ea250372d9b17e42df7764318">SwapCost</a>.getVal() * ops.second.size());</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            u = match[a], v = match[b];</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">if</span> (g-&gt;<a class="code" href="../../db/db3/classefd_1_1Graph.xhtml#aace719bbdaaef0e8787f8a0032a676d8">hasEdge</a>(u, v)) {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            ops.second.push_back({ <a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adfad524e27630088f14e4334a0ed385c">Operation::K_OP_CNOT</a>, a, b });</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            solution.mCost += <a class="code" href="../../d0/df5/IntrinsicGateCostPass_8cpp.xhtml#a36846d9fb7f5b314db3aa16d72efe81f">RevCost</a>.getVal();</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            ops.second.push_back({ <a class="code" href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adf6090959dc5eaaa4fe429aa4c4bfe06">Operation::K_OP_REV</a>, a, b });</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        frozen[u] = <span class="keyword">true</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        frozen[v] = <span class="keyword">true</span>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        --freq[d];</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">if</span> (keepStats &amp;&amp; SerialSwapsCount.getVal())</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        MeanSwapsSize /= ((<span class="keywordtype">double</span>) SerialSwapsCount.getVal());</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">return</span> solution;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a5a6770625f75432b0c4b9d24d3895b66">  125</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a5a6770625f75432b0c4b9d24d3895b66">efd::PathGuidedSolBuilder::setPathFinder</a>(<a class="code" href="../../d1/df1/classefd_1_1PathFinder.xhtml#a7aead8a8cb7b3fccce9cb572272cc6df">PathFinder::sRef</a> finder) {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    mPathFinder = finder;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#ab29be5182d0950d188efe473303103d8">  129</a></span>&#160;<a class="code" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a109eaa0267aac310e3a6bef83dbd4228">efd::PathGuidedSolBuilder::uRef</a> <a class="code" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#ab29be5182d0950d188efe473303103d8">efd::PathGuidedSolBuilder::Create</a>() {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a109eaa0267aac310e3a6bef83dbd4228">uRef</a>(<span class="keyword">new</span> <a class="code" href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml">PathGuidedSolBuilder</a>());</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div><div class="ttc" id="classefd_1_1BFSPathFinder_xhtml_a795602a2f10b312f8917cf0ed4122834"><div class="ttname"><a href="../../d8/d45/classefd_1_1BFSPathFinder.xhtml#a795602a2f10b312f8917cf0ed4122834">efd::BFSPathFinder::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdoc">Creates one instance of this finder. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d3a/BFSPathFinder_8cpp_source.xhtml#l00059">BFSPathFinder.cpp:59</a></div></div>
<div class="ttc" id="IntrinsicGateCostPass_8cpp_xhtml_a99fd7c5ea250372d9b17e42df7764318"><div class="ttname"><a href="../../d0/df5/IntrinsicGateCostPass_8cpp.xhtml#a99fd7c5ea250372d9b17e42df7764318">SwapCost</a></div><div class="ttdeci">efd::Opt&lt; uint32_t &gt; SwapCost(&quot;-swap-cost&quot;, &quot;Cost of using a swap function.&quot;, 7, false)</div></div>
<div class="ttc" id="structefd_1_1Dep_xhtml"><div class="ttname"><a href="../../d9/d38/structefd_1_1Dep.xhtml">efd::Dep</a></div><div class="ttdoc">Structure for abstracting dependencies. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00017">DependencyBuilderPass.h:17</a></div></div>
<div class="ttc" id="structefd_1_1StdSolution_xhtml_a93e644d8ca0ea8e13989dd0e8dae5e57"><div class="ttname"><a href="../../db/d36/structefd_1_1StdSolution.xhtml#a93e644d8ca0ea8e13989dd0e8dae5e57">efd::StdSolution::OpSequences</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; Node::Ref, OpVector &gt; &gt; OpSequences</div><div class="ttdef"><b>Definition:</b> <a href="../../d2/dc7/StdSolutionQAllocator_8h_source.xhtml#l00033">StdSolutionQAllocator.h:33</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_a010c1fff81b57b9b0ed92619855ce7e3adf6090959dc5eaaa4fe429aa4c4bfe06"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adf6090959dc5eaaa4fe429aa4c4bfe06">efd::Operation::K_OP_REV</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d2/dc7/StdSolutionQAllocator_8h_source.xhtml#l00016">StdSolutionQAllocator.h:16</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml_a10786b155e3d2d397b9d94227080155a"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml#a10786b155e3d2d397b9d94227080155a">efd::ArchGraph::isReverseEdge</a></div><div class="ttdeci">bool isReverseEdge(uint32_t i, uint32_t j)</div><div class="ttdoc">Returns true if the edge (i, j) is a reverse edge. i.e.: if (i, j) is not in the graph, but (j, i) is. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d51/ArchGraph_8cpp_source.xhtml#l00084">ArchGraph.cpp:84</a></div></div>
<div class="ttc" id="classefd_1_1SolutionBuilder_xhtml_a9efd344d1f90a92a4c03a96615423097"><div class="ttname"><a href="../../d7/d30/classefd_1_1SolutionBuilder.xhtml#a9efd344d1f90a92a4c03a96615423097">efd::SolutionBuilder::DepsVector</a></div><div class="ttdeci">QbitAllocator::DepsVector DepsVector</div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d5d/SimpleQAllocator_8h_source.xhtml#l00030">SimpleQAllocator.h:30</a></div></div>
<div class="ttc" id="classefd_1_1PathGuidedSolBuilder_xhtml_a376b6ff79b095f02fa0e2fdd5a593d67"><div class="ttname"><a href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a376b6ff79b095f02fa0e2fdd5a593d67">efd::PathGuidedSolBuilder::mPathFinder</a></div><div class="ttdeci">PathFinder::sRef mPathFinder</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/de8/PathGuidedSolBuilder_8h_source.xhtml#l00015">PathGuidedSolBuilder.h:15</a></div></div>
<div class="ttc" id="classefd_1_1ArchGraph_xhtml"><div class="ttname"><a href="../../d5/dae/classefd_1_1ArchGraph.xhtml">efd::ArchGraph</a></div><div class="ttdoc">This is the base class for the architectures that this project will be supporting. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d9d/ArchGraph_8h_source.xhtml#l00010">ArchGraph.h:10</a></div></div>
<div class="ttc" id="classefd_1_1Graph_xhtml_aa85ea20ad74d6a7df7a52c13a9fabe2d"><div class="ttname"><a href="../../db/db3/classefd_1_1Graph.xhtml#aa85ea20ad74d6a7df7a52c13a9fabe2d">efd::Graph::size</a></div><div class="ttdeci">uint32_t size() const</div><div class="ttdoc">Return the number of vertices. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/dea/Graph_8cpp_source.xhtml#l00034">Graph.cpp:34</a></div></div>
<div class="ttc" id="classefd_1_1Stat_xhtml"><div class="ttname"><a href="../../d6/d1d/classefd_1_1Stat.xhtml">efd::Stat</a></div><div class="ttdoc">Stats of a given type. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d09/Stats_8h_source.xhtml#l00041">Stats.h:41</a></div></div>
<div class="ttc" id="classefd_1_1PathGuidedSolBuilder_xhtml_a109eaa0267aac310e3a6bef83dbd4228"><div class="ttname"><a href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a109eaa0267aac310e3a6bef83dbd4228">efd::PathGuidedSolBuilder::uRef</a></div><div class="ttdeci">std::unique_ptr&lt; PathGuidedSolBuilder &gt; uRef</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/de8/PathGuidedSolBuilder_8h_source.xhtml#l00012">PathGuidedSolBuilder.h:12</a></div></div>
<div class="ttc" id="structefd_1_1Dep_xhtml_a87771188e9aacbd64ccd94e9b9524135"><div class="ttname"><a href="../../d9/d38/structefd_1_1Dep.xhtml#a87771188e9aacbd64ccd94e9b9524135">efd::Dep::mTo</a></div><div class="ttdeci">uint32_t mTo</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00019">DependencyBuilderPass.h:19</a></div></div>
<div class="ttc" id="PathGuidedSolBuilder_8h_xhtml"><div class="ttname"><a href="../../dd/de8/PathGuidedSolBuilder_8h.xhtml">PathGuidedSolBuilder.h</a></div></div>
<div class="ttc" id="structefd_1_1StdSolution_xhtml"><div class="ttname"><a href="../../db/d36/structefd_1_1StdSolution.xhtml">efd::StdSolution</a></div><div class="ttdoc">The solution for the allocation problem. </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/dc7/StdSolutionQAllocator_8h_source.xhtml#l00031">StdSolutionQAllocator.h:31</a></div></div>
<div class="ttc" id="classefd_1_1Graph_xhtml_aace719bbdaaef0e8787f8a0032a676d8"><div class="ttname"><a href="../../db/db3/classefd_1_1Graph.xhtml#aace719bbdaaef0e8787f8a0032a676d8">efd::Graph::hasEdge</a></div><div class="ttdeci">bool hasEdge(uint32_t i, uint32_t j)</div><div class="ttdoc">Returns true whether it has an edge (i, j). </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/dea/Graph_8cpp_source.xhtml#l00057">Graph.cpp:57</a></div></div>
<div class="ttc" id="classefd_1_1PathFinder_xhtml_a7aead8a8cb7b3fccce9cb572272cc6df"><div class="ttname"><a href="../../d1/df1/classefd_1_1PathFinder.xhtml#a7aead8a8cb7b3fccce9cb572272cc6df">efd::PathFinder::sRef</a></div><div class="ttdeci">std::shared_ptr&lt; PathFinder &gt; sRef</div><div class="ttdef"><b>Definition:</b> <a href="../../de/de3/PathFinder_8h_source.xhtml#l00011">PathFinder.h:11</a></div></div>
<div class="ttc" id="classefd_1_1PathGuidedSolBuilder_xhtml_a5a6770625f75432b0c4b9d24d3895b66"><div class="ttname"><a href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a5a6770625f75432b0c4b9d24d3895b66">efd::PathGuidedSolBuilder::setPathFinder</a></div><div class="ttdeci">void setPathFinder(PathFinder::sRef finder)</div><div class="ttdoc">Sets the path finder to be used. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d84/PathGuidedSolBuilder_8cpp_source.xhtml#l00125">PathGuidedSolBuilder.cpp:125</a></div></div>
<div class="ttc" id="structDepComp_xhtml"><div class="ttname"><a href="../../d7/d38/structDepComp.xhtml">DepComp</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d84/PathGuidedSolBuilder_8cpp_source.xhtml#l00014">PathGuidedSolBuilder.cpp:14</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_a010c1fff81b57b9b0ed92619855ce7e3a46bb7ba2b32ce435a8ffafb2bab56671"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3a46bb7ba2b32ce435a8ffafb2bab56671">efd::Operation::K_OP_SWAP</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d2/dc7/StdSolutionQAllocator_8h_source.xhtml#l00018">StdSolutionQAllocator.h:18</a></div></div>
<div class="ttc" id="structDepComp_xhtml_aaee5ded6ee1eea4d0ee01f5fec5a9182"><div class="ttname"><a href="../../d7/d38/structDepComp.xhtml#aaee5ded6ee1eea4d0ee01f5fec5a9182">DepComp::operator()</a></div><div class="ttdeci">bool operator()(const efd::Dep &amp;lhs, const efd::Dep &amp;rhs) const</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d84/PathGuidedSolBuilder_8cpp_source.xhtml#l00015">PathGuidedSolBuilder.cpp:15</a></div></div>
<div class="ttc" id="BFSPathFinder_8h_xhtml"><div class="ttname"><a href="../../d7/d2d/BFSPathFinder_8h.xhtml">BFSPathFinder.h</a></div></div>
<div class="ttc" id="structefd_1_1Operation_xhtml_a010c1fff81b57b9b0ed92619855ce7e3adfad524e27630088f14e4334a0ed385c"><div class="ttname"><a href="../../dc/d90/structefd_1_1Operation.xhtml#a010c1fff81b57b9b0ed92619855ce7e3adfad524e27630088f14e4334a0ed385c">efd::Operation::K_OP_CNOT</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d2/dc7/StdSolutionQAllocator_8h_source.xhtml#l00015">StdSolutionQAllocator.h:15</a></div></div>
<div class="ttc" id="structefd_1_1Dep_xhtml_a79841bfc527c14f4c1faeb37e2c4c1ee"><div class="ttname"><a href="../../d9/d38/structefd_1_1Dep.xhtml#a79841bfc527c14f4c1faeb37e2c4c1ee">efd::Dep::mFrom</a></div><div class="ttdeci">uint32_t mFrom</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/dcf/DependencyBuilderPass_8h_source.xhtml#l00018">DependencyBuilderPass.h:18</a></div></div>
<div class="ttc" id="classefd_1_1PathGuidedSolBuilder_xhtml_a7b01a420ffc06c3a8763d9c80e89a58e"><div class="ttname"><a href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#a7b01a420ffc06c3a8763d9c80e89a58e">efd::PathGuidedSolBuilder::build</a></div><div class="ttdeci">StdSolution build(Mapping initial, DepsVector &amp;deps, ArchGraph::Ref g) override</div><div class="ttdoc">Constructs a solution (QbitAllocator::Solution) from the mapping initial, with deps dependencies in t...</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d84/PathGuidedSolBuilder_8cpp_source.xhtml#l00022">PathGuidedSolBuilder.cpp:22</a></div></div>
<div class="ttc" id="IntrinsicGateCostPass_8cpp_xhtml_a36846d9fb7f5b314db3aa16d72efe81f"><div class="ttname"><a href="../../d0/df5/IntrinsicGateCostPass_8cpp.xhtml#a36846d9fb7f5b314db3aa16d72efe81f">RevCost</a></div><div class="ttdeci">efd::Opt&lt; uint32_t &gt; RevCost(&quot;-rev-cost&quot;, &quot;Cost of using a reverse edge.&quot;, 4, false)</div></div>
<div class="ttc" id="classefd_1_1PathGuidedSolBuilder_xhtml"><div class="ttname"><a href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml">efd::PathGuidedSolBuilder</a></div><div class="ttdoc">Solves the dependencies by looking at the path in the graph. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/de8/PathGuidedSolBuilder_8h_source.xhtml#l00009">PathGuidedSolBuilder.h:9</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a86abfbd43b436abb77f79e057546835ca87b05ab204327971d60c5f4ca3af152f"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a86abfbd43b436abb77f79e057546835ca87b05ab204327971d60c5f4ca3af152f">efd::SolutionBuilderOptions::ImproveInitial</a></div></div>
<div class="ttc" id="classefd_1_1PathGuidedSolBuilder_xhtml_ab29be5182d0950d188efe473303103d8"><div class="ttname"><a href="../../da/df7/classefd_1_1PathGuidedSolBuilder.xhtml#ab29be5182d0950d188efe473303103d8">efd::PathGuidedSolBuilder::Create</a></div><div class="ttdeci">static uRef Create()</div><div class="ttdoc">Creates an instance of this class. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d84/PathGuidedSolBuilder_8cpp_source.xhtml#l00129">PathGuidedSolBuilder.cpp:129</a></div></div>
<div class="ttc" id="Stats_8h_xhtml"><div class="ttname"><a href="../../dc/d09/Stats_8h.xhtml">Stats.h</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a12a4775008cb8b6242cedc3621d98f9c"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a12a4775008cb8b6242cedc3621d98f9c">efd::Mapping</a></div><div class="ttdeci">std::vector&lt; uint32_t &gt; Mapping</div><div class="ttdoc">Defines the type used for mapping the qubits. </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d73/Defs_8h_source.xhtml#l00011">Defs.h:11</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_a86abfbd43b436abb77f79e057546835ca30dedc873b8a976ce386642a5b4dc262"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#a86abfbd43b436abb77f79e057546835ca30dedc873b8a976ce386642a5b4dc262">efd::SolutionBuilderOptions::KeepStats</a></div></div>
<div class="ttc" id="namespaceefd_xhtml_adb4ffc373d7273aefb15d2f9dcd4aeb4"><div class="ttname"><a href="../../d4/deb/namespaceefd.xhtml#adb4ffc373d7273aefb15d2f9dcd4aeb4">efd::InvertMapping</a></div><div class="ttdeci">InverseMap InvertMapping(uint32_t archQ, Mapping mapping, bool fill=true)</div><div class="ttdoc">Generates an assignment mapping (maps the architecture&amp;#39;s qubits to the logical ones) of size archQ...</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d91/QbitAllocator_8cpp_source.xhtml#l00025">QbitAllocator.cpp:25</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Aug 8 2018 16:39:35 for Enfield by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
